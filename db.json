{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source\\CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source\\manifest.json","path":"manifest.json","modified":1,"renderable":0},{"_id":"source\\favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"source\\start","path":"start","modified":1,"renderable":0},{"_id":"source\\robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"node_modules\\hexo-theme-icarus\\source\\css\\cyberpunk.styl","path":"css/cyberpunk.styl","modified":1,"renderable":1},{"_id":"node_modules\\hexo-theme-icarus\\source\\css\\default.styl","path":"css/default.styl","modified":1,"renderable":1},{"_id":"node_modules\\hexo-theme-icarus\\source\\css\\style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"node_modules\\hexo-theme-icarus\\source\\img\\avatar.png","path":"img/avatar.png","modified":1,"renderable":1},{"_id":"node_modules\\hexo-theme-icarus\\source\\img\\favicon.svg","path":"img/favicon.svg","modified":1,"renderable":1},{"_id":"node_modules\\hexo-theme-icarus\\source\\img\\logo.svg","path":"img/logo.svg","modified":1,"renderable":1},{"_id":"node_modules\\hexo-theme-icarus\\source\\img\\razor-bottom-black.svg","path":"img/razor-bottom-black.svg","modified":1,"renderable":1},{"_id":"node_modules\\hexo-theme-icarus\\source\\img\\og_image.png","path":"img/og_image.png","modified":1,"renderable":1},{"_id":"node_modules\\hexo-theme-icarus\\source\\img\\razor-top-black.svg","path":"img/razor-top-black.svg","modified":1,"renderable":1},{"_id":"node_modules\\hexo-theme-icarus\\source\\js\\animation.js","path":"js/animation.js","modified":1,"renderable":1},{"_id":"node_modules\\hexo-theme-icarus\\source\\js\\back_to_top.js","path":"js/back_to_top.js","modified":1,"renderable":1},{"_id":"node_modules\\hexo-theme-icarus\\source\\js\\column.js","path":"js/column.js","modified":1,"renderable":1},{"_id":"node_modules\\hexo-theme-icarus\\source\\js\\main.js","path":"js/main.js","modified":1,"renderable":1}],"Cache":[{"_id":"source\\404.md","hash":"f88b0b9d7ef4f9d16a8d617bce6a78dc8a18a575","modified":1703879269948},{"_id":"source\\CNAME","hash":"75f4f80a6e9ee0bc6e20ae11bfd3600014d7a2ee","modified":1702497250627},{"_id":"source\\customsite.js","hash":"15a36afed1f9209d91c9cf2b0fa6582d6253b139","modified":1703439539446},{"_id":"source\\manifest.json","hash":"23b7bd41a6a446a086b290640d3e10a21dbb022a","modified":1702497250674},{"_id":"source\\print_version.css","hash":"95705827cb640ccea9ba2c279bb0430e951fdbb6","modified":1704805215281},{"_id":"source\\start","hash":"b65321bac01f48bf325452d6f28bfa2d8b774932","modified":1702497250687},{"_id":"source\\robots.txt","hash":"875885accbfae1174bceb5557a4f4764204e52e8","modified":1702497250683},{"_id":"source\\favicon.ico","hash":"f3a0730789da6a54240098b6350b43d3e70273da","modified":1702473702000},{"_id":"source\\sw.js","hash":"90291744071846f0c59ea5ae4344033aec3999c2","modified":1703692745889},{"_id":"source\\_data\\notification.yml","hash":"48872896433f1d23a6c673706b2231b8bbaac5ae","modified":1702497250630},{"_id":"source\\_data\\author.yml","hash":"0fd05138e62460e4e3fae708c10a747da4d798df","modified":1702576197788},{"_id":"source\\_data\\friends.yml","hash":"44fe1a2a046c5ecdf9108470808ea17114099e77","modified":1702497250629},{"_id":"source\\_data\\sites.yml","hash":"2591eee12aa2c9fba3d58ba7ddb5c59fb0d5b70d","modified":1702497250631},{"_id":"source\\_data\\cdn.yml","hash":"22547f4513a827da42ca8eeafd1758d3bfca0f2e","modified":1703878685657},{"_id":"source\\about\\index.md","hash":"7dc18b7f2da93288c864dc37faede5df83edc53f","modified":1704890253003},{"_id":"source\\_posts\\food\\chocolate-and-prauge-pie.md","hash":"848a5c2f2786d33b365810a2a436378e1da64368","modified":1705687800895},{"_id":"source\\_posts\\food\\cesare-salad.md","hash":"62a2de4dfe9127341170b93996e5f42484e05349","modified":1705686782571},{"_id":"source\\_posts\\food\\arayes-meatinpita.md","hash":"7fa1d47fbb0f6755a316e60dc3f6d6dc8ce3eb93","modified":1705686777004},{"_id":"source\\travel\\index.md","hash":"0add42f855263cbdf3bfdb28e99bc586df36f8ed","modified":1703324188429},{"_id":"source\\_posts\\food\\chocolate-biscuit-cake-recipe.md","hash":"75132ab54cd7ec9fd220ad0a27c888900ca804a6","modified":1705686725949},{"_id":"source\\_posts\\food\\hala-doughnuts.md","hash":"1fffbd57c3f3750ea445f776dfb5d28d9f003bf4","modified":1704885877128},{"_id":"source\\_posts\\test\\code-highlight.md","hash":"06032e62bcbd61cec0d1614a07f4bb8763f6e7cb","modified":1702734922309},{"_id":"source\\_posts\\food\\meatballs-with-green-beans.md","hash":"8df8701824ebbfddffe52c723e91b7b61a8bab0d","modified":1705686711871},{"_id":"source\\_posts\\food\\snowycookies.md","hash":"63c956e19a9fec792afecb3322b2d4de86e3ed56","modified":1705686787026},{"_id":"source\\_posts\\test\\elements.md","hash":"4fbe1619c6407eb5957caacadb15990f51aa7127","modified":1702734927399},{"_id":"source\\_posts\\test\\excerpts.md","hash":"33d1289e5fb65213ddb6a4dd1b8879a08a169bc3","modified":1702734931285},{"_id":"source\\_posts\\test\\2020-03-06-test-url.md","hash":"ce60bdcec9b0c71568c3c35c0b505a993cdc7302","modified":1702734899550},{"_id":"source\\_posts\\test\\gallery-post.md","hash":"5d3fb853dbf00228c75f7409a8d8d58b4906385c","modified":1702734934241},{"_id":"source\\_posts\\test\\hello-world.md","hash":"bc250c4ed322d429c531fc6ec5986740404174eb","modified":1702734938373},{"_id":"source\\_posts\\test\\images.md","hash":"0196e357d5e615852d51252f27dec106eb6de7ae","modified":1702734941445},{"_id":"source\\_posts\\test\\markdown.md","hash":"58f676d43177785aea45fc3824a73b633bd77194","modified":1702734947464},{"_id":"source\\_posts\\test\\link-post.md","hash":"6795bd39d2c8abf16f58480eba0a123680e4e4cf","modified":1702734944509},{"_id":"source\\_posts\\test\\no-title.md","hash":"cfbfe1a1658d40cb8320ba3c9208d5c4ed26b798","modified":1702734949743},{"_id":"source\\_posts\\test\\tag-plugins.md","hash":"ad3e940c54fde9c5b778faa5226342ed6efc4a25","modified":1702734957233},{"_id":"source\\blog\\categories\\index.md","hash":"9065ee05e60f4ce4c677fa5da6d8303821893ddf","modified":1702543821116},{"_id":"source\\blog\\tags\\index.md","hash":"cf17695e473b42cdad1992c66a4047261ec1a306","modified":1702543815109},{"_id":"source\\_posts\\travel\\america\\triptomiami.md","hash":"f69c552e680b621f5af6912f6f56b4d571421384","modified":1705686743776},{"_id":"source\\_posts\\travel\\prauge\\christmas.md","hash":"6536652e83bd306e4ab4ab3cd8efedda9e668d7d","modified":1705686761444},{"_id":"source\\_posts\\travel\\prauge\\chirstmas-markets.md","hash":"e0b92c5687ed7799e0e1b78b93f3328359c14e12","modified":1705686751431},{"_id":"source\\_posts\\travel\\prauge\\kosher-food.md","hash":"49f98375a3eea9e978c1ecc1a9d6320b4b56440b","modified":1705686796129},{"_id":"source\\_posts\\travel\\israel\\yochai-joha-and-the-patriarchs-route.md","hash":"accae0788ab146471727ba6e4a4523c3074c6016","modified":1705686730869},{"_id":"source\\_posts\\travel\\tips\\haaravot-barzel.md","hash":"3149882c322138326f39990fea0e08f6871f4758","modified":1705686770177},{"_id":"node_modules\\hexo-theme-icarus\\layout\\comment\\.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1714766834439},{"_id":"node_modules\\hexo-theme-icarus\\layout\\donate\\.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1714766834441},{"_id":"node_modules\\hexo-theme-icarus\\layout\\misc\\.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1714766834442},{"_id":"node_modules\\hexo-theme-icarus\\layout\\search\\.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1714766834443},{"_id":"node_modules\\hexo-theme-icarus\\layout\\share\\.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1714766834445},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\donate\\.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1714766834427},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\search\\.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1714766834435},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\comment\\.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1714766834424},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\misc\\.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1714766834430},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\share\\.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1714766834438},{"_id":"node_modules\\hexo-theme-icarus\\CONTRIBUTING.md","hash":"70254c6778c1e41bb2ff222bbf3a70b2239b9bc1","modified":1714766834525},{"_id":"node_modules\\hexo-theme-icarus\\LICENSE","hash":"86037e5335a49321fa73b7815cab542057fac944","modified":1714766834446},{"_id":"node_modules\\hexo-theme-icarus\\README.md","hash":"32f9f4fc8cd7ec60b30544bd2e558b593519ae5d","modified":1714766834526},{"_id":"node_modules\\hexo-theme-icarus\\package.json","hash":"18b3b80cf6456697a675721d957362840c1ab949","modified":1714766834486},{"_id":"node_modules\\hexo-theme-icarus\\include\\config.js","hash":"4b8a3096137e0d879fb17972a69630bde38d8212","modified":1714766834454},{"_id":"node_modules\\hexo-theme-icarus\\include\\register.js","hash":"040fed1d0d7e4d8003446d1541bc15a2c4b4e500","modified":1714766834464},{"_id":"node_modules\\hexo-theme-icarus\\include\\dependency.js","hash":"e02471f80db87db43aa7d527176e195b60dc4b99","modified":1714766834457},{"_id":"node_modules\\hexo-theme-icarus\\languages\\es.yml","hash":"38579b8fad4b6997362acc770615bcd85ff20f68","modified":1714766834561},{"_id":"node_modules\\hexo-theme-icarus\\languages\\de.yml","hash":"78421f09961ca0b24756a0688fb2cb2e2696e25f","modified":1714766834559},{"_id":"node_modules\\hexo-theme-icarus\\languages\\fr.yml","hash":"b992b68705f5050a99de926525b3cb40d95c4769","modified":1714766834562},{"_id":"node_modules\\hexo-theme-icarus\\languages\\en.yml","hash":"3d674204d9f723c829226da745afddd180c1131d","modified":1714766834560},{"_id":"node_modules\\hexo-theme-icarus\\languages\\id.yml","hash":"5e48b1d62378cadeb64b88349477726a5c1bae47","modified":1714766834563},{"_id":"node_modules\\hexo-theme-icarus\\languages\\it.yml","hash":"b76999994cda6b08b53d34c3dd67947f164de655","modified":1714766834564},{"_id":"node_modules\\hexo-theme-icarus\\languages\\ko.yml","hash":"e3374265377809c1518114cf352b595840c0b416","modified":1714766834565},{"_id":"node_modules\\hexo-theme-icarus\\languages\\pl.yml","hash":"2e7debb44cd91096f30efc87bf8d6b1d0d0214c9","modified":1714766834567},{"_id":"node_modules\\hexo-theme-icarus\\languages\\ja.yml","hash":"801d9930fef48d6a3f80470d5bed4f3eb78147e6","modified":1714766834565},{"_id":"node_modules\\hexo-theme-icarus\\languages\\pt-BR.yml","hash":"ee8f73350e4c6e2f63b7fc72b34472a6b1e21244","modified":1714766834569},{"_id":"node_modules\\hexo-theme-icarus\\languages\\tk.yml","hash":"ca583168bd2025124a1cd0e977da475d7a7496fd","modified":1714766834572},{"_id":"node_modules\\hexo-theme-icarus\\languages\\sv.yml","hash":"b12eee168c52aac855ffce9f78fe5fd5d6e3970c","modified":1714766834571},{"_id":"node_modules\\hexo-theme-icarus\\languages\\tr.yml","hash":"dd0a7bfe14848d6e1aa229198fe1db03e08e305e","modified":1714766834572},{"_id":"node_modules\\hexo-theme-icarus\\languages\\ru.yml","hash":"9d91358c2acbe7a0f2a25daf7f65b999ff32d068","modified":1714766834570},{"_id":"node_modules\\hexo-theme-icarus\\languages\\zh-CN.yml","hash":"02475ba14afc70dfeaf5678467cee307835e4efa","modified":1714766834574},{"_id":"node_modules\\hexo-theme-icarus\\layout\\categories.jsx","hash":"b8ad43e28a4990d222bfbb95b032f88555492347","modified":1714766834501},{"_id":"node_modules\\hexo-theme-icarus\\languages\\vn.yml","hash":"5f2fffa642110c81d8f529949711c9d19ad6bbbe","modified":1714766834573},{"_id":"node_modules\\hexo-theme-icarus\\layout\\category.jsx","hash":"fd15e4eac32de9ac8687aeb3dbe179ab61375700","modified":1714766834502},{"_id":"node_modules\\hexo-theme-icarus\\languages\\zh-TW.yml","hash":"a6826e0c8cdb9ad286324b682b466a9e2ad78e6f","modified":1714766834575},{"_id":"node_modules\\hexo-theme-icarus\\layout\\archive.jsx","hash":"daf8eca64197709a9dc4a4792c403a32d78bdfae","modified":1714766834498},{"_id":"node_modules\\hexo-theme-icarus\\layout\\index.jsx","hash":"0a84a2348394fa9fc5080dd396bd28d357594f47","modified":1714766834509},{"_id":"node_modules\\hexo-theme-icarus\\layout\\layout.jsx","hash":"ac7c4e3465a116c7f05f8c2e09ee6d6b9467abf1","modified":1714766834510},{"_id":"node_modules\\hexo-theme-icarus\\layout\\page.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1714766834512},{"_id":"node_modules\\hexo-theme-icarus\\layout\\post.jsx","hash":"d26c2db57e5a88d6483a03aeb51cda9d191d8cea","modified":1714766834514},{"_id":"node_modules\\hexo-theme-icarus\\layout\\tag.jsx","hash":"d2f18cac32ca2725d34ccff3f2051c623be6c892","modified":1714766834522},{"_id":"node_modules\\hexo-theme-icarus\\layout\\tags.jsx","hash":"2c42cb64778235dd220c563a27a92108ddc50cc4","modified":1714766834523},{"_id":"node_modules\\hexo-theme-icarus\\scripts\\index.js","hash":"93a79969c7eb47cfac097893cda36368db56902c","modified":1714766834461},{"_id":"node_modules\\hexo-theme-icarus\\include\\migration\\head.js","hash":"7189efe33d18927d3790e8afb06642fb293b8603","modified":1714766834459},{"_id":"node_modules\\hexo-theme-icarus\\include\\migration\\v3_v4.js","hash":"9faf2184d7fe87debfbe007f3fc9079dcbcafcfe","modified":1714766834466},{"_id":"node_modules\\hexo-theme-icarus\\include\\migration\\v2_v3.js","hash":"a46da71c20fa9d73c1bac26fda77717abae1b308","modified":1714766834465},{"_id":"node_modules\\hexo-theme-icarus\\include\\migration\\v5_v5.1.js","hash":"073f22bd16e34b56f016633b1676dab2e7d8843d","modified":1714766834470},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\config.json","hash":"f233678cd656c0e300181ca79dd30cb42fc213b3","modified":1714766834479},{"_id":"node_modules\\hexo-theme-icarus\\include\\migration\\v4_v5.js","hash":"6342310892d113763b5544789b45d44c0ccf2854","modified":1714766834468},{"_id":"node_modules\\hexo-theme-icarus\\include\\util\\console.js","hash":"59cf9d277d3ac85a496689bd811b1c316001641d","modified":1714766834455},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\article.styl","hash":"105c983871b6c9148d97a0f756886e56411572bd","modified":1714766834531},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\base.styl","hash":"2bca6ad099949d52236c87db8db1002ffb99774c","modified":1714766834532},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\button.styl","hash":"0fb35b4786be1b387c751fa2849bc71523fcedd4","modified":1714766834534},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\card.styl","hash":"f78674422eb408cd17c17bbdc3ee1ebe4a453e05","modified":1714766834536},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\codeblock.styl","hash":"ec54dc24eb4d9802d8fefc44c210558bc1641109","modified":1714766834537},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\donate.styl","hash":"8d0af00628c13134b5f30a558608e7bebf18c2ec","modified":1714766834542},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\pagination.styl","hash":"b81bcd7ff915b4e9299533addc01bc4575ec35e3","modified":1714766834546},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\footer.styl","hash":"a4ad715dee38b249538ac6cce94efc9b355a904b","modified":1714766834543},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\plugin.styl","hash":"084843d5a522029e0f84a4fe791fbcb2cabd4c36","modified":1714766834547},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\helper.styl","hash":"9f3393e6122cc9f351091bfab960674e962da343","modified":1714766834544},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\search.styl","hash":"416737e1da4e7e907bd03609b0fee9e2aacfe56c","modified":1714766834550},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\responsive.styl","hash":"207083fe287612cddee6608b541861b14ac8de81","modified":1714766834548},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\widget.styl","hash":"c746902251136544eb3fe523235b3183f4189460","modified":1714766834553},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\timeline.styl","hash":"ea61798a09bffdda07efb93c2ff800b63bddc4c4","modified":1714766834552},{"_id":"node_modules\\hexo-theme-icarus\\include\\style\\navbar.styl","hash":"34f09b144cb46a25ec2cc7260a6c207dd34ff1fe","modified":1714766834546},{"_id":"node_modules\\hexo-theme-icarus\\layout\\common\\comment.jsx","hash":"0610cadb3976954c6f299d30320a93a1bd2a151c","modified":1714766834503},{"_id":"node_modules\\hexo-theme-icarus\\layout\\common\\donates.jsx","hash":"fd52330d582fd122db7f55444c2f3368ff4bd8d7","modified":1714766834505},{"_id":"node_modules\\hexo-theme-icarus\\layout\\common\\article.jsx","hash":"c4fc3c016de42c50614f70538a23359eee905ed3","modified":1714766834499},{"_id":"node_modules\\hexo-theme-icarus\\layout\\common\\footer.jsx","hash":"de966666f1e4ef80e0d15081b2709c3065b246dd","modified":1714766834505},{"_id":"node_modules\\hexo-theme-icarus\\layout\\common\\head.jsx","hash":"ff049c2837a111da775d1661b605dd417614b84c","modified":1714766834507},{"_id":"node_modules\\hexo-theme-icarus\\layout\\common\\navbar.jsx","hash":"d96e501e52861056474659f96ee0206588d8c93a","modified":1714766834511},{"_id":"node_modules\\hexo-theme-icarus\\layout\\common\\plugins.jsx","hash":"2e27800b2a8a87112c96778db858c3419d890b79","modified":1714766834513},{"_id":"node_modules\\hexo-theme-icarus\\layout\\common\\scripts.jsx","hash":"eaec7c7b936197247e5acd73a79ca951da4d82ec","modified":1714766834517},{"_id":"node_modules\\hexo-theme-icarus\\layout\\common\\search.jsx","hash":"1409627d98a92b4f5b2ab829f8e6b50b75d60e53","modified":1714766834519},{"_id":"node_modules\\hexo-theme-icarus\\layout\\common\\widgets.jsx","hash":"7a89ac72a988d13b4714ab78a6dfd5cd8de85d47","modified":1714766834524},{"_id":"node_modules\\hexo-theme-icarus\\layout\\common\\share.jsx","hash":"0fad6f8a91bb5cf678b9ff2d66d2162d61625074","modified":1714766834521},{"_id":"node_modules\\hexo-theme-icarus\\layout\\plugin\\animejs.jsx","hash":"e2aa27c3501a58ef1e91e511557b77395c2c02aa","modified":1714766834496},{"_id":"node_modules\\hexo-theme-icarus\\layout\\plugin\\back_to_top.jsx","hash":"7fc0c5aaabd7d0eaff04cb68ec139442dc3414e8","modified":1714766834500},{"_id":"node_modules\\hexo-theme-icarus\\source\\css\\cyberpunk.styl","hash":"ae17d3528df0c3f089df14a06b7bd82f1bc5fed9","modified":1714766834540},{"_id":"node_modules\\hexo-theme-icarus\\source\\css\\default.styl","hash":"b01da3028e5a1267a40aaae5c86a11187a2259e3","modified":1714766834541},{"_id":"node_modules\\hexo-theme-icarus\\source\\css\\style.styl","hash":"5b9815586e993a6ccbe8cdcfc0c65ea38fc315ac","modified":1714766834551},{"_id":"node_modules\\hexo-theme-icarus\\source\\img\\avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1714766834528},{"_id":"node_modules\\hexo-theme-icarus\\source\\img\\favicon.svg","hash":"16fd847265845063a16596761cddb32926073dd2","modified":1714766834554},{"_id":"node_modules\\hexo-theme-icarus\\source\\img\\logo.svg","hash":"e9b5c1438ddb576693a15d0713b2a1d9ceda4be9","modified":1714766834556},{"_id":"node_modules\\hexo-theme-icarus\\source\\img\\razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1714766834557},{"_id":"node_modules\\hexo-theme-icarus\\source\\img\\og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1714766834530},{"_id":"node_modules\\hexo-theme-icarus\\source\\img\\razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1714766834558},{"_id":"node_modules\\hexo-theme-icarus\\source\\js\\animation.js","hash":"0a8e361c353daa3194f4de3d646b96025d128e1a","modified":1714766834448},{"_id":"node_modules\\hexo-theme-icarus\\source\\js\\back_to_top.js","hash":"d91f10c08c726135a13dfa1f422c49d8764ef03f","modified":1714766834450},{"_id":"node_modules\\hexo-theme-icarus\\source\\js\\column.js","hash":"0baee024ab67474c073a4c41b495f3e7f0df4505","modified":1714766834452},{"_id":"node_modules\\hexo-theme-icarus\\source\\js\\main.js","hash":"37f3b16fbd9668b9496d5f2d9bd9fb22fc6cee27","modified":1714766834462},{"_id":"node_modules\\hexo-theme-icarus\\layout\\widget\\profile.jsx","hash":"0d3a7fd922c12cc45d2c8d26a8f4d3a9a6ed0ae0","modified":1714766834516},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\common\\donates.json","hash":"ae86e6f177bedf4afbe638502c12635027539305","modified":1714766834480},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\common\\article.json","hash":"e2502c39045c6a26ccd8e880858f93e78c7bda35","modified":1714766834475},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\common\\footer.json","hash":"e85c9d7f2579805beb252a1b6345d5a668a13baa","modified":1714766834482},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\common\\comment.json","hash":"f49270b619f5d2c3decde6b0b5a0c3bbab4b54a5","modified":1714766834477},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\common\\navbar.json","hash":"6691e587284c4cf450e0288680d5ff0f3565f090","modified":1714766834485},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\common\\head.json","hash":"98889f059c635e6bdbd51effd04cf1cf44968a66","modified":1714766834483},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\common\\plugins.json","hash":"6036a805749816416850d944f7d64aaae62e5e75","modified":1714766834487},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\common\\search.json","hash":"985fbcbf47054af714ead1a124869d54f2a8b607","modified":1714766834491},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\common\\providers.json","hash":"97ec953d497fb53594227ae98acaef8a8baa91da","modified":1714766834491},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\common\\share.json","hash":"cf4f9ff4fb27c3541b35f57db355c228fa6873e4","modified":1714766834492},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\common\\sidebar.json","hash":"eb241beaec4c73e3085dfb3139ce72e827e20549","modified":1714766834494},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\plugin\\animejs.json","hash":"e62ab6e20bd8862efa1ed32e7c0db0f8acbcfdec","modified":1714766834472},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\plugin\\back_to_top.json","hash":"dc0febab7e7b67075d0ad3f80f5ec8b798b68dea","modified":1714766834476},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\widget\\profile.json","hash":"690ee1b0791cab47ea03cf42b5b4932ed2aa5675","modified":1714766834489},{"_id":"node_modules\\hexo-theme-icarus\\include\\schema\\common\\widgets.json","hash":"cadd9dc942740ecd5037d3943e72f8b6a8399bbe","modified":1714766834495}],"Category":[{"name":"מתכונים","_id":"clvr3ygxc0004o4vx9vy69otn"},{"name":"עוגות","parent":"clvr3ygxc0004o4vx9vy69otn","_id":"clvr3ygxs000no4vxdzga5i0z"},{"name":"סלטים","parent":"clvr3ygxc0004o4vx9vy69otn","_id":"clvr3ygxu000ro4vx0xpjdxgx"},{"name":"עוגיות","parent":"clvr3ygxc0004o4vx9vy69otn","_id":"clvr3ygxw000xo4vx0kryazje"},{"name":"עיקריות","parent":"clvr3ygxc0004o4vx9vy69otn","_id":"clvr3ygy0001bo4vx2vk564dy"},{"name":"טיולים","_id":"clvr3ygy4001uo4vxgt3maqcq"},{"name":"ארצות הברית","parent":"clvr3ygy4001uo4vxgt3maqcq","_id":"clvr3ygy8002go4vx6n1qffp7"},{"name":"פראג","parent":"clvr3ygy4001uo4vxgt3maqcq","_id":"clvr3ygy8002jo4vxe20se00e"},{"name":"ישראל","parent":"clvr3ygy4001uo4vxgt3maqcq","_id":"clvr3ygya002uo4vx0r259spx"}],"Data":[{"_id":"author","data":{"kolhatop":{"name":"צוות כל הטופ","avatar":"https://cdn.jsdelivr.net/gh/OfirApps/files@main/favicon/favicon-150x150.png","url":"https://kolha.top/about"}}},{"_id":"notification","data":{"oldversion":{"title":"Expired document","message":"This document is too old. If you are using a new version of the theme, please check the new version of the document.","position":"right","theme":"warning","cache":false,"buttons":[{"title":"View the latest version of the document","url":"/getting-started/","dismiss":false}]}}},{"_id":"friends","data":[{"group":null,"description":null,"items":[{"title":null,"avatar":null,"url":null,"screenshot":null,"keywords":null,"description":null},{"title":null,"avatar":null,"url":null,"screenshot":null,"keywords":null,"description":null}]}]},{"_id":"cdn","data":{"fontawesome":{"name":"@fortawesome/fontawesome-pro","file":"css/all.min.css","version":"6.1.1","npm":false,"static":true,"cdnjs":true}}},{"_id":"sites","data":{"test_demo":{"title":null,"description":null,"items":[{"title":"volantis-x.js.org","url":"https://volantis-x.js.org/","screenshot":"https://7.dusays.com/2021/01/26/308758c15420f.png","avatar":"https://cdn.jsdelivr.net/gh/volantis-x/cdn-org/blog/favicon/apple-touch-icon.png","description":"Test Site For Development"}]},"examples":{"title":null,"description":null,"api":"https://issues-api.vercel.app","repo":"volantis-x/examples"}}}],"Page":[{"_content":"ALL COPYRIGHT RESERVED","source":"customsite.js","raw":"ALL COPYRIGHT RESERVED","date":"2023-12-24T17:38:59.446Z","updated":"2023-12-24T17:38:59.446Z","path":"customsite.js","layout":"false","title":"","comments":1,"_id":"clvr3ygwz0000o4vx9lr68pqb","content":"ALL COPYRIGHT RESERVED"},{"cover":true,"robots":"noindex,nofollow","sitemap":false,"layout":"page","seo_title":"404 העמוד הזה לא נמצא","bottom_meta":false,"sidebar":[],"disqus":{"path":"/404.html","placeholder":"העמוד לא נמצא","enabled":false},"comments":0,"_content":"\n{% p logo center huge, 404 %}\n{% p center bold, העמוד שחיפשתם אינו קיים %}\n{% p center small, יכול להיות שכתבתם את הכתובת בצורה לא נכונה או שהעמוד נמחק.. %}\n","source":"404.md","raw":"---\ncover: true\nrobots: noindex,nofollow\nsitemap: false\nlayout: page\nseo_title: 404 העמוד הזה לא נמצא\nbottom_meta: false\nsidebar: []\ndisqus:\n  path: /404.html\n  placeholder: העמוד לא נמצא\n  enabled: false\ncomments: false\n---\n\n{% p logo center huge, 404 %}\n{% p center bold, העמוד שחיפשתם אינו קיים %}\n{% p center small, יכול להיות שכתבתם את הכתובת בצורה לא נכונה או שהעמוד נמחק.. %}\n","date":"2023-12-29T19:47:49.948Z","updated":"2023-12-29T19:47:49.948Z","path":"404.html","title":"","_id":"clvr3ygxa0002o4vx66c0b9tk"},{"_content":".cover-wrapper.dock .menu {\n    display: none !important;\n}\nimg {\n    display: block !important;\n}\n.top {\n    display: none;\n}\n.asw-container {\n    display: none;\n}\n\n","source":"print_version.css","raw":".cover-wrapper.dock .menu {\n    display: none !important;\n}\nimg {\n    display: block !important;\n}\n.top {\n    display: none;\n}\n.asw-container {\n    display: none;\n}\n\n","date":"2024-01-09T13:00:15.281Z","updated":"2024-01-09T13:00:15.281Z","path":"print_version.css","layout":"false","title":"","comments":1,"_id":"clvr3ygxe0006o4vxdozz56il","content":".cover-wrapper.dock .menu {\n    display: none !important;\n}\nimg {\n    display: block !important;\n}\n.top {\n    display: none;\n}\n.asw-container {\n    display: none;\n}\n\n"},{"_content":"importScripts('https://cdn.jsdelivr.net/npm/workbox-cdn@5.1.3/workbox/workbox-sw.js');\n\nworkbox.setConfig({\n    modulePathPrefix: 'https://cdn.jsdelivr.net/npm/workbox-cdn@5.1.3/workbox/'\n});\n\nconst { core, precaching, routing, strategies, expiration, cacheableResponse, backgroundSync } = workbox;\nconst { CacheFirst, NetworkFirst, NetworkOnly, StaleWhileRevalidate } = strategies;\nconst { ExpirationPlugin } = expiration;\nconst { CacheableResponsePlugin } = cacheableResponse;\n\nconst cacheSuffixVersion = '-000010', // 缓存版本号 极端重要，修改静态文件后发布网页一定要修改缓存版本号\n    maxEntries = 100;\n\nself.addEventListener('activate', (event) => {\n    event.waitUntil(\n        caches.keys().then((keys) => {\n            return Promise.all(keys.map((key) => {\n                if (!key.includes(cacheSuffixVersion)) return caches.delete(key);\n            }));\n        })\n    );\n});\n\n\ncore.setCacheNameDetails({\n    prefix: 'volantis', // 极端重要 自己拟定一个名字\n    suffix: cacheSuffixVersion\n});\n\ncore.skipWaiting();\ncore.clientsClaim();\nprecaching.cleanupOutdatedCaches();\n\n/*\n * Precache\n * - Static Assets\n */\nprecaching.precacheAndRoute( // 极端重要 定义首次缓存的静态文件\n    [\n        { url: '/css/first.css', revision: null },\n        { url: '/css/style.css', revision: null },\n        { url: '/js/app.js', revision: null },\n    ],\n);\n\n/*\n * Cache File From CDN\n *\n * Method: CacheFirst\n * cacheName: static-immutable\n * cacheTime: 30d\n */\n\n// cdn.jsdelivr.net - cors enabled\nrouting.registerRoute(\n    /.*cdn\\.jsdelivr\\.net/,\n    new CacheFirst({\n        cacheName: 'static-immutable' + cacheSuffixVersion,\n        fetchOptions: {\n            mode: 'cors',\n            credentials: 'omit'\n        },\n        plugins: [\n            new ExpirationPlugin({\n                maxAgeSeconds: 30 * 24 * 60 * 60,\n                purgeOnQuotaError: true\n            })\n        ]\n    })\n);\n\n// m7.music.126.net - cors enabled\nrouting.registerRoute(\n    /.*m7\\.music\\.126\\.net/,\n    new CacheFirst({\n        cacheName: 'static-immutable' + cacheSuffixVersion,\n        fetchOptions: {\n            mode: 'cors',\n            credentials: 'omit'\n        },\n        plugins: [\n            new ExpirationPlugin({\n                maxAgeSeconds: 30 * 24 * 60 * 60,\n                purgeOnQuotaError: true\n            })\n        ]\n    })\n);\n\n/*\n *  No Cache\n *\n * Method: networkOnly\n */\nrouting.registerRoute(\n    /.*google\\.com.*/,\n    new NetworkOnly()\n);\n/*\n * Others img fonts\n * Method: staleWhileRevalidate\n */\nrouting.registerRoute(\n    // Cache image fonts files\n    /.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)/,\n    new StaleWhileRevalidate()\n);\n\n/*\n * Static Assets\n * Method: staleWhileRevalidate\n */\nrouting.registerRoute(\n    // Cache CSS files\n    /.*\\.(css|js)/,\n    // Use cache but update in the background ASAP\n    new StaleWhileRevalidate()\n);\n\n/*\n * sw.js - Revalidate every time\n * staleWhileRevalidate\n */\nrouting.registerRoute(\n    '/sw.js', // 本文件名\n    new StaleWhileRevalidate()\n);\n\n/*\n * Default - Serve as it is\n * networkFirst\n */\nrouting.setDefaultHandler(\n    new NetworkFirst({\n        networkTimeoutSeconds: 3\n    })\n);\n","source":"sw.js","raw":"importScripts('https://cdn.jsdelivr.net/npm/workbox-cdn@5.1.3/workbox/workbox-sw.js');\n\nworkbox.setConfig({\n    modulePathPrefix: 'https://cdn.jsdelivr.net/npm/workbox-cdn@5.1.3/workbox/'\n});\n\nconst { core, precaching, routing, strategies, expiration, cacheableResponse, backgroundSync } = workbox;\nconst { CacheFirst, NetworkFirst, NetworkOnly, StaleWhileRevalidate } = strategies;\nconst { ExpirationPlugin } = expiration;\nconst { CacheableResponsePlugin } = cacheableResponse;\n\nconst cacheSuffixVersion = '-000010', // 缓存版本号 极端重要，修改静态文件后发布网页一定要修改缓存版本号\n    maxEntries = 100;\n\nself.addEventListener('activate', (event) => {\n    event.waitUntil(\n        caches.keys().then((keys) => {\n            return Promise.all(keys.map((key) => {\n                if (!key.includes(cacheSuffixVersion)) return caches.delete(key);\n            }));\n        })\n    );\n});\n\n\ncore.setCacheNameDetails({\n    prefix: 'volantis', // 极端重要 自己拟定一个名字\n    suffix: cacheSuffixVersion\n});\n\ncore.skipWaiting();\ncore.clientsClaim();\nprecaching.cleanupOutdatedCaches();\n\n/*\n * Precache\n * - Static Assets\n */\nprecaching.precacheAndRoute( // 极端重要 定义首次缓存的静态文件\n    [\n        { url: '/css/first.css', revision: null },\n        { url: '/css/style.css', revision: null },\n        { url: '/js/app.js', revision: null },\n    ],\n);\n\n/*\n * Cache File From CDN\n *\n * Method: CacheFirst\n * cacheName: static-immutable\n * cacheTime: 30d\n */\n\n// cdn.jsdelivr.net - cors enabled\nrouting.registerRoute(\n    /.*cdn\\.jsdelivr\\.net/,\n    new CacheFirst({\n        cacheName: 'static-immutable' + cacheSuffixVersion,\n        fetchOptions: {\n            mode: 'cors',\n            credentials: 'omit'\n        },\n        plugins: [\n            new ExpirationPlugin({\n                maxAgeSeconds: 30 * 24 * 60 * 60,\n                purgeOnQuotaError: true\n            })\n        ]\n    })\n);\n\n// m7.music.126.net - cors enabled\nrouting.registerRoute(\n    /.*m7\\.music\\.126\\.net/,\n    new CacheFirst({\n        cacheName: 'static-immutable' + cacheSuffixVersion,\n        fetchOptions: {\n            mode: 'cors',\n            credentials: 'omit'\n        },\n        plugins: [\n            new ExpirationPlugin({\n                maxAgeSeconds: 30 * 24 * 60 * 60,\n                purgeOnQuotaError: true\n            })\n        ]\n    })\n);\n\n/*\n *  No Cache\n *\n * Method: networkOnly\n */\nrouting.registerRoute(\n    /.*google\\.com.*/,\n    new NetworkOnly()\n);\n/*\n * Others img fonts\n * Method: staleWhileRevalidate\n */\nrouting.registerRoute(\n    // Cache image fonts files\n    /.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)/,\n    new StaleWhileRevalidate()\n);\n\n/*\n * Static Assets\n * Method: staleWhileRevalidate\n */\nrouting.registerRoute(\n    // Cache CSS files\n    /.*\\.(css|js)/,\n    // Use cache but update in the background ASAP\n    new StaleWhileRevalidate()\n);\n\n/*\n * sw.js - Revalidate every time\n * staleWhileRevalidate\n */\nrouting.registerRoute(\n    '/sw.js', // 本文件名\n    new StaleWhileRevalidate()\n);\n\n/*\n * Default - Serve as it is\n * networkFirst\n */\nrouting.setDefaultHandler(\n    new NetworkFirst({\n        networkTimeoutSeconds: 3\n    })\n);\n","date":"2023-12-27T15:59:05.889Z","updated":"2023-12-27T15:59:05.889Z","path":"sw.js","layout":"false","title":"","comments":1,"_id":"clvr3ygxf0008o4vx7z1f2nwh","content":"importScripts('https://cdn.jsdelivr.net/npm/workbox-cdn@5.1.3/workbox/workbox-sw.js');\n\nworkbox.setConfig({\n    modulePathPrefix: 'https://cdn.jsdelivr.net/npm/workbox-cdn@5.1.3/workbox/'\n});\n\nconst { core, precaching, routing, strategies, expiration, cacheableResponse, backgroundSync } = workbox;\nconst { CacheFirst, NetworkFirst, NetworkOnly, StaleWhileRevalidate } = strategies;\nconst { ExpirationPlugin } = expiration;\nconst { CacheableResponsePlugin } = cacheableResponse;\n\nconst cacheSuffixVersion = '-000010', // 缓存版本号 极端重要，修改静态文件后发布网页一定要修改缓存版本号\n    maxEntries = 100;\n\nself.addEventListener('activate', (event) => {\n    event.waitUntil(\n        caches.keys().then((keys) => {\n            return Promise.all(keys.map((key) => {\n                if (!key.includes(cacheSuffixVersion)) return caches.delete(key);\n            }));\n        })\n    );\n});\n\n\ncore.setCacheNameDetails({\n    prefix: 'volantis', // 极端重要 自己拟定一个名字\n    suffix: cacheSuffixVersion\n});\n\ncore.skipWaiting();\ncore.clientsClaim();\nprecaching.cleanupOutdatedCaches();\n\n/*\n * Precache\n * - Static Assets\n */\nprecaching.precacheAndRoute( // 极端重要 定义首次缓存的静态文件\n    [\n        { url: '/css/first.css', revision: null },\n        { url: '/css/style.css', revision: null },\n        { url: '/js/app.js', revision: null },\n    ],\n);\n\n/*\n * Cache File From CDN\n *\n * Method: CacheFirst\n * cacheName: static-immutable\n * cacheTime: 30d\n */\n\n// cdn.jsdelivr.net - cors enabled\nrouting.registerRoute(\n    /.*cdn\\.jsdelivr\\.net/,\n    new CacheFirst({\n        cacheName: 'static-immutable' + cacheSuffixVersion,\n        fetchOptions: {\n            mode: 'cors',\n            credentials: 'omit'\n        },\n        plugins: [\n            new ExpirationPlugin({\n                maxAgeSeconds: 30 * 24 * 60 * 60,\n                purgeOnQuotaError: true\n            })\n        ]\n    })\n);\n\n// m7.music.126.net - cors enabled\nrouting.registerRoute(\n    /.*m7\\.music\\.126\\.net/,\n    new CacheFirst({\n        cacheName: 'static-immutable' + cacheSuffixVersion,\n        fetchOptions: {\n            mode: 'cors',\n            credentials: 'omit'\n        },\n        plugins: [\n            new ExpirationPlugin({\n                maxAgeSeconds: 30 * 24 * 60 * 60,\n                purgeOnQuotaError: true\n            })\n        ]\n    })\n);\n\n/*\n *  No Cache\n *\n * Method: networkOnly\n */\nrouting.registerRoute(\n    /.*google\\.com.*/,\n    new NetworkOnly()\n);\n/*\n * Others img fonts\n * Method: staleWhileRevalidate\n */\nrouting.registerRoute(\n    // Cache image fonts files\n    /.*\\.(?:png|jpg|jpeg|svg|gif|webp|ico|eot|ttf|woff|woff2|mp3)/,\n    new StaleWhileRevalidate()\n);\n\n/*\n * Static Assets\n * Method: staleWhileRevalidate\n */\nrouting.registerRoute(\n    // Cache CSS files\n    /.*\\.(css|js)/,\n    // Use cache but update in the background ASAP\n    new StaleWhileRevalidate()\n);\n\n/*\n * sw.js - Revalidate every time\n * staleWhileRevalidate\n */\nrouting.registerRoute(\n    '/sw.js', // 本文件名\n    new StaleWhileRevalidate()\n);\n\n/*\n * Default - Serve as it is\n * networkFirst\n */\nrouting.setDefaultHandler(\n    new NetworkFirst({\n        networkTimeoutSeconds: 3\n    })\n);\n"},{"seo_title":"טיולים","cover":true,"sidebar":[],"link":"https://kolha.top/categories/demo/","_content":"\n<center>\n{% span large yellow, כל ה %}\n{% span large green,טיולים %}\n</center>\n<br>\n\n## דפים ממולצים\n<div class=\"tag-plugin sites-wrap\"><div class=\"sitesjs-wrap\"><div class=\"group-body\">\n<div class=\"site-card\">\n<a class=\"card-link\" href=\"https://kolha.top/travel/tips/haaravot-barzel\">\n<img src=\"https://i.imgur.com/ppT2gvt.jpg\" onerror=\"errorImgCover(this)\"/>\n<div class=\"info\">\n<img src=\"https://cdn.jsdelivr.net/gh/OfirApps/files@main/ibb-protected-url.webp\" onerror=\"errorImgAvatar(this)\"/>\n<span class=\"title\"> טיול אחרי המלחמה</span>\n<span class=\"desc\"> אנחנו יודעים עד כמה כולם רוצים לטוס,  ולכן הכנו לכם רשימה של מדינות שעומדות לצד ישראל במלחמה, ומכילות גם נופים מרהיבים ואטרקציות נהדרות.</span>\n</div>\n</a></div>\n</div>\n</div>\n\n<br>\n\n\n<!-- more -->\n\n<br><br>\n\n{% timeline how to add your own blog link %}\n\n{% timenode Step 1: Create a new [Issue](https://github.com/volantis-x/examples/issues/) Fill in and submit according to the format %}\n\n```json\n{\n     \"title\": \"\",\n     \"description\": \"\",\n     \"screenshot\": \"\",\n     \"url\": \"\",\n     \"avatar\": \"\",\n     \"version\": \"版本：^4.0\"\n}\n```\n\nIn order to improve the image loading speed, it is recommended to optimize the image size:\n1. Open [compressed image](https://www.yasuotu.com/) to upload your own screenshot, adjust the height of the image to `360px` and download it.\n2. Upload the compressed picture to [去不图床](https://7bu.top/) and use the picture link as the screenshot link.\n\n{% endtimenode %}\n\n{% timenode Step 2: Refresh %}\n\nCome back and refresh to take effect.\n\n{% endtimenode %}\n\n{% endtimeline %}\n\n{% p h2, how to update my blog link %}\n\n- If the issue is created by yourself, you can modify it yourself.\n- If it was created by the administrator, please create a new one by yourself, and then ask the administrator to delete the old one.","source":"travel/index.md","raw":"---\nseo_title: טיולים\ncover: true\nsidebar: []\nlink: https://kolha.top/categories/demo/\n---\n\n<center>\n{% span large yellow, כל ה %}\n{% span large green,טיולים %}\n</center>\n<br>\n\n## דפים ממולצים\n<div class=\"tag-plugin sites-wrap\"><div class=\"sitesjs-wrap\"><div class=\"group-body\">\n<div class=\"site-card\">\n<a class=\"card-link\" href=\"https://kolha.top/travel/tips/haaravot-barzel\">\n<img src=\"https://i.imgur.com/ppT2gvt.jpg\" onerror=\"errorImgCover(this)\"/>\n<div class=\"info\">\n<img src=\"https://cdn.jsdelivr.net/gh/OfirApps/files@main/ibb-protected-url.webp\" onerror=\"errorImgAvatar(this)\"/>\n<span class=\"title\"> טיול אחרי המלחמה</span>\n<span class=\"desc\"> אנחנו יודעים עד כמה כולם רוצים לטוס,  ולכן הכנו לכם רשימה של מדינות שעומדות לצד ישראל במלחמה, ומכילות גם נופים מרהיבים ואטרקציות נהדרות.</span>\n</div>\n</a></div>\n</div>\n</div>\n\n<br>\n\n\n<!-- more -->\n\n<br><br>\n\n{% timeline how to add your own blog link %}\n\n{% timenode Step 1: Create a new [Issue](https://github.com/volantis-x/examples/issues/) Fill in and submit according to the format %}\n\n```json\n{\n     \"title\": \"\",\n     \"description\": \"\",\n     \"screenshot\": \"\",\n     \"url\": \"\",\n     \"avatar\": \"\",\n     \"version\": \"版本：^4.0\"\n}\n```\n\nIn order to improve the image loading speed, it is recommended to optimize the image size:\n1. Open [compressed image](https://www.yasuotu.com/) to upload your own screenshot, adjust the height of the image to `360px` and download it.\n2. Upload the compressed picture to [去不图床](https://7bu.top/) and use the picture link as the screenshot link.\n\n{% endtimenode %}\n\n{% timenode Step 2: Refresh %}\n\nCome back and refresh to take effect.\n\n{% endtimenode %}\n\n{% endtimeline %}\n\n{% p h2, how to update my blog link %}\n\n- If the issue is created by yourself, you can modify it yourself.\n- If it was created by the administrator, please create a new one by yourself, and then ask the administrator to delete the old one.","date":"2023-12-23T09:36:28.429Z","updated":"2023-12-23T09:36:28.429Z","path":"travel/index.html","title":"","comments":1,"layout":"page","_id":"clvr3ygxh000ao4vx1qsz5nr7"},{"seo_title":"מידע על האתר","short_title":"עלי","layout":"page","title":"מידע על האתר","sidebar":["toc"],"description":"כל הטופ הוא בלוג המכיל סיקורים המלצות וחדשות על מגוון של נושאים","_content":"\n<p>\n{% span logo center large, כל הטופ %}\n<!-- {% span center small logo, רק הטופ וכל מה שיש ממנו %} -->\n</p>\n<br>\n\n**[כל הטופ](https://kolha.top) הוא בלוג המכיל סיקורים, המלצות וחדשות על מגוון של נושאים**\n\n<!-- {} link example blog, https://volantis.js.org/examples/ %} -->\n<a id=\"ayala\"></a>\n## מי אני\nשלום לכולם, אני איילה! ואני פשוט מאוהבת בחיים! אני אוהבת לטייל, לגלות מקומות חדשים, להתנסות במתכונים שלא ניסיתי מעולם ולסקר כל מה שאפשר. זו הסיבה שהקמתי את הבלוג שלי **כל הטופ**.\n בבלוג, אני משתפת את החוויות שלי, המקומות שאני מטיילת בהם, המתכונים שאני מנסה והרעיונות שאני מגלה. אני מזמינה אתכם להצטרף אלי למסע המרתק הזה של חקירה וגילוי. אני מקווה שתהנו מהבלוג שלי כמו שאני נהנית לכתוב אותו. תודה שאתם כאן ומצטרפים אלי למסע! ❤\nלפניות, חששות או שגיאות באתר: [admin@kolha.top](mailto:admin@kolha.top)","source":"about/index.md","raw":"---\nseo_title: מידע על האתר\nshort_title: עלי\nlayout: page\ntitle: מידע על האתר\nsidebar: [toc]\ndescription: כל הטופ הוא בלוג המכיל סיקורים המלצות וחדשות על מגוון של נושאים\n#hidden: true\n---\n\n<p>\n{% span logo center large, כל הטופ %}\n<!-- {% span center small logo, רק הטופ וכל מה שיש ממנו %} -->\n</p>\n<br>\n\n**[כל הטופ](https://kolha.top) הוא בלוג המכיל סיקורים, המלצות וחדשות על מגוון של נושאים**\n\n<!-- {} link example blog, https://volantis.js.org/examples/ %} -->\n<a id=\"ayala\"></a>\n## מי אני\nשלום לכולם, אני איילה! ואני פשוט מאוהבת בחיים! אני אוהבת לטייל, לגלות מקומות חדשים, להתנסות במתכונים שלא ניסיתי מעולם ולסקר כל מה שאפשר. זו הסיבה שהקמתי את הבלוג שלי **כל הטופ**.\n בבלוג, אני משתפת את החוויות שלי, המקומות שאני מטיילת בהם, המתכונים שאני מנסה והרעיונות שאני מגלה. אני מזמינה אתכם להצטרף אלי למסע המרתק הזה של חקירה וגילוי. אני מקווה שתהנו מהבלוג שלי כמו שאני נהנית לכתוב אותו. תודה שאתם כאן ומצטרפים אלי למסע! ❤\nלפניות, חששות או שגיאות באתר: [admin@kolha.top](mailto:admin@kolha.top)","date":"2024-01-10T12:37:33.003Z","updated":"2024-01-10T12:37:33.003Z","path":"about/index.html","comments":1,"_id":"clvr3ygxj000eo4vxbm2jdkv6"},{"title":"קטגוריות","layout":"category","cover":true,"sidebar":[],"_content":"","source":"blog/categories/index.md","raw":"---\ntitle: קטגוריות\nlayout: category\ncover: true\nsidebar: []\n---\n","date":"2023-12-14T08:50:21.116Z","updated":"2023-12-14T08:50:21.116Z","path":"blog/categories/index.html","comments":1,"_id":"clvr3ygxk000go4vx4iqifhc4","content":"","excerpt":"","more":""},{"title":"תגים","layout":"tag","cover":true,"sidebar":[],"_content":"","source":"blog/tags/index.md","raw":"---\ntitle: תגים\nlayout: tag\ncover: true\nsidebar: []\n---\n","date":"2023-12-14T08:50:15.109Z","updated":"2023-12-14T08:50:15.109Z","path":"blog/tags/index.html","comments":1,"_id":"clvr3ygxl000ko4vx4cbrfumh","content":"","excerpt":"","more":""}],"Post":[{"title":"סלט קיסר ביתי כמו במסעדות","description":"בתכלס, אין כמו סלט קיסר! יש את זה בכל מסעדה וזה מגיע יחד עם כל מנה, בתאבון!","date":"2023-12-29T10:00:00.000Z","cover":"https://kolha.top/images/covers/YRAKRkj.jpg","_content":"\nסלט קיסר הוא מנה בסיסית שנמצאת בתפריט של כל מסעדה. אבל אי פעם חשבתם להכין אותו בבית? התוצאה יוצאת מושלם! - סלט קיסר טרי, טעים ומשביע, אני שמחה לשתף איתכם את המתכון הזה, תהנו!\n\n## מצרכים:\n{% matkoning %}\n**רוטב לסלט קיסר:**\n-   6 שיני שום, מועכות וקצוצות\n-   1 כף חרדל דיז’ון\n-   1 כף חומץ\n-   מלח ופלפל שחור טחון\n-   2 כפות מיונז\n-   1/2 כוס שמן זית\n-   מיץ לימון, לתיבול\n-   פילה אנשובי קצוץ, אופציונלי\n**קרוטונים לסלט קיסר:**\n-   בגט או כ3-4 פרוסות לחם\n-   3 כפות חמאה\n-   1 כפית שום בפורמה של אבקה\n-   1 כפית פפריקה\n-   1 כפית פלפל שחור טרי\n**הירקות**\n-   חסה רומנית, להגשה\n-   פרמזן מגוררת באופן טרי, להגשה\n{% divend %}\n## הוראות ההכנה: \n\n**רוטב לסלט:**\n1.  מערבבים היטב את השום, החרדל, החומץ ושני קמצוצי מלח.\n2.  מוסיפים את המיונז ומערבבים יחד כדי ליצור בסיס עבה.\n3.  לאט לאט מוסיפים את שמן הזית דרך החור במכסה.\n4.  מעבירים את הרוטב בקערה בעזרת מרית ומתבלים לפי הטעם עם מלח, פלפל ומיץ לימון.\n5.  אם רוצים, מוסיפים אנשובי לרוטב כדי ליצור טעם מלוח ועמוק יותר.\n\n**קרוטונים לסלט קיסר:**\n1.  חותכים את הבגט או את פרוסות הלחם לקוביות.\n2.  ממיסים את החמאה במחבת ומוסיפים את אבקת השום, הפפריקה והפלפל.\n3.  מוסיפים את קוביות הלחם ומטגנים רק עד שקוביות הלחם מתחילות להשחים.\n4.  מניחים בצד כדי להתקרר.\n\n**הכנת הסלט:**\n1.  שוטפים ומייבשים את החסה.\n2.  בקערת סלט גדולה, מוסיפים יחד לקערה את החסה, הרוטב והקרוטונים.\n3.  אפשר להוסיף פרמזן מגורד למי שאוהב\n4.  מערבבים טוב טוב ומגישים\n\n{% taavon %}\n","source":"_posts/food/cesare-salad.md","raw":"---\ntitle: סלט קיסר ביתי כמו במסעדות\ndescription: בתכלס, אין כמו סלט קיסר! יש את זה בכל מסעדה וזה מגיע יחד עם כל מנה, בתאבון!\ndate: 2023-12-29 12:00:00\ntags: [אוכל, מתכונים, סלטים,כשר]\ncategories: [מתכונים,סלטים]\ncover: https://kolha.top/images/covers/YRAKRkj.jpg\n---\n\nסלט קיסר הוא מנה בסיסית שנמצאת בתפריט של כל מסעדה. אבל אי פעם חשבתם להכין אותו בבית? התוצאה יוצאת מושלם! - סלט קיסר טרי, טעים ומשביע, אני שמחה לשתף איתכם את המתכון הזה, תהנו!\n\n## מצרכים:\n{% matkoning %}\n**רוטב לסלט קיסר:**\n-   6 שיני שום, מועכות וקצוצות\n-   1 כף חרדל דיז’ון\n-   1 כף חומץ\n-   מלח ופלפל שחור טחון\n-   2 כפות מיונז\n-   1/2 כוס שמן זית\n-   מיץ לימון, לתיבול\n-   פילה אנשובי קצוץ, אופציונלי\n**קרוטונים לסלט קיסר:**\n-   בגט או כ3-4 פרוסות לחם\n-   3 כפות חמאה\n-   1 כפית שום בפורמה של אבקה\n-   1 כפית פפריקה\n-   1 כפית פלפל שחור טרי\n**הירקות**\n-   חסה רומנית, להגשה\n-   פרמזן מגוררת באופן טרי, להגשה\n{% divend %}\n## הוראות ההכנה: \n\n**רוטב לסלט:**\n1.  מערבבים היטב את השום, החרדל, החומץ ושני קמצוצי מלח.\n2.  מוסיפים את המיונז ומערבבים יחד כדי ליצור בסיס עבה.\n3.  לאט לאט מוסיפים את שמן הזית דרך החור במכסה.\n4.  מעבירים את הרוטב בקערה בעזרת מרית ומתבלים לפי הטעם עם מלח, פלפל ומיץ לימון.\n5.  אם רוצים, מוסיפים אנשובי לרוטב כדי ליצור טעם מלוח ועמוק יותר.\n\n**קרוטונים לסלט קיסר:**\n1.  חותכים את הבגט או את פרוסות הלחם לקוביות.\n2.  ממיסים את החמאה במחבת ומוסיפים את אבקת השום, הפפריקה והפלפל.\n3.  מוסיפים את קוביות הלחם ומטגנים רק עד שקוביות הלחם מתחילות להשחים.\n4.  מניחים בצד כדי להתקרר.\n\n**הכנת הסלט:**\n1.  שוטפים ומייבשים את החסה.\n2.  בקערת סלט גדולה, מוסיפים יחד לקערה את החסה, הרוטב והקרוטונים.\n3.  אפשר להוסיף פרמזן מגורד למי שאוהב\n4.  מערבבים טוב טוב ומגישים\n\n{% taavon %}\n","slug":"food/cesare-salad","published":1,"updated":"2024-01-19T17:53:02.571Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygx70001o4vx2wov4gfb"},{"title":"עראיס בפיתה - בשר בקר בפיתה טעים טעים","description":"גם כשהמסעדות סגורות העראיס הזה הוא תחליף מצוין ומשביע לכל מאכל בשרי אחר.","date":"2023-12-29T08:00:00.000Z","cover":"https://kolha.top/images/covers/8i0XO7D.jpg","_content":"אחד הדברים האהובים עליי זה לצאת כל שישי בבוקר לאכול בשווארמיה מתחת לבית שלי עם בעלי, אבל בעיקר בזמנים האלו, שהרבה עסקים סגורים ויחד איתם השווארמיה, אין כמו להכין את העראייס המצוין הזה כתחליף משביע, אני שמחה לשתף איתכם את המתכון הזה, תהנו!\n\n## מצרכים:\n{% matkoning %}\n-   300 גרם בשר בקר טרי טחון עם השומן שלו (לא מטוגן)\n-   בצל אחד\n-   שלוש פיתות\n-   חופן נדיב של פטרוזיליה\n-   כפית ראס אל חנות\n-   כף שמן זית ושמן זית להזלפה\n-   מלח\n-   פלפל שחור גרוס\n{% divend %}\n## הוראות ההכנה: \n\n1.  נחתוך את הבצל לקוביות קטנות ונטגן עד הזהבה\n2.  נקצוץ את הפטרוזיליה, ונשים בקערה.\n3.  נוסיף את הבשר, הבצל המטוגן, שמן הזית והתבלינים לקערה. נערב ונלוש היטב את כל החומרים.\n4.  נחלק את התערובת ל-6 קציצות שוות.\n5.  נחצה את הפיתות לחצאים, ונמלא בתערובת הבשר.\n6.  נשמן רשת גריל / או מחבת פסים / או טוסטר ביתי בשמן זית, ונכוון על חום בינוני.\n7.  נצלה את חצאי הפיתות לכ-10 דקות: \n\t- תחילה נצלה את הפיתה כאשר הבשר כלפי מטה למשך כ-2 דקות ובהמשך נצלה אותה כ-4 דקות מכל צד. בדקה האחרונה נזלף על חצאי הפיתות שמן זית בנדיבות.\n9.  בתום הצלייה נכניס לכמה דקות לתנור חם 190 מעלות.\n10.  נגיש חם עם טחינה וסלט בצד.\n\n{% taavon %}\n\n<small>המתכון נלקח מאתר משו מתוק</small>\n","source":"_posts/food/arayes-meatinpita.md","raw":"---\ntitle: עראיס בפיתה - בשר בקר בפיתה טעים טעים\ndescription: גם כשהמסעדות סגורות העראיס הזה הוא תחליף מצוין ומשביע לכל מאכל בשרי אחר.\ndate: 2023-12-29 10:00:00\ntags: [אוכל, מתכונים, מזרח תיכוני,בשר,פיתה,כשר]\ncategories: [מתכונים,עיקריות]\ncover: https://kolha.top/images/covers/8i0XO7D.jpg\n---\nאחד הדברים האהובים עליי זה לצאת כל שישי בבוקר לאכול בשווארמיה מתחת לבית שלי עם בעלי, אבל בעיקר בזמנים האלו, שהרבה עסקים סגורים ויחד איתם השווארמיה, אין כמו להכין את העראייס המצוין הזה כתחליף משביע, אני שמחה לשתף איתכם את המתכון הזה, תהנו!\n\n## מצרכים:\n{% matkoning %}\n-   300 גרם בשר בקר טרי טחון עם השומן שלו (לא מטוגן)\n-   בצל אחד\n-   שלוש פיתות\n-   חופן נדיב של פטרוזיליה\n-   כפית ראס אל חנות\n-   כף שמן זית ושמן זית להזלפה\n-   מלח\n-   פלפל שחור גרוס\n{% divend %}\n## הוראות ההכנה: \n\n1.  נחתוך את הבצל לקוביות קטנות ונטגן עד הזהבה\n2.  נקצוץ את הפטרוזיליה, ונשים בקערה.\n3.  נוסיף את הבשר, הבצל המטוגן, שמן הזית והתבלינים לקערה. נערב ונלוש היטב את כל החומרים.\n4.  נחלק את התערובת ל-6 קציצות שוות.\n5.  נחצה את הפיתות לחצאים, ונמלא בתערובת הבשר.\n6.  נשמן רשת גריל / או מחבת פסים / או טוסטר ביתי בשמן זית, ונכוון על חום בינוני.\n7.  נצלה את חצאי הפיתות לכ-10 דקות: \n\t- תחילה נצלה את הפיתה כאשר הבשר כלפי מטה למשך כ-2 דקות ובהמשך נצלה אותה כ-4 דקות מכל צד. בדקה האחרונה נזלף על חצאי הפיתות שמן זית בנדיבות.\n9.  בתום הצלייה נכניס לכמה דקות לתנור חם 190 מעלות.\n10.  נגיש חם עם טחינה וסלט בצד.\n\n{% taavon %}\n\n<small>המתכון נלקח מאתר משו מתוק</small>\n","slug":"food/arayes-meatinpita","published":1,"updated":"2024-01-19T17:52:57.004Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygxb0003o4vxd5d981x9"},{"title":"פאי פראג ושוקולד פשוט להכנה ומדהים!","description":"אתם חייבים לנסות את המתכון הזה! מתכון מיוחד שמשלב את המתיקות של השוקולד עם הטעם העשיר של הפרג.","date":"2024-01-19T08:00:00.000Z","cover":"https://kolha.top/images/covers/fy6oO9y.jpg","_content":"\nאתם חייבים לנסות את המתכון לפאי פרג ושוקולד הזה!\nמדובר במתכון מיוחד שמשלב את המתיקות של השוקולד עם הטעם העשיר של הפרג. הפאי מורכב מבצק קריספי ומלית עשירה, והוא בטוח להפתיע ולשמח את כל מי שיטעמו. המתכון פשוט להכנה ומתאים לכל אחד, גם אם אתם לא בעלי ניסיון באפייה. אז בואו נתחיל!\n## מצרכים:\n{% matkoning %}\n\n#### לבצק:\n\n-   2 כוסות וחצי קמח\n-   תמצית וניל\n-   50 גרם חמאה מומסת\n-   חצי כוס אבקת סוכר\n-   ביצה\n-   שקית אבקת אפיה\n\n#### למלית:\n\n-   150 גרם פרג\n-   25 גרם חמאה\n-   כף דבש\n-   100 גרם שוקולד\n-   כף קורנפלור\n-   תמצית וניל\n-   250 מ\"ל שמנת מתוקה\n\n{% divend %}\n\n## הוראות הכנה:\n1.  נערבב בקערה את הקמח, תמצית הווניל, החמאה המומסת, אבקת הסוכר, הביצה ואבקת האפיה.\n2.  נלוש את החומרים עד שמתקבל בצק חלק.\n3.  נחלק את הבצק לשני חלקים ונניח עטוף בניילון נצמד במקרר למשך חצי שעה.\n4.  נבשל בסיר את הפרג, החמאה, הדבש, השוקולד, הקורנפלור, תמצית הווניל והשמנת המתוקה למשך 10 דקות\n5.  נוציא את הבצק מהמקרר ונשטח אותו בתוך תבנית עגולה בקוטר 20 ס\"מ.\n6.  נצק את המלית על הבצק.\n7.  נגרד את החצי השני של הבצק מעל המלית.\n8.  נאפה בתנור שחומם מראש ל-170 מעלות למשך 40 דקות.\n\n\n{% taavon %}\n<small><div property=\"aggregateRating\"  typeof=\"AggregateRating\">  <span  property=\"ratingValue\">3.6</span> כוכבים -   מבוסס על <span  property=\"reviewCount\">6</span> ביקורות  </div></small>\n\n<small>צופית בן יוסף</small>\n","source":"_posts/food/chocolate-and-prauge-pie.md","raw":"---\ntitle: פאי פראג ושוקולד פשוט להכנה ומדהים!\ndescription: אתם חייבים לנסות את המתכון הזה! מתכון מיוחד שמשלב את המתיקות של השוקולד עם הטעם העשיר של הפרג.\ndate: 2024-01-19 10:00:00\ntags: [אוכל, מתכונים, עוגות,כשר,מתוק,שוקולד,אוכל שילדים אוהבים,שוקולד,קינוחים]\ncategories: [מתכונים, עוגות]\ncover: https://kolha.top/images/covers/fy6oO9y.jpg\n---\n\nאתם חייבים לנסות את המתכון לפאי פרג ושוקולד הזה!\nמדובר במתכון מיוחד שמשלב את המתיקות של השוקולד עם הטעם העשיר של הפרג. הפאי מורכב מבצק קריספי ומלית עשירה, והוא בטוח להפתיע ולשמח את כל מי שיטעמו. המתכון פשוט להכנה ומתאים לכל אחד, גם אם אתם לא בעלי ניסיון באפייה. אז בואו נתחיל!\n## מצרכים:\n{% matkoning %}\n\n#### לבצק:\n\n-   2 כוסות וחצי קמח\n-   תמצית וניל\n-   50 גרם חמאה מומסת\n-   חצי כוס אבקת סוכר\n-   ביצה\n-   שקית אבקת אפיה\n\n#### למלית:\n\n-   150 גרם פרג\n-   25 גרם חמאה\n-   כף דבש\n-   100 גרם שוקולד\n-   כף קורנפלור\n-   תמצית וניל\n-   250 מ\"ל שמנת מתוקה\n\n{% divend %}\n\n## הוראות הכנה:\n1.  נערבב בקערה את הקמח, תמצית הווניל, החמאה המומסת, אבקת הסוכר, הביצה ואבקת האפיה.\n2.  נלוש את החומרים עד שמתקבל בצק חלק.\n3.  נחלק את הבצק לשני חלקים ונניח עטוף בניילון נצמד במקרר למשך חצי שעה.\n4.  נבשל בסיר את הפרג, החמאה, הדבש, השוקולד, הקורנפלור, תמצית הווניל והשמנת המתוקה למשך 10 דקות\n5.  נוציא את הבצק מהמקרר ונשטח אותו בתוך תבנית עגולה בקוטר 20 ס\"מ.\n6.  נצק את המלית על הבצק.\n7.  נגרד את החצי השני של הבצק מעל המלית.\n8.  נאפה בתנור שחומם מראש ל-170 מעלות למשך 40 דקות.\n\n\n{% taavon %}\n<small><div property=\"aggregateRating\"  typeof=\"AggregateRating\">  <span  property=\"ratingValue\">3.6</span> כוכבים -   מבוסס על <span  property=\"reviewCount\">6</span> ביקורות  </div></small>\n\n<small>צופית בן יוסף</small>\n","slug":"food/chocolate-and-prauge-pie","published":1,"updated":"2024-01-19T18:10:00.895Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygxe0007o4vxcwcnd5i2"},{"title":"עוגת ביסקוויטים מבושלת טעימה בטירוף!","description":"עוגת ביסקוויטים מבושלת מדהימה וטעימה של הטופ! העוגה נימוחה ונמסה בבפה ולא מתוקה מידי ושווה להכין בכל זמן ובכל אירוע!","date":"2024-01-10T08:00:00.000Z","cover":"https://kolha.top/images/covers/jQDECh5.png","_content":"\nעוגת ביסקוויטים מבושלת מדהימה וטעימה! הכנתי את המתכון בפעם הראשונה והוא היה מפוצץ! העוגה נימוחה ונמסה בבפה ולא מתוקה מידי, עוגה באמת של הטופ\n\n## מצרכים:\n{% matkoning %}\n#### לעוגה:\n- תבנית בינונית\n- שרוול של ביסקוויטים\n- 100 גרם של שוקולד מריר\n- חצי כוס של קקאו\n- כוס של סוכר\n- כפית של תמצית רום\n- 50 גרם של חמאה או מרגרינה\n\n#### לציפוי:\n- 50 מ\"ל של שמנת מתוקה\n- 100 גרם של שוקולד חלב או מריר\n\n{% divend %}\n\n## הוראות הכנה:\n1. מניחים בסיר את הקקאו, השוקולד, כוס מים, מרגרינה או חמאה, תמצית רום וסוכר ומערבבים באש בינונית.\n2. חותכים את הביסקוויטים לחתיכות גסות ומוסיפים לסיר, מבשלים ומערבבים למשך לפחות 10 דקות.\n3. מניחים את התערובת בתוך תבנית בינונית ומקררים.\n4. מניחים מעל שכבה של ביסקוויטים.\n5. מבשלים את השמנת המתוקה עם השוקולד, מערבבים עד לקבלת לתערובת חלקה ומניחים מעל.\n6. ממתינים לפחות יום אחד לפני ההגשה.\n\n{% taavon %}\n<small><div property=\"aggregateRating\"  typeof=\"AggregateRating\">  <span  property=\"ratingValue\">4.4</span> כוכבים -   מבוסס על <span  property=\"reviewCount\">2</span> ביקורות  </div></small>\n\n<small>צופית בן יוסף</small>\n","source":"_posts/food/chocolate-biscuit-cake-recipe.md","raw":"---\ntitle: עוגת ביסקוויטים מבושלת טעימה בטירוף!\ndescription: עוגת ביסקוויטים מבושלת מדהימה וטעימה של הטופ! העוגה נימוחה ונמסה בבפה ולא מתוקה מידי ושווה להכין בכל זמן ובכל אירוע!\ndate: 2024-01-10 10:00:00\ntags: [אוכל, מתכונים, עוגות,כשר,מתוק,שוקולד,אוכל שילדים אוהבים,שוקולד,קינוחים]\ncategories: [מתכונים, עוגות]\ncover: https://kolha.top/images/covers/jQDECh5.png\n---\n\nעוגת ביסקוויטים מבושלת מדהימה וטעימה! הכנתי את המתכון בפעם הראשונה והוא היה מפוצץ! העוגה נימוחה ונמסה בבפה ולא מתוקה מידי, עוגה באמת של הטופ\n\n## מצרכים:\n{% matkoning %}\n#### לעוגה:\n- תבנית בינונית\n- שרוול של ביסקוויטים\n- 100 גרם של שוקולד מריר\n- חצי כוס של קקאו\n- כוס של סוכר\n- כפית של תמצית רום\n- 50 גרם של חמאה או מרגרינה\n\n#### לציפוי:\n- 50 מ\"ל של שמנת מתוקה\n- 100 גרם של שוקולד חלב או מריר\n\n{% divend %}\n\n## הוראות הכנה:\n1. מניחים בסיר את הקקאו, השוקולד, כוס מים, מרגרינה או חמאה, תמצית רום וסוכר ומערבבים באש בינונית.\n2. חותכים את הביסקוויטים לחתיכות גסות ומוסיפים לסיר, מבשלים ומערבבים למשך לפחות 10 דקות.\n3. מניחים את התערובת בתוך תבנית בינונית ומקררים.\n4. מניחים מעל שכבה של ביסקוויטים.\n5. מבשלים את השמנת המתוקה עם השוקולד, מערבבים עד לקבלת לתערובת חלקה ומניחים מעל.\n6. ממתינים לפחות יום אחד לפני ההגשה.\n\n{% taavon %}\n<small><div property=\"aggregateRating\"  typeof=\"AggregateRating\">  <span  property=\"ratingValue\">4.4</span> כוכבים -   מבוסס על <span  property=\"reviewCount\">2</span> ביקורות  </div></small>\n\n<small>צופית בן יוסף</small>\n","slug":"food/chocolate-biscuit-cake-recipe","published":1,"updated":"2024-01-19T17:52:05.949Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygxg0009o4vxbdre8skb"},{"title":"דונאטס בצורת חלה - הממתק המושלם לשבת","description":"אין כמו השילוב המצחיק הזה של דונאטס, אוורירי ומתוק בציפוי שוקולד, יחד עם צורת החלה של שבת בקידוש, מתכון מעולה!","date":"2023-12-30T08:00:00.000Z","cover":"https://i.imgur.com/3TXxpIA.jpg","_content":"\n אני זוכרת את הפעם הראשונה שבה הכנתי את המתכון הזה. הריח של הדונאטס מלא את הבית, ולא יכולתי לחכות לטעום את זה. ובצדק, המרקם האוורירי של הדונאטס משתלב בול עם הציפוי המסוכר המתקתק. מאז, המתכון הזה הפך למועדף שלי. אז בואו נתחיל, אני בטוחה שגם אתכן תאהבו את המתכון הזה.\n\n## מצרכים:\n{% matkoning %}\n**לבצק**\n-   3 כוסות קמח + קמח למשטח העבודה\n-   2 כפות חמאה\n-   7 גרם שמרים לאפייה\n-   3 כפות סוכר לבצק\n-   כוס חלב\n-   ביצה אחת\n-   ½ כפית מלח\n-   שמן לטיגון\n\n**לציפוי**\n-   ½ כפית קינמון\n-  2 כפות סוכר לציפוי\n**או**\n- נוטלה\\שוקולד למריחה\n\n{% divend %}\n## הוראות ההכנה: \n\n1.  שימו את השמרים בקערה, שפכו מעט מים פושרים כדי לדלל אותם, הוסיפו את הקמח וערבבו היטב. עכשיו הכינו את הבצק, אפשר עם מכונת לחם או מיקסר, או ביד.\n2.  הוסיפו את החלב, 2 כפות הסוכר, הביצה. והמלח. לשים את הבצק למשך 3 דקות, הוא צריך להיות בעל מרקם חלק ללא גושים. ואחרי זה הוסיפו את החמאה הרכה וערבבו קלות, עכשיו אפשר לראות את הברק מהבצק\n\t- לא לשכוח לקמח את משטח העבודה\n3.  צרו כדור גדול מהבצק, תעטפו אותו בניילון נצמד, ותנו לו לתפוח שעה\n4.  אחרי ההתפחה, הכינו כדורים בגודל זהה ותנו להם את הצורה שאתם רוצים (בנקודה הזאת ניתן לחתוך את הבצק לרצועות ולעשות אותו בצורת צמה של חלה)\n![בצק הדונאטס, בצורת חלות](https://kolha.top/images/1M6Gt5M/the-doughnuts-dough-being-made-and-shaped.webp)\n5.  שימו את הבצק על נייר אפייה ותנו לו לתפוח לפחות למשך 30 דקות. זה יגרום לדונאטס להפוך לאווריריים בטירוף, עכשיו, הם מוכנים לטיגון\n\t- חממו שמן ל170 מעלות (אש גבוהה) מומלץ כמות שתגיע לגובה של 4-7 סנטימטרים\n6.  טגנו מכל צד 3 דקות, ניתן לגלגל בתערובת של סוכר וקינמון (3 כפות ו- ½ כפית קינמון), או לכסות בציפוי שוקולד.\n![בתאבון!, בצק הדונאטס מוגש עם ציפוי סוכר](https://kolha.top/images/chxcV46/doughnuts-being-covered-with-suger.webp)\n{% taavon %}\n<small><div property=\"aggregateRating\"  typeof=\"AggregateRating\">  <span  property=\"ratingValue\">4.7</span> כוכבים -   מבוסס על <span  property=\"reviewCount\">3</span> ביקורות  </div></small>","source":"_posts/food/hala-doughnuts.md","raw":"---\ntitle: דונאטס בצורת חלה - הממתק המושלם לשבת\ndescription: אין כמו השילוב המצחיק הזה של דונאטס, אוורירי ומתוק בציפוי שוקולד, יחד עם צורת החלה של שבת בקידוש, מתכון מעולה!\ndate: 2023-12-30 10:00:00\ntags: [אוכל, מתכונים, עוגיות,כשר,מתוק,שוקולד,אוכל שילדים אוהבים,שוקולד,קינוחים]\ncategories: [מתכונים, עוגיות]\ncover: https://i.imgur.com/3TXxpIA.jpg\n---\n\n אני זוכרת את הפעם הראשונה שבה הכנתי את המתכון הזה. הריח של הדונאטס מלא את הבית, ולא יכולתי לחכות לטעום את זה. ובצדק, המרקם האוורירי של הדונאטס משתלב בול עם הציפוי המסוכר המתקתק. מאז, המתכון הזה הפך למועדף שלי. אז בואו נתחיל, אני בטוחה שגם אתכן תאהבו את המתכון הזה.\n\n## מצרכים:\n{% matkoning %}\n**לבצק**\n-   3 כוסות קמח + קמח למשטח העבודה\n-   2 כפות חמאה\n-   7 גרם שמרים לאפייה\n-   3 כפות סוכר לבצק\n-   כוס חלב\n-   ביצה אחת\n-   ½ כפית מלח\n-   שמן לטיגון\n\n**לציפוי**\n-   ½ כפית קינמון\n-  2 כפות סוכר לציפוי\n**או**\n- נוטלה\\שוקולד למריחה\n\n{% divend %}\n## הוראות ההכנה: \n\n1.  שימו את השמרים בקערה, שפכו מעט מים פושרים כדי לדלל אותם, הוסיפו את הקמח וערבבו היטב. עכשיו הכינו את הבצק, אפשר עם מכונת לחם או מיקסר, או ביד.\n2.  הוסיפו את החלב, 2 כפות הסוכר, הביצה. והמלח. לשים את הבצק למשך 3 דקות, הוא צריך להיות בעל מרקם חלק ללא גושים. ואחרי זה הוסיפו את החמאה הרכה וערבבו קלות, עכשיו אפשר לראות את הברק מהבצק\n\t- לא לשכוח לקמח את משטח העבודה\n3.  צרו כדור גדול מהבצק, תעטפו אותו בניילון נצמד, ותנו לו לתפוח שעה\n4.  אחרי ההתפחה, הכינו כדורים בגודל זהה ותנו להם את הצורה שאתם רוצים (בנקודה הזאת ניתן לחתוך את הבצק לרצועות ולעשות אותו בצורת צמה של חלה)\n![בצק הדונאטס, בצורת חלות](https://kolha.top/images/1M6Gt5M/the-doughnuts-dough-being-made-and-shaped.webp)\n5.  שימו את הבצק על נייר אפייה ותנו לו לתפוח לפחות למשך 30 דקות. זה יגרום לדונאטס להפוך לאווריריים בטירוף, עכשיו, הם מוכנים לטיגון\n\t- חממו שמן ל170 מעלות (אש גבוהה) מומלץ כמות שתגיע לגובה של 4-7 סנטימטרים\n6.  טגנו מכל צד 3 דקות, ניתן לגלגל בתערובת של סוכר וקינמון (3 כפות ו- ½ כפית קינמון), או לכסות בציפוי שוקולד.\n![בתאבון!, בצק הדונאטס מוגש עם ציפוי סוכר](https://kolha.top/images/chxcV46/doughnuts-being-covered-with-suger.webp)\n{% taavon %}\n<small><div property=\"aggregateRating\"  typeof=\"AggregateRating\">  <span  property=\"ratingValue\">4.7</span> כוכבים -   מבוסס על <span  property=\"reviewCount\">3</span> ביקורות  </div></small>","slug":"food/hala-doughnuts","published":1,"updated":"2024-01-10T11:24:37.128Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygxh000bo4vx2n8dcdve"},{"title":"עוגיות מושלגות מושלמות לחורף","description":"החורף מגיע ואין כמו המתכון המושלם הזה לעוגיות מושלגות מפוצצות בטעם!","date":"2023-12-20T08:00:00.000Z","cover":"https://kolha.top/images/covers/OyESMih.jpg","_content":"\nכאשר החורף מגיע, אין כמו להכין את העוגיות המושלגות האלו. זהו תהליך שמתחיל במטבח החמים ומסתיים בטעימה של עוגייה חמה ומתוקה. זו חוויה שמחממת את הלב ומביאה את החורף גם לקיבה. אני שמחה לשתף איתכם את המתכון הזה, תהנו!\n\n### מצרכים:\n{% matkoning %}\n- 225 גרם שוקולד מריר\n- 60 גרם חמאה\n- 2 ביצים L\n- 1/2 כוס סוכר (100 גרם)\n- 190 גרם קמח\n- 30 גרם קקאו (1/4 כוס)\n- 1/4 כפית מלח\n- 1 כפית אבקת אפיה\n- 100 גרם אבקת סוכר לציפוי\n{% divend %}\n### הוראות ההכנה: \n1.  ממיסים שוקולד וחמאה.\n2.  מקציפים ביצים וסוכר בקערה עד לקבלת תערובת תפוחה ובהירה.\n3.  מוסיפים את תערובת השוקולד המומס לתערובת ומערבבים.\n4.  מוסיפים את כל המרכיבים היבשים לתערובת ומערבבים היטב עד לקבלת בצק רך ואחיד.\n5.  עוטפים את הבצק בניילון נצמד ומניחים אותו במקרר לשעתיים שלוש (או במקפיא למשך 45 דקות). לאחר ההוצאה מהמקרר, מחממים את התנור מראש ל170°.\n6.  יוצרים כדורים בגודל של 2 ס\"מ ומגלגלים אותם באבקת סוכר.\n7.  אופים בתנור שחומם מראש ל170° למשך 8 דקות.\n8. מוציאים את העוגיות מהתנור כדי שיצטננו.\n\n{% taavon %}","source":"_posts/food/snowycookies.md","raw":"---\ntitle: עוגיות מושלגות מושלמות לחורף\ndescription: החורף מגיע ואין כמו המתכון המושלם הזה לעוגיות מושלגות מפוצצות בטעם!\ndate: 2023-12-20 10:00:00\ntags: [אוכל, מתכונים, עוגיות, כריסמס,כשר,מתוק,אוכל שילדים אוהבים,קינוחים,שוקולד]\ncategories: [מתכונים, עוגיות]\ncover: https://kolha.top/images/covers/OyESMih.jpg\n---\n\nכאשר החורף מגיע, אין כמו להכין את העוגיות המושלגות האלו. זהו תהליך שמתחיל במטבח החמים ומסתיים בטעימה של עוגייה חמה ומתוקה. זו חוויה שמחממת את הלב ומביאה את החורף גם לקיבה. אני שמחה לשתף איתכם את המתכון הזה, תהנו!\n\n### מצרכים:\n{% matkoning %}\n- 225 גרם שוקולד מריר\n- 60 גרם חמאה\n- 2 ביצים L\n- 1/2 כוס סוכר (100 גרם)\n- 190 גרם קמח\n- 30 גרם קקאו (1/4 כוס)\n- 1/4 כפית מלח\n- 1 כפית אבקת אפיה\n- 100 גרם אבקת סוכר לציפוי\n{% divend %}\n### הוראות ההכנה: \n1.  ממיסים שוקולד וחמאה.\n2.  מקציפים ביצים וסוכר בקערה עד לקבלת תערובת תפוחה ובהירה.\n3.  מוסיפים את תערובת השוקולד המומס לתערובת ומערבבים.\n4.  מוסיפים את כל המרכיבים היבשים לתערובת ומערבבים היטב עד לקבלת בצק רך ואחיד.\n5.  עוטפים את הבצק בניילון נצמד ומניחים אותו במקרר לשעתיים שלוש (או במקפיא למשך 45 דקות). לאחר ההוצאה מהמקרר, מחממים את התנור מראש ל170°.\n6.  יוצרים כדורים בגודל של 2 ס\"מ ומגלגלים אותם באבקת סוכר.\n7.  אופים בתנור שחומם מראש ל170° למשך 8 דקות.\n8. מוציאים את העוגיות מהתנור כדי שיצטננו.\n\n{% taavon %}","slug":"food/snowycookies","published":1,"updated":"2024-01-19T17:53:07.026Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygxj000fo4vxa60i1ale"},{"title":"קציצות בקר ושעועית מדהימות וטעימות אש","description":"הקציצות בקר ושעועית ירוקה האלו מצוינות והם מהוות ארוחת שישי מצוינת וטעימה בטירוף!","date":"2024-01-09T08:00:00.000Z","cover":"https://kolha.top/images/covers/yTAIpTa.jpg","_content":"אתם חייבים לנסות את הקציצות בקר ושעועית ירוקה האלו! זה תבשיל מצוין לארוחת שישי בשרית או ארוחת צהריים לילדים או לקחת לעבודה. המתכון קל ויוצא מצוין!\n## מצרכים:\n{% matkoning %}\n\n#### לבשר:\n- 500 גרם בשר טחון\n- צרור פטרוזיליה חתוכה דק דק\n- צרור כוסברה קצוצה דק\n- 4 שיני שום קצוצים עד טחונים\n- חצי צרור שמיר קצוץ דק\n- כף פפריקה בשמן זית\n- כף כמון\n- כפית פלפל שחור\n- חצי כף כמון\n\n#### לרוטב:\n- מעט עלי נענע קצוצים\n- 6 עלי דפנה\n- 6 שיני שום\n- צרור פטרוזיליה קצוצה\n- 3 גבעולי סלרי\n- פלפל חריף קצוץ\n- מעט שמיר קצוץ\n- חבילה שעועית ירוקה קפוא\n- כף מלח\n- כף כמון\n- כף פפריקה בשמן זית\n- כפית פלפל שחור\n- כפית סוכר\n- קופסת עגבניות מרוסקות\n- קופסא קטנה רסק עגבניות\n- 2 כוסות מים\n\n\n{% divend %}\n\n## הוראות הכנה:\n\n1. מערבבים את כל מרכיבי הבשר בקערה גדולה עד שהם הופכים לתערובת אחידה.\n2. יוצרים מהתערובת כדורים בגודל שאתם אוהבים.\n3. מטגנים את הכדורים במחבת עם מעט שמן זית עד שהם משתנים צבע לחום-זהוב.\n![כדורי הבשר במהלך טיגונם](https://kolha.top/images/V31LnGG/meatballs-while-getting-cooked.jpg)\n4. לאחר שסיימתם לטגן את הכדורים, מוסיפים למחבת את שאר מרכיבי הרוטב.\n\n5. מבשלים את הרוטב עם הכדורים באש בינונית למשך שעה.\n![כל מרכיבי הרוטב מטבשלים עם הכדורים באש בינונית](https://kolha.top/images/Yt2qzzP/meatballs-cooking-with-all-the-juice.jpg)\n\n{% taavon %}\n<small><div property=\"aggregateRating\"  typeof=\"AggregateRating\">  <span  property=\"ratingValue\">4</span> כוכבים -   מבוסס על <span  property=\"reviewCount\">1</span> ביקורות  </div></small>\n\n<small>צופית בן יוסף</small>\n","source":"_posts/food/meatballs-with-green-beans.md","raw":"---\ntitle: קציצות בקר ושעועית מדהימות וטעימות אש\ndescription: הקציצות בקר ושעועית ירוקה האלו מצוינות והם מהוות ארוחת שישי מצוינת וטעימה בטירוף!\ndate: 2024-01-9 10:00:00\ntags: [אוכל, מתכונים, מזרח תיכוני,בשר,כשר]\ncategories: [מתכונים,עיקריות]\ncover: https://kolha.top/images/covers/yTAIpTa.jpg\n---\nאתם חייבים לנסות את הקציצות בקר ושעועית ירוקה האלו! זה תבשיל מצוין לארוחת שישי בשרית או ארוחת צהריים לילדים או לקחת לעבודה. המתכון קל ויוצא מצוין!\n## מצרכים:\n{% matkoning %}\n\n#### לבשר:\n- 500 גרם בשר טחון\n- צרור פטרוזיליה חתוכה דק דק\n- צרור כוסברה קצוצה דק\n- 4 שיני שום קצוצים עד טחונים\n- חצי צרור שמיר קצוץ דק\n- כף פפריקה בשמן זית\n- כף כמון\n- כפית פלפל שחור\n- חצי כף כמון\n\n#### לרוטב:\n- מעט עלי נענע קצוצים\n- 6 עלי דפנה\n- 6 שיני שום\n- צרור פטרוזיליה קצוצה\n- 3 גבעולי סלרי\n- פלפל חריף קצוץ\n- מעט שמיר קצוץ\n- חבילה שעועית ירוקה קפוא\n- כף מלח\n- כף כמון\n- כף פפריקה בשמן זית\n- כפית פלפל שחור\n- כפית סוכר\n- קופסת עגבניות מרוסקות\n- קופסא קטנה רסק עגבניות\n- 2 כוסות מים\n\n\n{% divend %}\n\n## הוראות הכנה:\n\n1. מערבבים את כל מרכיבי הבשר בקערה גדולה עד שהם הופכים לתערובת אחידה.\n2. יוצרים מהתערובת כדורים בגודל שאתם אוהבים.\n3. מטגנים את הכדורים במחבת עם מעט שמן זית עד שהם משתנים צבע לחום-זהוב.\n![כדורי הבשר במהלך טיגונם](https://kolha.top/images/V31LnGG/meatballs-while-getting-cooked.jpg)\n4. לאחר שסיימתם לטגן את הכדורים, מוסיפים למחבת את שאר מרכיבי הרוטב.\n\n5. מבשלים את הרוטב עם הכדורים באש בינונית למשך שעה.\n![כל מרכיבי הרוטב מטבשלים עם הכדורים באש בינונית](https://kolha.top/images/Yt2qzzP/meatballs-cooking-with-all-the-juice.jpg)\n\n{% taavon %}\n<small><div property=\"aggregateRating\"  typeof=\"AggregateRating\">  <span  property=\"ratingValue\">4</span> כוכבים -   מבוסס על <span  property=\"reviewCount\">1</span> ביקורות  </div></small>\n\n<small>צופית בן יוסף</small>\n","slug":"food/meatballs-with-green-beans","published":1,"updated":"2024-01-19T17:51:51.871Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygxk000ho4vx6ttga18f"},{"title":"Code Highlight Style test","date":"2019-07-25T13:43:00.000Z","robots":"noindex,nofollow","sidebar":[],"cover":"https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/054.jpg","hidden":true,"_content":"\nMake sure all the code blocks highlighted correctly. All the code samples are come from the demo of https://highlightjs.org\n\n<!-- more -->\n\n``` plain\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n```\n\n```rust\n#[derive(Debug)]\npub enum State {\n    Start,\n    Transient,\n    Closed,\n}\n\nimpl From<&'a str> for State {\n    fn from(s: &'a str) -> Self {\n        match s {\n            \"start\" => State::Start,\n            \"closed\" => State::Closed,\n            _ => unreachable!(),\n        }\n    }\n}\n```\n\n```json\n[\n  {\n    \"title\": \"apples\",\n    \"count\": [12000, 20000],\n    \"description\": {\"text\": \"...\", \"sensitive\": false}\n  },\n  {\n    \"title\": \"oranges\",\n    \"count\": [17500, null],\n    \"description\": {\"text\": \"...\", \"sensitive\": false}\n  }\n]\n```\n\n```typescript\nclass MyClass {\n  public static myValue: string;\n  constructor(init: string) {\n    this.myValue = init;\n  }\n}\nimport fs = require(\"fs\");\nmodule MyModule {\n  export interface MyInterface extends Other {\n    myProperty: any;\n  }\n}\ndeclare magicNumber number;\nmyArray.forEach(() => { }); // fat arrow syntax\n```\n\n```python\n@requires_authorization\ndef somefunc(param1='', param2=0):\n    r'''A docstring'''\n    if param1 > param2: # interesting\n        print 'Gre\\'ater'\n    return (param2 - param1 + 1 + 0b10l) or None\n\nclass SomeClass:\n    pass\n\n>>> message = '''interpreter\n... prompt'''\n```\n\n```html\n<!DOCTYPE html>\n<title>Title</title>\n\n<style>body {width: 500px;}</style>\n\n<script type=\"application/javascript\">\n  function $init() {return true;}\n</script>\n\n<body>\n  <p checked class=\"title\" id='title'>Title</p>\n  <!-- here goes the rest of the page -->\n</body>\n```\n\n```javascript\nfunction $initHighlight(block, cls) {\n  try {\n    if (cls.search(/\\bno\\-highlight\\b/) != -1)\n      return process(block, true, 0x0F) +\n             ` class=\"${cls}\"`;\n  } catch (e) {\n    /* handle exception */\n  }\n  for (var i = 0 / 2; i < classes.length; i++) {\n    if (checkCondition(classes[i]) === undefined)\n      console.log('undefined');\n  }\n\n  return (\n    <div>\n      <web-component>{block}</web-component>\n    </div>\n  )\n}\n\nexport $initHighlight;\n```\n\n```cpp\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n```\n\n```sql\nCREATE TABLE \"topic\" (\n    \"id\" serial NOT NULL PRIMARY KEY,\n    \"forum_id\" integer NOT NULL,\n    \"subject\" varchar(255) NOT NULL\n);\nALTER TABLE \"topic\"\nADD CONSTRAINT forum_id FOREIGN KEY (\"forum_id\")\nREFERENCES \"forum\" (\"id\");\n\n-- Initials\ninsert into \"topic\" (\"forum_id\", \"subject\")\nvalues (2, 'D''artagnian');\n```\n\n```objectivec\n#import <UIKit/UIKit.h>\n#import \"Dependency.h\"\n\n@protocol WorldDataSource\n@optional\n- (NSString *)worldName;\n@required\n- (BOOL)allowsToLive;\n@end\n// comment\n@property (nonatomic, readonly) NSString *title;\n- (IBAction) show;\n@end\n```\n\n```java\n/**\n * @author John Smith <john.smith@example.com>\n*/\npackage l2f.gameserver.model;\n\npublic abstract class L2Char extends L2Object {\n  public static final Short ERROR = 0x0001;\n\n  public void moveTo(int x, int y, int z) {\n    _ai = null;\n    log(\"Should not be called\");\n    if (1 > 5) { // wtf!?\n      return;\n    }\n  }\n}\n```\n\n```swift\nimport Foundation\n\n@objc class Person: Entity {\n  var name: String!\n  var age:  Int!\n\n  init(name: String, age: Int) {\n    /* /* ... */ */\n  }\n\n  // Return a descriptive string for this person\n  func description(offset: Int = 0) -> String {\n    return \"\\(name) is \\(age + offset) years old\"\n  }\n}\n```\n\n```css\n@font-face {\n  font-family: Chunkfive; src: url('Chunkfive.otf');\n}\n\nbody, .usertext {\n  color: #F0F0F0; background: #600;\n  font-family: Chunkfive, sans;\n}\n\n@import url(print.css);\n@media print {\n  a[href^=http]::after {\n    content: attr(href)\n  }\n}\n```\n\n```ruby\n# The Greeter class\nclass Greeter\n  def initialize(name)\n    @name = name.capitalize\n  end\n\n  def salute\n    puts \"Hello #{@name}!\"\n  end\nend\n\ng = Greeter.new(\"world\")\ng.salute\n```\n\n```makefile\n# Makefile\n\nBUILDDIR      = _build\nEXTRAS       ?= $(BUILDDIR)/extras\n\n.PHONY: main clean\n\nmain:\n\t@echo \"Building main facility...\"\n\tbuild_main $(BUILDDIR)\n\nclean:\n\trm -rf $(BUILDDIR)/*\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    ch := make(chan float64)\n    ch <- 1.0e10    // magic number\n    x, ok := <- ch\n    defer fmt.Println(`exitting now\\`)\n    go println(len(\"hello world!\"))\n    return\n}\n```\n\n```bash\n#!/bin/bash\n\n###### CONFIG\nACCEPTED_HOSTS=\"/root/.hag_accepted.conf\"\nBE_VERBOSE=false\n\nif [ \"$UID\" -ne 0 ]\nthen\n  echo \"Superuser rights required\"\n  exit 2\nfi\n\ngenApacheConf(){\n  echo -e \"# Host ${HOME_DIR}$1/$2 :\"\n}\n```\n\n```ini\n; boilerplate\n[package]\nname = \"some_name\"\nauthors = [\"Author\"]\ndescription = \"This is \\\na description\"\n\n[[lib]]\nname = ${NAME}\ndefault = True\nauto = no\ncounter = 1_000\n```\n\n长文本测试\n\n```cpp\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n\n```","source":"_posts/test/code-highlight.md","raw":"---\ntitle: Code Highlight Style test\ndate: 2019-07-25 16:43:00\ntags:\nrobots: noindex,nofollow\nsidebar: []\ncover: https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/054.jpg\nhidden: true\n---\n\nMake sure all the code blocks highlighted correctly. All the code samples are come from the demo of https://highlightjs.org\n\n<!-- more -->\n\n``` plain\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n```\n\n```rust\n#[derive(Debug)]\npub enum State {\n    Start,\n    Transient,\n    Closed,\n}\n\nimpl From<&'a str> for State {\n    fn from(s: &'a str) -> Self {\n        match s {\n            \"start\" => State::Start,\n            \"closed\" => State::Closed,\n            _ => unreachable!(),\n        }\n    }\n}\n```\n\n```json\n[\n  {\n    \"title\": \"apples\",\n    \"count\": [12000, 20000],\n    \"description\": {\"text\": \"...\", \"sensitive\": false}\n  },\n  {\n    \"title\": \"oranges\",\n    \"count\": [17500, null],\n    \"description\": {\"text\": \"...\", \"sensitive\": false}\n  }\n]\n```\n\n```typescript\nclass MyClass {\n  public static myValue: string;\n  constructor(init: string) {\n    this.myValue = init;\n  }\n}\nimport fs = require(\"fs\");\nmodule MyModule {\n  export interface MyInterface extends Other {\n    myProperty: any;\n  }\n}\ndeclare magicNumber number;\nmyArray.forEach(() => { }); // fat arrow syntax\n```\n\n```python\n@requires_authorization\ndef somefunc(param1='', param2=0):\n    r'''A docstring'''\n    if param1 > param2: # interesting\n        print 'Gre\\'ater'\n    return (param2 - param1 + 1 + 0b10l) or None\n\nclass SomeClass:\n    pass\n\n>>> message = '''interpreter\n... prompt'''\n```\n\n```html\n<!DOCTYPE html>\n<title>Title</title>\n\n<style>body {width: 500px;}</style>\n\n<script type=\"application/javascript\">\n  function $init() {return true;}\n</script>\n\n<body>\n  <p checked class=\"title\" id='title'>Title</p>\n  <!-- here goes the rest of the page -->\n</body>\n```\n\n```javascript\nfunction $initHighlight(block, cls) {\n  try {\n    if (cls.search(/\\bno\\-highlight\\b/) != -1)\n      return process(block, true, 0x0F) +\n             ` class=\"${cls}\"`;\n  } catch (e) {\n    /* handle exception */\n  }\n  for (var i = 0 / 2; i < classes.length; i++) {\n    if (checkCondition(classes[i]) === undefined)\n      console.log('undefined');\n  }\n\n  return (\n    <div>\n      <web-component>{block}</web-component>\n    </div>\n  )\n}\n\nexport $initHighlight;\n```\n\n```cpp\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n```\n\n```sql\nCREATE TABLE \"topic\" (\n    \"id\" serial NOT NULL PRIMARY KEY,\n    \"forum_id\" integer NOT NULL,\n    \"subject\" varchar(255) NOT NULL\n);\nALTER TABLE \"topic\"\nADD CONSTRAINT forum_id FOREIGN KEY (\"forum_id\")\nREFERENCES \"forum\" (\"id\");\n\n-- Initials\ninsert into \"topic\" (\"forum_id\", \"subject\")\nvalues (2, 'D''artagnian');\n```\n\n```objectivec\n#import <UIKit/UIKit.h>\n#import \"Dependency.h\"\n\n@protocol WorldDataSource\n@optional\n- (NSString *)worldName;\n@required\n- (BOOL)allowsToLive;\n@end\n// comment\n@property (nonatomic, readonly) NSString *title;\n- (IBAction) show;\n@end\n```\n\n```java\n/**\n * @author John Smith <john.smith@example.com>\n*/\npackage l2f.gameserver.model;\n\npublic abstract class L2Char extends L2Object {\n  public static final Short ERROR = 0x0001;\n\n  public void moveTo(int x, int y, int z) {\n    _ai = null;\n    log(\"Should not be called\");\n    if (1 > 5) { // wtf!?\n      return;\n    }\n  }\n}\n```\n\n```swift\nimport Foundation\n\n@objc class Person: Entity {\n  var name: String!\n  var age:  Int!\n\n  init(name: String, age: Int) {\n    /* /* ... */ */\n  }\n\n  // Return a descriptive string for this person\n  func description(offset: Int = 0) -> String {\n    return \"\\(name) is \\(age + offset) years old\"\n  }\n}\n```\n\n```css\n@font-face {\n  font-family: Chunkfive; src: url('Chunkfive.otf');\n}\n\nbody, .usertext {\n  color: #F0F0F0; background: #600;\n  font-family: Chunkfive, sans;\n}\n\n@import url(print.css);\n@media print {\n  a[href^=http]::after {\n    content: attr(href)\n  }\n}\n```\n\n```ruby\n# The Greeter class\nclass Greeter\n  def initialize(name)\n    @name = name.capitalize\n  end\n\n  def salute\n    puts \"Hello #{@name}!\"\n  end\nend\n\ng = Greeter.new(\"world\")\ng.salute\n```\n\n```makefile\n# Makefile\n\nBUILDDIR      = _build\nEXTRAS       ?= $(BUILDDIR)/extras\n\n.PHONY: main clean\n\nmain:\n\t@echo \"Building main facility...\"\n\tbuild_main $(BUILDDIR)\n\nclean:\n\trm -rf $(BUILDDIR)/*\n```\n\n```go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    ch := make(chan float64)\n    ch <- 1.0e10    // magic number\n    x, ok := <- ch\n    defer fmt.Println(`exitting now\\`)\n    go println(len(\"hello world!\"))\n    return\n}\n```\n\n```bash\n#!/bin/bash\n\n###### CONFIG\nACCEPTED_HOSTS=\"/root/.hag_accepted.conf\"\nBE_VERBOSE=false\n\nif [ \"$UID\" -ne 0 ]\nthen\n  echo \"Superuser rights required\"\n  exit 2\nfi\n\ngenApacheConf(){\n  echo -e \"# Host ${HOME_DIR}$1/$2 :\"\n}\n```\n\n```ini\n; boilerplate\n[package]\nname = \"some_name\"\nauthors = [\"Author\"]\ndescription = \"This is \\\na description\"\n\n[[lib]]\nname = ${NAME}\ndefault = True\nauto = no\ncounter = 1_000\n```\n\n长文本测试\n\n```cpp\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n#include <iostream>\n\nint main(int argc, char *argv[]) {\n\n  /* An annoying \"Hello World\" example */\n  for (auto i = 0; i < 0xFFFF; i++)\n    cout << \"Hello, World!\" << endl;\n\n  char c = '\\n';\n  unordered_map <string, vector<string> > m;\n  m[\"key\"] = \"\\\\\\\\\"; // this is an error\n\n  return -2e3 + 12l;\n}\n\n```","slug":"test/code-highlight","published":1,"updated":"2023-12-16T13:55:22.309Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygxq000lo4vx3hvr722y","content":"<p>Make sure all the code blocks highlighted correctly. All the code samples are come from the demo of <a href=\"https://highlightjs.org/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">https://highlightjs.org</a></p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#x27;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight rust\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#[derive(Debug)]</span></span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">State</span> &#123;</span><br><span class=\"line\">    Start,</span><br><span class=\"line\">    Transient,</span><br><span class=\"line\">    Closed,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">From</span>&lt;&amp;<span class=\"symbol\">&#x27;a</span> <span class=\"type\">str</span>&gt; <span class=\"keyword\">for</span> <span class=\"title class_\">State</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">from</span>(s: &amp;<span class=\"symbol\">&#x27;a</span> <span class=\"type\">str</span>) <span class=\"punctuation\">-&gt;</span> <span class=\"keyword\">Self</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">match</span> s &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;start&quot;</span> =&gt; State::Start,</span><br><span class=\"line\">            <span class=\"string\">&quot;closed&quot;</span> =&gt; State::Closed,</span><br><span class=\"line\">            _ =&gt; <span class=\"built_in\">unreachable!</span>(),</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;title&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;apples&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;count&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">12000</span><span class=\"punctuation\">,</span> <span class=\"number\">20000</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;text&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;...&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;sensitive&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;title&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;oranges&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;count&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">17500</span><span class=\"punctuation\">,</span> <span class=\"literal\"><span class=\"keyword\">null</span></span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;text&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;...&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;sensitive&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"attr\">myValue</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">init: <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">myValue</span> = init;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">import</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;fs&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">module</span> <span class=\"title class_\">MyModule</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">export</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">MyInterface</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Other</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">myProperty</span>: <span class=\"built_in\">any</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">declare</span> magicNumber <span class=\"built_in\">number</span>;</span><br><span class=\"line\">myArray.<span class=\"title function_\">forEach</span>(<span class=\"function\">() =&gt;</span> &#123; &#125;); <span class=\"comment\">// fat arrow syntax</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@requires_authorization</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">somefunc</span>(<span class=\"params\">param1=<span class=\"string\">&#x27;&#x27;</span>, param2=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">    <span class=\"string\">r&#x27;&#x27;&#x27;A docstring&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> param1 &gt; param2: <span class=\"comment\"># interesting</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span> <span class=\"string\">&#x27;Gre\\&#x27;ater&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (param2 - param1 + <span class=\"number\">1</span> + <span class=\"number\">0b10l</span>) <span class=\"keyword\">or</span> <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SomeClass</span>:</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>message = <span class=\"string\">&#x27;&#x27;&#x27;interpreter</span></span><br><span class=\"line\"><span class=\"string\"><span class=\"meta\">... </span>prompt&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"><span class=\"selector-tag\">body</span> &#123;<span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;&#125;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;application/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">$init</span>(<span class=\"params\"></span>) &#123;<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">checked</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;title&#x27;</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- here goes the rest of the page --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">$initHighlight</span>(<span class=\"params\">block, cls</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (cls.<span class=\"title function_\">search</span>(<span class=\"regexp\">/\\bno\\-highlight\\b/</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">process</span>(block, <span class=\"literal\">true</span>, <span class=\"number\">0x0F</span>) +</span><br><span class=\"line\">             <span class=\"string\">` class=&quot;<span class=\"subst\">$&#123;cls&#125;</span>&quot;`</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* handle exception */</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span> / <span class=\"number\">2</span>; i &lt; classes.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">checkCondition</span>(classes[i]) === <span class=\"literal\">undefined</span>)</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;undefined&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">web-component</span>&gt;</span>&#123;block&#125;<span class=\"tag\">&lt;/<span class=\"name\">web-component</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> $initHighlight;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> &quot;topic&quot; (</span><br><span class=\"line\">    &quot;id&quot; serial <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">    &quot;forum_id&quot; <span class=\"type\">integer</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    &quot;subject&quot; <span class=\"type\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> &quot;topic&quot;</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> forum_id <span class=\"keyword\">FOREIGN</span> KEY (&quot;forum_id&quot;)</span><br><span class=\"line\"><span class=\"keyword\">REFERENCES</span> &quot;forum&quot; (&quot;id&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- Initials</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> &quot;topic&quot; (&quot;forum_id&quot;, &quot;subject&quot;)</span><br><span class=\"line\"><span class=\"keyword\">values</span> (<span class=\"number\">2</span>, <span class=\"string\">&#x27;D&#x27;&#x27;artagnian&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objectivec\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;Dependency.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@protocol</span> <span class=\"title\">WorldDataSource</span></span></span><br><span class=\"line\"><span class=\"keyword\">@optional</span></span><br><span class=\"line\">- (<span class=\"built_in\">NSString</span> *)worldName;</span><br><span class=\"line\"><span class=\"keyword\">@required</span></span><br><span class=\"line\">- (<span class=\"type\">BOOL</span>)allowsToLive;</span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br><span class=\"line\"><span class=\"comment\">// comment</span></span><br><span class=\"line\"><span class=\"keyword\">@property</span> (<span class=\"keyword\">nonatomic</span>, <span class=\"keyword\">readonly</span>) <span class=\"built_in\">NSString</span> *title;</span><br><span class=\"line\">- (<span class=\"keyword\">IBAction</span>) show;</span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> John Smith &lt;john.smith@example.com&gt;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> l2f.gameserver.model;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">L2Char</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">L2Object</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Short</span> <span class=\"variable\">ERROR</span> <span class=\"operator\">=</span> <span class=\"number\">0x0001</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">moveTo</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">int</span> z)</span> &#123;</span><br><span class=\"line\">    _ai = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    log(<span class=\"string\">&quot;Should not be called&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"number\">1</span> &gt; <span class=\"number\">5</span>) &#123; <span class=\"comment\">// wtf!?</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight swift\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Foundation</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@objc</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>: <span class=\"title class_\">Entity</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name: <span class=\"type\">String</span>!</span><br><span class=\"line\">  <span class=\"keyword\">var</span> age:  <span class=\"type\">Int</span>!</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">init</span>(<span class=\"params\">name</span>: <span class=\"type\">String</span>, <span class=\"params\">age</span>: <span class=\"type\">Int</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* <span class=\"comment\">/* ... */</span> */</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Return a descriptive string for this person</span></span><br><span class=\"line\">  <span class=\"keyword\">func</span> <span class=\"title function_\">description</span>(<span class=\"params\">offset</span>: <span class=\"type\">Int</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>) -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;<span class=\"subst\">\\(name)</span> is <span class=\"subst\">\\(age <span class=\"operator\">+</span> offset)</span> years old&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@font-face</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: Chunkfive; <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;Chunkfive.otf&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span>, <span class=\"selector-class\">.usertext</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#F0F0F0</span>; <span class=\"attribute\">background</span>: <span class=\"number\">#600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: Chunkfive, sans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@import</span> url(print.css);</span><br><span class=\"line\"><span class=\"keyword\">@media</span> print &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">a</span><span class=\"selector-attr\">[href^=http]</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"built_in\">attr</span>(href)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ruby\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># The Greeter class</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Greeter</span></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">initialize</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\">    <span class=\"variable\">@name</span> = name.capitalize</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">salute</span></span><br><span class=\"line\">    puts <span class=\"string\">&quot;Hello <span class=\"subst\">#&#123;<span class=\"variable\">@name</span>&#125;</span>!&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">g = <span class=\"title class_\">Greeter</span>.new(<span class=\"string\">&quot;world&quot;</span>)</span><br><span class=\"line\">g.salute</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Makefile</span></span><br><span class=\"line\"></span><br><span class=\"line\">BUILDDIR      = _build</span><br><span class=\"line\">EXTRAS       ?= <span class=\"variable\">$(BUILDDIR)</span>/extras</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"><span class=\"keyword\">.PHONY</span>: main clean</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">main:</span></span><br><span class=\"line\">    @echo <span class=\"string\">&quot;Building main facility...&quot;</span></span><br><span class=\"line\">    build_main <span class=\"variable\">$(BUILDDIR)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">clean:</span></span><br><span class=\"line\">    rm -rf <span class=\"variable\">$(BUILDDIR)</span>/*</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    ch := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">float64</span>)</span><br><span class=\"line\">    ch &lt;- <span class=\"number\">1.0e10</span>    <span class=\"comment\">// magic number</span></span><br><span class=\"line\">    x, ok := &lt;- ch</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> fmt.Println(<span class=\"string\">`exitting now\\`</span>)</span><br><span class=\"line\">    <span class=\"keyword\">go</span> <span class=\"built_in\">println</span>(<span class=\"built_in\">len</span>(<span class=\"string\">&quot;hello world!&quot;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###### CONFIG</span></span><br><span class=\"line\">ACCEPTED_HOSTS=<span class=\"string\">&quot;/root/.hag_accepted.conf&quot;</span></span><br><span class=\"line\">BE_VERBOSE=<span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"variable\">$UID</span>&quot;</span> -ne 0 ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Superuser rights required&quot;</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 2</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">genApacheConf</span></span>()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> -e <span class=\"string\">&quot;# Host <span class=\"variable\">$&#123;HOME_DIR&#125;</span><span class=\"variable\">$1</span>/<span class=\"variable\">$2</span> :&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">; boilerplate</span></span><br><span class=\"line\"><span class=\"section\">[package]</span></span><br><span class=\"line\"><span class=\"attr\">name</span> = <span class=\"string\">&quot;some_name&quot;</span></span><br><span class=\"line\"><span class=\"attr\">authors</span> = [<span class=\"string\">&quot;Author&quot;</span>]</span><br><span class=\"line\"><span class=\"attr\">description</span> = <span class=\"string\">&quot;This is \\</span></span><br><span class=\"line\"><span class=\"string\">a description&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[[lib]]</span></span><br><span class=\"line\"><span class=\"attr\">name</span> = <span class=\"variable\">$&#123;NAME&#125;</span></span><br><span class=\"line\"><span class=\"attr\">default</span> = <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"attr\">auto</span> = <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">counter</span> = <span class=\"number\">1_000</span></span><br></pre></td></tr></table></figure>\n\n<p>长文本测试</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><!-- flag of hidden posts -->","excerpt":"<p>Make sure all the code blocks highlighted correctly. All the code samples are come from the demo of <a href=\"https://highlightjs.org/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">https://highlightjs.org</a></p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry&#x27;s standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight rust\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#[derive(Debug)]</span></span><br><span class=\"line\"><span class=\"keyword\">pub</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">State</span> &#123;</span><br><span class=\"line\">    Start,</span><br><span class=\"line\">    Transient,</span><br><span class=\"line\">    Closed,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">impl</span> <span class=\"title class_\">From</span>&lt;&amp;<span class=\"symbol\">&#x27;a</span> <span class=\"type\">str</span>&gt; <span class=\"keyword\">for</span> <span class=\"title class_\">State</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">fn</span> <span class=\"title function_\">from</span>(s: &amp;<span class=\"symbol\">&#x27;a</span> <span class=\"type\">str</span>) <span class=\"punctuation\">-&gt;</span> <span class=\"keyword\">Self</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">match</span> s &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;start&quot;</span> =&gt; State::Start,</span><br><span class=\"line\">            <span class=\"string\">&quot;closed&quot;</span> =&gt; State::Closed,</span><br><span class=\"line\">            _ =&gt; <span class=\"built_in\">unreachable!</span>(),</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">[</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;title&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;apples&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;count&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">12000</span><span class=\"punctuation\">,</span> <span class=\"number\">20000</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;text&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;...&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;sensitive&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;title&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;oranges&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;count&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"number\">17500</span><span class=\"punctuation\">,</span> <span class=\"literal\"><span class=\"keyword\">null</span></span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;description&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;text&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;...&quot;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;sensitive&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">]</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight typescript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyClass</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"attr\">myValue</span>: <span class=\"built_in\">string</span>;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">init: <span class=\"built_in\">string</span></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">myValue</span> = init;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">import</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;fs&quot;</span>);</span><br><span class=\"line\"><span class=\"variable language_\">module</span> <span class=\"title class_\">MyModule</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">export</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">MyInterface</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Other</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">myProperty</span>: <span class=\"built_in\">any</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">declare</span> magicNumber <span class=\"built_in\">number</span>;</span><br><span class=\"line\">myArray.<span class=\"title function_\">forEach</span>(<span class=\"function\">() =&gt;</span> &#123; &#125;); <span class=\"comment\">// fat arrow syntax</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@requires_authorization</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">somefunc</span>(<span class=\"params\">param1=<span class=\"string\">&#x27;&#x27;</span>, param2=<span class=\"number\">0</span></span>):</span><br><span class=\"line\">    <span class=\"string\">r&#x27;&#x27;&#x27;A docstring&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> param1 &gt; param2: <span class=\"comment\"># interesting</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span> <span class=\"string\">&#x27;Gre\\&#x27;ater&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (param2 - param1 + <span class=\"number\">1</span> + <span class=\"number\">0b10l</span>) <span class=\"keyword\">or</span> <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">SomeClass</span>:</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>message = <span class=\"string\">&#x27;&#x27;&#x27;interpreter</span></span><br><span class=\"line\"><span class=\"string\"><span class=\"meta\">... </span>prompt&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"><span class=\"selector-tag\">body</span> &#123;<span class=\"attribute\">width</span>: <span class=\"number\">500px</span>;&#125;</span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;application/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">function</span> <span class=\"title function_\">$init</span>(<span class=\"params\"></span>) &#123;<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">checked</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;title&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&#x27;title&#x27;</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- here goes the rest of the page --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">$initHighlight</span>(<span class=\"params\">block, cls</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (cls.<span class=\"title function_\">search</span>(<span class=\"regexp\">/\\bno\\-highlight\\b/</span>) != -<span class=\"number\">1</span>)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">process</span>(block, <span class=\"literal\">true</span>, <span class=\"number\">0x0F</span>) +</span><br><span class=\"line\">             <span class=\"string\">` class=&quot;<span class=\"subst\">$&#123;cls&#125;</span>&quot;`</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* handle exception */</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span> / <span class=\"number\">2</span>; i &lt; classes.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">checkCondition</span>(classes[i]) === <span class=\"literal\">undefined</span>)</span><br><span class=\"line\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;undefined&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> (</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">web-component</span>&gt;</span>&#123;block&#125;<span class=\"tag\">&lt;/<span class=\"name\">web-component</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span></span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> $initHighlight;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> &quot;topic&quot; (</span><br><span class=\"line\">    &quot;id&quot; serial <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span> <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">    &quot;forum_id&quot; <span class=\"type\">integer</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    &quot;subject&quot; <span class=\"type\">varchar</span>(<span class=\"number\">255</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span></span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> &quot;topic&quot;</span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> forum_id <span class=\"keyword\">FOREIGN</span> KEY (&quot;forum_id&quot;)</span><br><span class=\"line\"><span class=\"keyword\">REFERENCES</span> &quot;forum&quot; (&quot;id&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- Initials</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> &quot;topic&quot; (&quot;forum_id&quot;, &quot;subject&quot;)</span><br><span class=\"line\"><span class=\"keyword\">values</span> (<span class=\"number\">2</span>, <span class=\"string\">&#x27;D&#x27;&#x27;artagnian&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight objectivec\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#import <span class=\"string\">&quot;Dependency.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">@protocol</span> <span class=\"title\">WorldDataSource</span></span></span><br><span class=\"line\"><span class=\"keyword\">@optional</span></span><br><span class=\"line\">- (<span class=\"built_in\">NSString</span> *)worldName;</span><br><span class=\"line\"><span class=\"keyword\">@required</span></span><br><span class=\"line\">- (<span class=\"type\">BOOL</span>)allowsToLive;</span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br><span class=\"line\"><span class=\"comment\">// comment</span></span><br><span class=\"line\"><span class=\"keyword\">@property</span> (<span class=\"keyword\">nonatomic</span>, <span class=\"keyword\">readonly</span>) <span class=\"built_in\">NSString</span> *title;</span><br><span class=\"line\">- (<span class=\"keyword\">IBAction</span>) show;</span><br><span class=\"line\"><span class=\"keyword\">@end</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> John Smith &lt;john.smith@example.com&gt;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">package</span> l2f.gameserver.model;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">L2Char</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">L2Object</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">Short</span> <span class=\"variable\">ERROR</span> <span class=\"operator\">=</span> <span class=\"number\">0x0001</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">moveTo</span><span class=\"params\">(<span class=\"type\">int</span> x, <span class=\"type\">int</span> y, <span class=\"type\">int</span> z)</span> &#123;</span><br><span class=\"line\">    _ai = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    log(<span class=\"string\">&quot;Should not be called&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"number\">1</span> &gt; <span class=\"number\">5</span>) &#123; <span class=\"comment\">// wtf!?</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight swift\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> Foundation</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@objc</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span>: <span class=\"title class_\">Entity</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> name: <span class=\"type\">String</span>!</span><br><span class=\"line\">  <span class=\"keyword\">var</span> age:  <span class=\"type\">Int</span>!</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">init</span>(<span class=\"params\">name</span>: <span class=\"type\">String</span>, <span class=\"params\">age</span>: <span class=\"type\">Int</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* <span class=\"comment\">/* ... */</span> */</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Return a descriptive string for this person</span></span><br><span class=\"line\">  <span class=\"keyword\">func</span> <span class=\"title function_\">description</span>(<span class=\"params\">offset</span>: <span class=\"type\">Int</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>) -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;<span class=\"subst\">\\(name)</span> is <span class=\"subst\">\\(age <span class=\"operator\">+</span> offset)</span> years old&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@font-face</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: Chunkfive; <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;Chunkfive.otf&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span>, <span class=\"selector-class\">.usertext</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#F0F0F0</span>; <span class=\"attribute\">background</span>: <span class=\"number\">#600</span>;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: Chunkfive, sans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@import</span> url(print.css);</span><br><span class=\"line\"><span class=\"keyword\">@media</span> print &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">a</span><span class=\"selector-attr\">[href^=http]</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"built_in\">attr</span>(href)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ruby\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># The Greeter class</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Greeter</span></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">initialize</span>(<span class=\"params\">name</span>)</span><br><span class=\"line\">    <span class=\"variable\">@name</span> = name.capitalize</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">def</span> <span class=\"title function_\">salute</span></span><br><span class=\"line\">    puts <span class=\"string\">&quot;Hello <span class=\"subst\">#&#123;<span class=\"variable\">@name</span>&#125;</span>!&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">g = <span class=\"title class_\">Greeter</span>.new(<span class=\"string\">&quot;world&quot;</span>)</span><br><span class=\"line\">g.salute</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight makefile\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Makefile</span></span><br><span class=\"line\"></span><br><span class=\"line\">BUILDDIR      = _build</span><br><span class=\"line\">EXTRAS       ?= <span class=\"variable\">$(BUILDDIR)</span>/extras</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\"><span class=\"keyword\">.PHONY</span>: main clean</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">main:</span></span><br><span class=\"line\">    @echo <span class=\"string\">&quot;Building main facility...&quot;</span></span><br><span class=\"line\">    build_main <span class=\"variable\">$(BUILDDIR)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">clean:</span></span><br><span class=\"line\">    rm -rf <span class=\"variable\">$(BUILDDIR)</span>/*</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    ch := <span class=\"built_in\">make</span>(<span class=\"keyword\">chan</span> <span class=\"type\">float64</span>)</span><br><span class=\"line\">    ch &lt;- <span class=\"number\">1.0e10</span>    <span class=\"comment\">// magic number</span></span><br><span class=\"line\">    x, ok := &lt;- ch</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> fmt.Println(<span class=\"string\">`exitting now\\`</span>)</span><br><span class=\"line\">    <span class=\"keyword\">go</span> <span class=\"built_in\">println</span>(<span class=\"built_in\">len</span>(<span class=\"string\">&quot;hello world!&quot;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">###### CONFIG</span></span><br><span class=\"line\">ACCEPTED_HOSTS=<span class=\"string\">&quot;/root/.hag_accepted.conf&quot;</span></span><br><span class=\"line\">BE_VERBOSE=<span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"variable\">$UID</span>&quot;</span> -ne 0 ]</span><br><span class=\"line\"><span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">&quot;Superuser rights required&quot;</span></span><br><span class=\"line\">  <span class=\"built_in\">exit</span> 2</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">genApacheConf</span></span>()&#123;</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> -e <span class=\"string\">&quot;# Host <span class=\"variable\">$&#123;HOME_DIR&#125;</span><span class=\"variable\">$1</span>/<span class=\"variable\">$2</span> :&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight ini\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">; boilerplate</span></span><br><span class=\"line\"><span class=\"section\">[package]</span></span><br><span class=\"line\"><span class=\"attr\">name</span> = <span class=\"string\">&quot;some_name&quot;</span></span><br><span class=\"line\"><span class=\"attr\">authors</span> = [<span class=\"string\">&quot;Author&quot;</span>]</span><br><span class=\"line\"><span class=\"attr\">description</span> = <span class=\"string\">&quot;This is \\</span></span><br><span class=\"line\"><span class=\"string\">a description&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">[[lib]]</span></span><br><span class=\"line\"><span class=\"attr\">name</span> = <span class=\"variable\">$&#123;NAME&#125;</span></span><br><span class=\"line\"><span class=\"attr\">default</span> = <span class=\"literal\">True</span></span><br><span class=\"line\"><span class=\"attr\">auto</span> = <span class=\"literal\">no</span></span><br><span class=\"line\"><span class=\"attr\">counter</span> = <span class=\"number\">1_000</span></span><br></pre></td></tr></table></figure>\n\n<p>长文本测试</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span> *argv[])</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/* An annoying &quot;Hello World&quot; example */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">0xFFFF</span>; i++)</span><br><span class=\"line\">    cout &lt;&lt; <span class=\"string\">&quot;Hello, World!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"type\">char</span> c = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  unordered_map &lt;string, vector&lt;string&gt; &gt; m;</span><br><span class=\"line\">  m[<span class=\"string\">&quot;key&quot;</span>] = <span class=\"string\">&quot;\\\\\\\\&quot;</span>; <span class=\"comment\">// this is an error</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">-2e3</span> + <span class=\"number\">12l</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sat Dec 16 2023 15:55:22 GMT+0200 (Israel Standard Time)","title":"Code Highlight Style test","path":"test/code-highlight/","eyeCatchImage":null,"excerpt":"<p>Make sure all the code blocks highlighted correctly. All the code samples are come from the demo of <a href=\"https://highlightjs.org/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">https://highlightjs.org</a></p>","date":{"_isAMomentObject":true,"_i":"2019-07-25T13:43:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2019-07-25T13:43:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":[],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Excerpts","date":"2013-12-24T22:23:23.000Z","robots":"noindex,nofollow","hidden":true,"_content":"\nThe following contents should be invisible in home/archive page.\n\n<!-- more -->\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget urna vitae velit eleifend interdum at ac nisi. In nec ligula lacus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed eu cursus erat, ut dapibus quam. Aliquam eleifend dolor vitae libero pharetra adipiscing. Etiam adipiscing dolor a quam tempor, eu convallis nulla varius. Aliquam sollicitudin risus a porta aliquam. Ut nec velit dolor. Proin eget leo lobortis, aliquam est sed, mollis mauris. Fusce vitae leo pretium massa accumsan condimentum. Fusce malesuada gravida lectus vel vulputate. Donec bibendum porta nibh ut aliquam.\n\nSed lorem felis, congue non fringilla eu, aliquam eu eros. Curabitur orci libero, mollis sed semper vitae, adipiscing in lectus. Aenean non egestas odio. Donec sollicitudin nisi quis lorem gravida, in pharetra mauris fringilla. Duis sit amet faucibus dolor, id aliquam neque. In egestas, odio gravida tempor dictum, mauris felis faucibus purus, sit amet commodo lacus diam vitae est. Ut ut quam eget massa semper sodales. Aenean non ipsum cursus, blandit lectus in, ornare odio. Curabitur ultrices porttitor vulputate.\n","source":"_posts/test/excerpts.md","raw":"title: Excerpts\ndate: 2013-12-25 00:23:23\ntags:\nrobots: noindex,nofollow\nhidden: true\n---\n\nThe following contents should be invisible in home/archive page.\n\n<!-- more -->\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget urna vitae velit eleifend interdum at ac nisi. In nec ligula lacus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed eu cursus erat, ut dapibus quam. Aliquam eleifend dolor vitae libero pharetra adipiscing. Etiam adipiscing dolor a quam tempor, eu convallis nulla varius. Aliquam sollicitudin risus a porta aliquam. Ut nec velit dolor. Proin eget leo lobortis, aliquam est sed, mollis mauris. Fusce vitae leo pretium massa accumsan condimentum. Fusce malesuada gravida lectus vel vulputate. Donec bibendum porta nibh ut aliquam.\n\nSed lorem felis, congue non fringilla eu, aliquam eu eros. Curabitur orci libero, mollis sed semper vitae, adipiscing in lectus. Aenean non egestas odio. Donec sollicitudin nisi quis lorem gravida, in pharetra mauris fringilla. Duis sit amet faucibus dolor, id aliquam neque. In egestas, odio gravida tempor dictum, mauris felis faucibus purus, sit amet commodo lacus diam vitae est. Ut ut quam eget massa semper sodales. Aenean non ipsum cursus, blandit lectus in, ornare odio. Curabitur ultrices porttitor vulputate.\n","slug":"test/excerpts","published":1,"updated":"2023-12-16T13:55:31.285Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygxr000mo4vxg4683s3r","content":"<p>The following contents should be invisible in home&#x2F;archive page.</p>\n<span id=\"more\"></span>\n\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget urna vitae velit eleifend interdum at ac nisi. In nec ligula lacus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed eu cursus erat, ut dapibus quam. Aliquam eleifend dolor vitae libero pharetra adipiscing. Etiam adipiscing dolor a quam tempor, eu convallis nulla varius. Aliquam sollicitudin risus a porta aliquam. Ut nec velit dolor. Proin eget leo lobortis, aliquam est sed, mollis mauris. Fusce vitae leo pretium massa accumsan condimentum. Fusce malesuada gravida lectus vel vulputate. Donec bibendum porta nibh ut aliquam.</p>\n<p>Sed lorem felis, congue non fringilla eu, aliquam eu eros. Curabitur orci libero, mollis sed semper vitae, adipiscing in lectus. Aenean non egestas odio. Donec sollicitudin nisi quis lorem gravida, in pharetra mauris fringilla. Duis sit amet faucibus dolor, id aliquam neque. In egestas, odio gravida tempor dictum, mauris felis faucibus purus, sit amet commodo lacus diam vitae est. Ut ut quam eget massa semper sodales. Aenean non ipsum cursus, blandit lectus in, ornare odio. Curabitur ultrices porttitor vulputate.</p>\n<!-- flag of hidden posts -->","excerpt":"<p>The following contents should be invisible in home&#x2F;archive page.</p>","more":"<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce eget urna vitae velit eleifend interdum at ac nisi. In nec ligula lacus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Sed eu cursus erat, ut dapibus quam. Aliquam eleifend dolor vitae libero pharetra adipiscing. Etiam adipiscing dolor a quam tempor, eu convallis nulla varius. Aliquam sollicitudin risus a porta aliquam. Ut nec velit dolor. Proin eget leo lobortis, aliquam est sed, mollis mauris. Fusce vitae leo pretium massa accumsan condimentum. Fusce malesuada gravida lectus vel vulputate. Donec bibendum porta nibh ut aliquam.</p>\n<p>Sed lorem felis, congue non fringilla eu, aliquam eu eros. Curabitur orci libero, mollis sed semper vitae, adipiscing in lectus. Aenean non egestas odio. Donec sollicitudin nisi quis lorem gravida, in pharetra mauris fringilla. Duis sit amet faucibus dolor, id aliquam neque. In egestas, odio gravida tempor dictum, mauris felis faucibus purus, sit amet commodo lacus diam vitae est. Ut ut quam eget massa semper sodales. Aenean non ipsum cursus, blandit lectus in, ornare odio. Curabitur ultrices porttitor vulputate.</p>","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sat Dec 16 2023 15:55:31 GMT+0200 (Israel Standard Time)","title":"Excerpts","path":"test/excerpts/","eyeCatchImage":null,"excerpt":"<p>The following contents should be invisible in home&#x2F;archive page.</p>","date":{"_isAMomentObject":true,"_i":"2013-12-24T22:23:23.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2013-12-24T22:23:23.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":[],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Elements","date":"2013-12-24T21:29:08.000Z","robots":"noindex,nofollow","hidden":true,"_content":"\nThe purpose of this post is to help you make sure all of HTML elements can display properly. If you use CSS reset, don't forget to redefine the style by yourself.\n\n---\n\n# Heading 1\n\n## Heading 2\n\n### Heading 3\n\n#### Heading 4\n\n##### Heading 5\n\n###### Heading 6\n\n---\n\n## Paragraph\n\nLorem ipsum dolor sit amet, [test link]() consectetur adipiscing elit. **Strong text** pellentesque ligula commodo viverra vehicula. *Italic text* at ullamcorper enim. Morbi a euismod nibh. <u>Underline text</u> non elit nisl. ~~Deleted text~~ tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.\n\nInterdum et malesuada fames ac ante ipsum primis in faucibus. `Sed erat diam`, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget.\n\n> Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.\n\nMaecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet.\n\n## List Types\n\n### Definition List (dl)\n\n<dl><dt>Definition List Title</dt><dd>This is a definition list division.</dd></dl>\n\n### Ordered List (ol)\n\n1. List Item 1\n2. List Item 2\n3. List Item 3\n\n### Unordered List (ul)\n\n- List Item 1\n- List Item 2\n- List Item 3\n\n### Checkbox List (ul)\n\n- [ ] List Item 1 unchecked\n- [x] List Item 2 checked\n- [X] List Item 3 checked\n\n## Table\n\n| Table Header 1 | Table Header 2 | Table Header 3 |\n| - | - | - |\n| Division 1 | Division 2 | Division 3 |\n| Division 1 | Division 2 | Division 3 |\n| Division 1 | Division 2 | Division 3 |\n\n## Misc Stuff - abbr, acronym, sub, sup, kbd, etc.\n\nLorem <sup>superscript</sup> dolor <sub>subscript</sub> amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. <cite>cite</cite>. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. <acronym title=\"National Basketball Association\">NBA</acronym> Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  <abbr title=\"Avenue\">AVE</abbr>. Use <kbd>Crtl</kbd> + <kbd>C</kbd> to stop.\n","source":"_posts/test/elements.md","raw":"title: Elements\ndate: 2013-12-24 23:29:08\ntags:\nrobots: noindex,nofollow\nhidden: true\n---\n\nThe purpose of this post is to help you make sure all of HTML elements can display properly. If you use CSS reset, don't forget to redefine the style by yourself.\n\n---\n\n# Heading 1\n\n## Heading 2\n\n### Heading 3\n\n#### Heading 4\n\n##### Heading 5\n\n###### Heading 6\n\n---\n\n## Paragraph\n\nLorem ipsum dolor sit amet, [test link]() consectetur adipiscing elit. **Strong text** pellentesque ligula commodo viverra vehicula. *Italic text* at ullamcorper enim. Morbi a euismod nibh. <u>Underline text</u> non elit nisl. ~~Deleted text~~ tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.\n\nInterdum et malesuada fames ac ante ipsum primis in faucibus. `Sed erat diam`, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget.\n\n> Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.\n\nMaecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet.\n\n## List Types\n\n### Definition List (dl)\n\n<dl><dt>Definition List Title</dt><dd>This is a definition list division.</dd></dl>\n\n### Ordered List (ol)\n\n1. List Item 1\n2. List Item 2\n3. List Item 3\n\n### Unordered List (ul)\n\n- List Item 1\n- List Item 2\n- List Item 3\n\n### Checkbox List (ul)\n\n- [ ] List Item 1 unchecked\n- [x] List Item 2 checked\n- [X] List Item 3 checked\n\n## Table\n\n| Table Header 1 | Table Header 2 | Table Header 3 |\n| - | - | - |\n| Division 1 | Division 2 | Division 3 |\n| Division 1 | Division 2 | Division 3 |\n| Division 1 | Division 2 | Division 3 |\n\n## Misc Stuff - abbr, acronym, sub, sup, kbd, etc.\n\nLorem <sup>superscript</sup> dolor <sub>subscript</sub> amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. <cite>cite</cite>. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. <acronym title=\"National Basketball Association\">NBA</acronym> Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  <abbr title=\"Avenue\">AVE</abbr>. Use <kbd>Crtl</kbd> + <kbd>C</kbd> to stop.\n","slug":"test/elements","published":1,"updated":"2023-12-16T13:55:27.399Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygxs000po4vx3879a11b","content":"<p>The purpose of this post is to help you make sure all of HTML elements can display properly. If you use CSS reset, don&#39;t forget to redefine the style by yourself.</p>\n<hr>\n<h1 id=\"Heading-1\"><a href=\"#Heading-1\" class=\"headerlink\" title=\"Heading 1\"></a>Heading 1</h1><h2 id=\"Heading-2\"><a href=\"#Heading-2\" class=\"headerlink\" title=\"Heading 2\"></a>Heading 2</h2><h3 id=\"Heading-3\"><a href=\"#Heading-3\" class=\"headerlink\" title=\"Heading 3\"></a>Heading 3</h3><h4 id=\"Heading-4\"><a href=\"#Heading-4\" class=\"headerlink\" title=\"Heading 4\"></a>Heading 4</h4><h5 id=\"Heading-5\"><a href=\"#Heading-5\" class=\"headerlink\" title=\"Heading 5\"></a>Heading 5</h5><h6 id=\"Heading-6\"><a href=\"#Heading-6\" class=\"headerlink\" title=\"Heading 6\"></a>Heading 6</h6><hr>\n<h2 id=\"Paragraph\"><a href=\"#Paragraph\" class=\"headerlink\" title=\"Paragraph\"></a>Paragraph</h2><p>Lorem ipsum dolor sit amet, <a href=\"\">test link</a> consectetur adipiscing elit. <strong>Strong text</strong> pellentesque ligula commodo viverra vehicula. <em>Italic text</em> at ullamcorper enim. Morbi a euismod nibh. <u>Underline text</u> non elit nisl. <del>Deleted text</del> tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.</p>\n<p>Interdum et malesuada fames ac ante ipsum primis in faucibus. <code>Sed erat diam</code>, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget.</p>\n<blockquote>\n<p>Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.</p>\n</blockquote>\n<p>Maecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet.</p>\n<h2 id=\"List-Types\"><a href=\"#List-Types\" class=\"headerlink\" title=\"List Types\"></a>List Types</h2><h3 id=\"Definition-List-dl\"><a href=\"#Definition-List-dl\" class=\"headerlink\" title=\"Definition List (dl)\"></a>Definition List (dl)</h3><dl><dt>Definition List Title</dt><dd>This is a definition list division.</dd></dl>\n\n<h3 id=\"Ordered-List-ol\"><a href=\"#Ordered-List-ol\" class=\"headerlink\" title=\"Ordered List (ol)\"></a>Ordered List (ol)</h3><ol>\n<li>List Item 1</li>\n<li>List Item 2</li>\n<li>List Item 3</li>\n</ol>\n<h3 id=\"Unordered-List-ul\"><a href=\"#Unordered-List-ul\" class=\"headerlink\" title=\"Unordered List (ul)\"></a>Unordered List (ul)</h3><ul>\n<li>List Item 1</li>\n<li>List Item 2</li>\n<li>List Item 3</li>\n</ul>\n<h3 id=\"Checkbox-List-ul\"><a href=\"#Checkbox-List-ul\" class=\"headerlink\" title=\"Checkbox List (ul)\"></a>Checkbox List (ul)</h3><ul>\n<li><input disabled=\"\" type=\"checkbox\"> List Item 1 unchecked</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> List Item 2 checked</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> List Item 3 checked</li>\n</ul>\n<h2 id=\"Table\"><a href=\"#Table\" class=\"headerlink\" title=\"Table\"></a>Table</h2><table>\n<thead>\n<tr>\n<th>Table Header 1</th>\n<th>Table Header 2</th>\n<th>Table Header 3</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Division 1</td>\n<td>Division 2</td>\n<td>Division 3</td>\n</tr>\n<tr>\n<td>Division 1</td>\n<td>Division 2</td>\n<td>Division 3</td>\n</tr>\n<tr>\n<td>Division 1</td>\n<td>Division 2</td>\n<td>Division 3</td>\n</tr>\n</tbody></table>\n<h2 id=\"Misc-Stuff-abbr-acronym-sub-sup-kbd-etc\"><a href=\"#Misc-Stuff-abbr-acronym-sub-sup-kbd-etc\" class=\"headerlink\" title=\"Misc Stuff - abbr, acronym, sub, sup, kbd, etc.\"></a>Misc Stuff - abbr, acronym, sub, sup, kbd, etc.</h2><p>Lorem <sup>superscript</sup> dolor <sub>subscript</sub> amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. <cite>cite</cite>. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. <acronym title=\"National Basketball Association\">NBA</acronym> Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  <abbr title=\"Avenue\">AVE</abbr>. Use <kbd>Crtl</kbd> + <kbd>C</kbd> to stop.</p>\n<!-- flag of hidden posts -->","excerpt":"","more":"<p>The purpose of this post is to help you make sure all of HTML elements can display properly. If you use CSS reset, don&#39;t forget to redefine the style by yourself.</p>\n<hr>\n<h1 id=\"Heading-1\"><a href=\"#Heading-1\" class=\"headerlink\" title=\"Heading 1\"></a>Heading 1</h1><h2 id=\"Heading-2\"><a href=\"#Heading-2\" class=\"headerlink\" title=\"Heading 2\"></a>Heading 2</h2><h3 id=\"Heading-3\"><a href=\"#Heading-3\" class=\"headerlink\" title=\"Heading 3\"></a>Heading 3</h3><h4 id=\"Heading-4\"><a href=\"#Heading-4\" class=\"headerlink\" title=\"Heading 4\"></a>Heading 4</h4><h5 id=\"Heading-5\"><a href=\"#Heading-5\" class=\"headerlink\" title=\"Heading 5\"></a>Heading 5</h5><h6 id=\"Heading-6\"><a href=\"#Heading-6\" class=\"headerlink\" title=\"Heading 6\"></a>Heading 6</h6><hr>\n<h2 id=\"Paragraph\"><a href=\"#Paragraph\" class=\"headerlink\" title=\"Paragraph\"></a>Paragraph</h2><p>Lorem ipsum dolor sit amet, <a href=\"\">test link</a> consectetur adipiscing elit. <strong>Strong text</strong> pellentesque ligula commodo viverra vehicula. <em>Italic text</em> at ullamcorper enim. Morbi a euismod nibh. <u>Underline text</u> non elit nisl. <del>Deleted text</del> tristique, sem id condimentum tempus, metus lectus venenatis mauris, sit amet semper lorem felis a eros. Fusce egestas nibh at sagittis auctor. Sed ultricies ac arcu quis molestie. Donec dapibus nunc in nibh egestas, vitae volutpat sem iaculis. Curabitur sem tellus, elementum nec quam id, fermentum laoreet mi. Ut mollis ullamcorper turpis, vitae facilisis velit ultricies sit amet. Etiam laoreet dui odio, id tempus justo tincidunt id. Phasellus scelerisque nunc sed nunc ultricies accumsan.</p>\n<p>Interdum et malesuada fames ac ante ipsum primis in faucibus. <code>Sed erat diam</code>, blandit eget felis aliquam, rhoncus varius urna. Donec tellus sapien, sodales eget ante vitae, feugiat ullamcorper urna. Praesent auctor dui vitae dapibus eleifend. Proin viverra mollis neque, ut ullamcorper elit posuere eget.</p>\n<blockquote>\n<p>Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.</p>\n</blockquote>\n<p>Maecenas ornare arcu at mi suscipit, non molestie tortor ultrices. Aenean convallis, diam et congue ultricies, erat magna tincidunt orci, pulvinar posuere mi sapien ac magna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Praesent vitae placerat mauris. Nullam laoreet ante posuere tortor blandit auctor. Sed id ligula volutpat leo consequat placerat. Mauris fermentum dolor sed augue malesuada sollicitudin. Vivamus ultrices nunc felis, quis viverra orci eleifend ut. Donec et quam id urna cursus posuere. Donec elementum scelerisque laoreet.</p>\n<h2 id=\"List-Types\"><a href=\"#List-Types\" class=\"headerlink\" title=\"List Types\"></a>List Types</h2><h3 id=\"Definition-List-dl\"><a href=\"#Definition-List-dl\" class=\"headerlink\" title=\"Definition List (dl)\"></a>Definition List (dl)</h3><dl><dt>Definition List Title</dt><dd>This is a definition list division.</dd></dl>\n\n<h3 id=\"Ordered-List-ol\"><a href=\"#Ordered-List-ol\" class=\"headerlink\" title=\"Ordered List (ol)\"></a>Ordered List (ol)</h3><ol>\n<li>List Item 1</li>\n<li>List Item 2</li>\n<li>List Item 3</li>\n</ol>\n<h3 id=\"Unordered-List-ul\"><a href=\"#Unordered-List-ul\" class=\"headerlink\" title=\"Unordered List (ul)\"></a>Unordered List (ul)</h3><ul>\n<li>List Item 1</li>\n<li>List Item 2</li>\n<li>List Item 3</li>\n</ul>\n<h3 id=\"Checkbox-List-ul\"><a href=\"#Checkbox-List-ul\" class=\"headerlink\" title=\"Checkbox List (ul)\"></a>Checkbox List (ul)</h3><ul>\n<li><input disabled=\"\" type=\"checkbox\"> List Item 1 unchecked</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> List Item 2 checked</li>\n<li><input checked=\"\" disabled=\"\" type=\"checkbox\"> List Item 3 checked</li>\n</ul>\n<h2 id=\"Table\"><a href=\"#Table\" class=\"headerlink\" title=\"Table\"></a>Table</h2><table>\n<thead>\n<tr>\n<th>Table Header 1</th>\n<th>Table Header 2</th>\n<th>Table Header 3</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Division 1</td>\n<td>Division 2</td>\n<td>Division 3</td>\n</tr>\n<tr>\n<td>Division 1</td>\n<td>Division 2</td>\n<td>Division 3</td>\n</tr>\n<tr>\n<td>Division 1</td>\n<td>Division 2</td>\n<td>Division 3</td>\n</tr>\n</tbody></table>\n<h2 id=\"Misc-Stuff-abbr-acronym-sub-sup-kbd-etc\"><a href=\"#Misc-Stuff-abbr-acronym-sub-sup-kbd-etc\" class=\"headerlink\" title=\"Misc Stuff - abbr, acronym, sub, sup, kbd, etc.\"></a>Misc Stuff - abbr, acronym, sub, sup, kbd, etc.</h2><p>Lorem <sup>superscript</sup> dolor <sub>subscript</sub> amet, consectetuer adipiscing elit. Nullam dignissim convallis est. Quisque aliquam. <cite>cite</cite>. Nunc iaculis suscipit dui. Nam sit amet sem. Aliquam libero nisi, imperdiet at, tincidunt nec, gravida vehicula, nisl. Praesent mattis, massa quis luctus fermentum, turpis mi volutpat justo, eu volutpat enim diam eget metus. Maecenas ornare tortor. Donec sed tellus eget sapien fringilla nonummy. <acronym title=\"National Basketball Association\">NBA</acronym> Mauris a ante. Suspendisse quam sem, consequat at, commodo vitae, feugiat in, nunc. Morbi imperdiet augue quis tellus.  <abbr title=\"Avenue\">AVE</abbr>. Use <kbd>Crtl</kbd> + <kbd>C</kbd> to stop.</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sat Dec 16 2023 15:55:27 GMT+0200 (Israel Standard Time)","title":"Elements","path":"test/elements/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2013-12-24T21:29:08.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2013-12-24T21:29:08.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":[],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"robots":"noindex,nofollow","layout":"page","title":"测试「文章内链接作文本的话无法生成静态文件」","date":"2020-03-05T22:00:00.000Z","toc":false,"hidden":true,"_content":"\n5、测试Tomcat是否配置成功：打开浏览器，输入在地址栏中输入： http://localhost:8080 的运行结果如下图即为即为配置成功！（因为Tomcat已经在运行再次打开会报错）\n\n\n相关 Issue： [#164](https://github.com/volantis-x/hexo-theme-volantis/issues/164)\n\n{% note success, 结论：存在这篇文章的情况下能够成功 deploy ，说明这不是主题的 BUG。 %}\n\n{% noteblock %}\n`markdwon` 解析插件为 `hexo-renderer-marked` 时此插件默认会自动识别 URL ，且原文链接前后没有空格，所以链接前后增加一个空格或者在根目录配置文件中设置 `autolink: false` 都可以避免 deploy 报错。\n插件：[hexo-renderer-marked](https://github.com/hexojs/hexo-renderer-marked)\n{% endnoteblock %}\n","source":"_posts/test/2020-03-06-test-url.md","raw":"---\nrobots: noindex,nofollow\nlayout: page\ntitle: 测试「文章内链接作文本的话无法生成静态文件」\ndate: 2020-03-06\ntoc: false\nhidden: true\n---\n\n5、测试Tomcat是否配置成功：打开浏览器，输入在地址栏中输入： http://localhost:8080 的运行结果如下图即为即为配置成功！（因为Tomcat已经在运行再次打开会报错）\n\n\n相关 Issue： [#164](https://github.com/volantis-x/hexo-theme-volantis/issues/164)\n\n{% note success, 结论：存在这篇文章的情况下能够成功 deploy ，说明这不是主题的 BUG。 %}\n\n{% noteblock %}\n`markdwon` 解析插件为 `hexo-renderer-marked` 时此插件默认会自动识别 URL ，且原文链接前后没有空格，所以链接前后增加一个空格或者在根目录配置文件中设置 `autolink: false` 都可以避免 deploy 报错。\n插件：[hexo-renderer-marked](https://github.com/hexojs/hexo-renderer-marked)\n{% endnoteblock %}\n","slug":"test/2020-03-06-test-url","published":1,"updated":"2023-12-16T13:54:59.550Z","comments":1,"photos":[],"_id":"clvr3ygxt000qo4vxh9kg7hzs"},{"title":"Gallery Post","date":"2013-12-24T22:16:18.000Z","photos":["/assets/wallpaper-2572384.jpg","/assets/wallpaper-2311325.jpg","/assets/wallpaper-878514.jpg","http://placehold.it/350x150.jpg"],"robots":"noindex,nofollow","hidden":true,"_content":"\nThis post contains 4 photos:\n\n- Widescreen wallpaper\n- Portrait photo\n- Dual widescreen wallpaper\n- Small photo\n\nAll photos should be displayed properly.\n","source":"_posts/test/gallery-post.md","raw":"title: Gallery Post\ndate: 2013-12-25 00:16:18\nphotos:\n- /assets/wallpaper-2572384.jpg\n- /assets/wallpaper-2311325.jpg\n- /assets/wallpaper-878514.jpg\n- http://placehold.it/350x150.jpg\nrobots: noindex,nofollow\nhidden: true\n---\n\nThis post contains 4 photos:\n\n- Widescreen wallpaper\n- Portrait photo\n- Dual widescreen wallpaper\n- Small photo\n\nAll photos should be displayed properly.\n","slug":"test/gallery-post","published":1,"updated":"2023-12-16T13:55:34.241Z","comments":1,"layout":"post","_id":"clvr3ygxv000to4vx3hnfg3lm","content":"<p>This post contains 4 photos:</p>\n<ul>\n<li>Widescreen wallpaper</li>\n<li>Portrait photo</li>\n<li>Dual widescreen wallpaper</li>\n<li>Small photo</li>\n</ul>\n<p>All photos should be displayed properly.</p>\n<!-- flag of hidden posts -->","excerpt":"","more":"<p>This post contains 4 photos:</p>\n<ul>\n<li>Widescreen wallpaper</li>\n<li>Portrait photo</li>\n<li>Dual widescreen wallpaper</li>\n<li>Small photo</li>\n</ul>\n<p>All photos should be displayed properly.</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sat Dec 16 2023 15:55:34 GMT+0200 (Israel Standard Time)","title":"Gallery Post","path":"test/gallery-post/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2013-12-24T22:16:18.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2013-12-24T22:16:18.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":[],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Hello World","date":"2013-12-24T15:49:32.000Z","robots":"noindex,nofollow","hidden":true,"_content":"\nWelcome to Hexo! This is your very first post. Check documentation to learn how to use.\n","source":"_posts/test/hello-world.md","raw":"title: Hello World\ndate: 2013-12-24 17:49:32\ntags:\nrobots: noindex,nofollow\nhidden: true\n---\n\nWelcome to Hexo! This is your very first post. Check documentation to learn how to use.\n","slug":"test/hello-world","published":1,"updated":"2023-12-16T13:55:38.373Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygxw000vo4vxa3zj0y11","content":"<p>Welcome to Hexo! This is your very first post. Check documentation to learn how to use.</p>\n<!-- flag of hidden posts -->","excerpt":"","more":"<p>Welcome to Hexo! This is your very first post. Check documentation to learn how to use.</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sat Dec 16 2023 15:55:38 GMT+0200 (Israel Standard Time)","title":"Hello World","path":"test/hello-world/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2013-12-24T15:49:32.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2013-12-24T15:49:32.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":[],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Link Post","date":"2013-12-24T21:30:04.000Z","link":"http://www.google.com/","robots":"noindex,nofollow","hidden":true,"_content":"\nThis is a link post. Clicking on the link should open [Google](http://www.google.com/) in a new tab or window.\n","source":"_posts/test/link-post.md","raw":"title: Link Post\ndate: 2013-12-24 23:30:04\nlink: http://www.google.com/\nrobots: noindex,nofollow\nhidden: true\n---\n\nThis is a link post. Clicking on the link should open [Google](http://www.google.com/) in a new tab or window.\n","slug":"test/link-post","published":1,"updated":"2023-12-16T13:55:44.509Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygxx0010o4vxgj03aa1g","content":"<p>This is a link post. Clicking on the link should open <a href=\"http://www.google.com/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">Google</a> in a new tab or window.</p>\n<!-- flag of hidden posts -->","excerpt":"","more":"<p>This is a link post. Clicking on the link should open <a href=\"http://www.google.com/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">Google</a> in a new tab or window.</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sat Dec 16 2023 15:55:44 GMT+0200 (Israel Standard Time)","title":"Link Post","path":"test/link-post/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2013-12-24T21:30:04.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2013-12-24T21:30:04.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":[],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Images","date":"2013-12-26T20:46:49.000Z","robots":"noindex,nofollow","hidden":true,"_content":"\n![](https://i.loli.net/2020/03/18/f5PQlWisvm9zbgK.jpg)\n\nThis is a image test post.\n\n{% gallery %}\n![](https://i.loli.net/2020/03/18/1TpiUwhuskGm5SV.png)\n![截屏2020-03-1317.25.10.png](https://i.loli.net/2020/03/18/LZwBtR5YO4zQH9A.png)\n![截屏2020-03-1317.27.42.png](https://i.loli.net/2020/03/18/ySw8zGHRBrDtUg7.png)\n![截屏2020-03-1317.28.02.png](https://i.loli.net/2020/03/18/5QTMYsScOz41Vhg.png)\n{% endgallery %}\n\n![](https://i.loli.net/2020/03/18/XWBGf95E2t1bdnl.jpg)\n","source":"_posts/test/images.md","raw":"title: Images\ndate: 2013-12-26 22:46:49\nrobots: noindex,nofollow\nhidden: true\n---\n\n![](https://i.loli.net/2020/03/18/f5PQlWisvm9zbgK.jpg)\n\nThis is a image test post.\n\n{% gallery %}\n![](https://i.loli.net/2020/03/18/1TpiUwhuskGm5SV.png)\n![截屏2020-03-1317.25.10.png](https://i.loli.net/2020/03/18/LZwBtR5YO4zQH9A.png)\n![截屏2020-03-1317.27.42.png](https://i.loli.net/2020/03/18/ySw8zGHRBrDtUg7.png)\n![截屏2020-03-1317.28.02.png](https://i.loli.net/2020/03/18/5QTMYsScOz41Vhg.png)\n{% endgallery %}\n\n![](https://i.loli.net/2020/03/18/XWBGf95E2t1bdnl.jpg)\n","slug":"test/images","published":1,"updated":"2023-12-16T13:55:41.445Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygxy0013o4vx0dlq7a5v"},{"title":"Markdown Style test","date":"2018-07-24T20:31:06.000Z","robots":"noindex,nofollow","headimg":"https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/054.jpg","hidden":true,"_content":"\nThis post is originated from [here](https://gist.github.com/apackeer/4159268) and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly.\n\n<!-- more -->\n\n-------\n\n{% btn solid large center, Let&#39;s get started , /getting-started/, fas fa-flag %}\n\n\n\n## Headers\n\n```markdown\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n\nAlternatively, for H1 and H2, an underline-ish style:\n\nAlt-H1\n======\n\nAlt-H2\n------\n```\n\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n\n\nAlternatively, for H1 and H2, an underline-ish style:\n\nAlt-H1\n======\n\nAlt-H2\n------\n\n\n## Emphasis\n\n```markdown\nEmphasis, aka italics, with *asterisks* or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\n```\n\nEmphasis, aka italics, with *asterisks* or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\n\n\n## Lists\n\n```markdown\n1. First ordered list item\n2. Another item\n  * Unordered sub-list.\n1. Actual numbers don't matter, just that it's a number\n  1. Ordered sub-list\n4. And another item.\n\n   You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n   To have a line break without a paragraph, you will need to use two trailing spaces.  \n   Note that this line is separate, but within the same paragraph.  \n   (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n* Unordered list can use asterisks\n- Or minuses\n+ Or pluses\n- Paragraph In unordered list\n\n  For example like this.\n\nCommon Paragraph with some text.\nAnd more text.\n```\n\n1. First ordered list item\n2. Another item\n  * Unordered sub-list.\n1. Actual numbers don't matter, just that it's a number\n  1. Ordered sub-list\n4. And another item.\n\n   You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n   To have a line break without a paragraph, you will need to use two trailing spaces.  \n   Note that this line is separate, but within the same paragraph.  \n   (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n* Unordered list can use asterisks\n- Or minuses\n+ Or pluses\n- Paragraph In unordered list\n\n  For example like this.\n\nCommon Paragraph with some text.\nAnd more text.\n\n## Inline HTML\n\n```html\n<p>To reboot your computer, press <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>del</kbd>.</p>\n```\n\n<p>To reboot your computer, press <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>del</kbd>.</p>\n\n\n```html\n<dl>\n    <dt>Definition list</dt>\n    <dd>Is something people use sometimes.</dd>\n\n    <dt>Markdown in HTML</dt>\n    <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>\n</dl>\n```\n\n\n<dl>\n    <dt>Definition list</dt>\n    <dd>Is something people use sometimes.</dd>\n\n    <dt>Markdown in HTML</dt>\n    <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>\n</dl>\n\n\n## Links\n\n```markdown\n[I'm an inline-style link](https://www.google.com)\n\n[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\n\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\n\n[I'm a relative reference to a repository file](https://cdn.jsdelivr.net/gh/theme-volantis/hexo-theme-volantis/LICENSE)\n\n[You can use numbers for reference-style link definitions][1]\n\nOr leave it empty and use the [link text itself]\n\nSome text to show that the reference links can follow later.\n\n[arbitrary case-insensitive reference text]: https://hexo.io\n[1]: https://hexo.io/docs/\n[link text itself]: https://hexo.io/api/\n```\n\n[I'm an inline-style link](https://www.google.com)\n\n[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\n\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\n\n[I'm a relative reference to a repository file](https://cdn.jsdelivr.net/gh/theme-volantis/hexo-theme-volantis/LICENSE)\n\n[You can use numbers for reference-style link definitions][1]\n\nOr leave it empty and use the [link text itself]\n\nSome text to show that the reference links can follow later.\n\n[arbitrary case-insensitive reference text]: https://hexo.io\n[1]: https://hexo.io/docs/\n[link text itself]: https://hexo.io/api/\n\n## Images\n\n```markdown\nhover to see the title text:\n\nInline-style:\n\n![alt text](https://hexo.io/icon/favicon-196x196.png \"Logo Title Text 1\")\n\nReference-style:\n![alt text][logo]\n\n[logo]: https://hexo.io/icon/favicon-196x196.png \"Logo Title Text 2\"\n```\n\nhover to see the title text:\n\nInline-style:\n\n![alt text](https://hexo.io/icon/favicon-196x196.png \"Logo Title Text 1\")\n\nReference-style:\n![alt text][logo]\n\n[logo]: https://hexo.io/icon/favicon-196x196.png \"Logo Title Text 2\"\n\n## Code and Syntax Highlighting\n\nInline `code` has `back-ticks around` it.\n\n\n```javascript\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\n```\n\n```python\ns = \"Python syntax highlighting\"\nprint s\n```\n\n```\nNo language indicated, so no syntax highlighting.\nBut let's throw in a <b>tag</b>.\n```\n\n## Tables\n\n```markdown\n|                |ASCII                          |HTML                         |\n|----------------|-------------------------------|-----------------------------|\n|Single backticks|`'Isn't this fun?'`            |'Isn't this fun?'            |\n|Quotes          |`\"Isn't this fun?\"`            |\"Isn't this fun?\"            |\n|Dashes          |`-- is en-dash, --- is em-dash`|-- is en-dash, --- is em-dash|\n```\n\n|                |ASCII                          |HTML                         |\n|----------------|-------------------------------|-----------------------------|\n|Single backticks|`'Isn't this fun?'`            |'Isn't this fun?'            |\n|Quotes          |`\"Isn't this fun?\"`            |\"Isn't this fun?\"            |\n|Dashes          |`-- is en-dash, --- is em-dash`|-- is en-dash, --- is em-dash|\n\n\n\n\nColons can be used to align columns.\n\n```markdown\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned |  |\n| col 2 is      | centered      |    |\n| zebra stripes | are neat      |   \n```\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned |  |\n| col 2 is      | centered      |    |\n| zebra stripes | are neat      |     |\n\nThe outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.\n\n```markdown\nMarkdown | Less | Pretty\n--- | --- | ---\n*Still* | `renders` | **nicely**\n1 | 2 | 3\n```\n\nMarkdown | Less | Pretty\n--- | --- | ---\n*Still* | `renders` | **nicely**\n1 | 2 | 3\n\n> You can find more information about **LaTeX** mathematical expressions [here](https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference).\n\n\n## Blockquotes\n\n> Blockquotes are very handy in email to emulate reply text.\n> This line is part of the same quote.\n\nQuote break.\n\n> This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote.\n\n## Horizontal Rule\n\nThree or more...\n\n```markdown\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\n```\n\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\n\n\n## Line Breaks\n\n```markdown\nHere's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\n\nThis line is also a separate paragraph, but...\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\n```\n\n\nHere's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\n\nThis line is also a separate paragraph, but...\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\n\n\n-----\n\n```markdown\nThis is a regular paragraph.\n\n<table>\n    <tr>\n        <td>Foo</td>\n    </tr>\n</table>\n\nThis is another regular paragraph.\n```\n\nThis is a regular paragraph.\n\n<table>\n    <tr>\n        <td>Foo</td>\n    </tr>\n</table>\n\nThis is another regular paragraph.\n\n## Youtube videos\n\n```markdown\n<a href=\"https://www.youtube.com/watch?feature=player_embedded&v=ARted4RniaU\n\" target=\"_blank\"><img src=\"https://img.youtube.com/vi/ARted4RniaU/0.jpg\"\nalt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\" /></a>\n\nPure markdown version:\n\n[![IMAGE ALT TEXT HERE](https://img.youtube.com/vi/ARted4RniaU/0.jpg)](https://www.youtube.com/watch?v=ARted4RniaU)\n```\n\n<a href=\"https://www.youtube.com/watch?feature=player_embedded&v=ARted4RniaU\n\" target=\"_blank\"><img src=\"https://img.youtube.com/vi/ARted4RniaU/0.jpg\"\nalt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\" /></a>\n\nPure markdown version:\n\n[![IMAGE ALT TEXT HERE](https://img.youtube.com/vi/ARted4RniaU/0.jpg)](https://www.youtube.com/watch?v=ARted4RniaU)\n","source":"_posts/test/markdown.md","raw":"title: Markdown Style test\ndate: 2018-7-24 23:31:06\nrobots: noindex,nofollow\nheadimg: https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/054.jpg\nhidden: true\n---\n\nThis post is originated from [here](https://gist.github.com/apackeer/4159268) and is used for testing markdown style. This post contains nearly every markdown usage. Make sure all the markdown elements below show up correctly.\n\n<!-- more -->\n\n-------\n\n{% btn solid large center, Let&#39;s get started , /getting-started/, fas fa-flag %}\n\n\n\n## Headers\n\n```markdown\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n\nAlternatively, for H1 and H2, an underline-ish style:\n\nAlt-H1\n======\n\nAlt-H2\n------\n```\n\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n\n\nAlternatively, for H1 and H2, an underline-ish style:\n\nAlt-H1\n======\n\nAlt-H2\n------\n\n\n## Emphasis\n\n```markdown\nEmphasis, aka italics, with *asterisks* or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\n```\n\nEmphasis, aka italics, with *asterisks* or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\n\n\n## Lists\n\n```markdown\n1. First ordered list item\n2. Another item\n  * Unordered sub-list.\n1. Actual numbers don't matter, just that it's a number\n  1. Ordered sub-list\n4. And another item.\n\n   You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n   To have a line break without a paragraph, you will need to use two trailing spaces.  \n   Note that this line is separate, but within the same paragraph.  \n   (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n* Unordered list can use asterisks\n- Or minuses\n+ Or pluses\n- Paragraph In unordered list\n\n  For example like this.\n\nCommon Paragraph with some text.\nAnd more text.\n```\n\n1. First ordered list item\n2. Another item\n  * Unordered sub-list.\n1. Actual numbers don't matter, just that it's a number\n  1. Ordered sub-list\n4. And another item.\n\n   You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n   To have a line break without a paragraph, you will need to use two trailing spaces.  \n   Note that this line is separate, but within the same paragraph.  \n   (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n* Unordered list can use asterisks\n- Or minuses\n+ Or pluses\n- Paragraph In unordered list\n\n  For example like this.\n\nCommon Paragraph with some text.\nAnd more text.\n\n## Inline HTML\n\n```html\n<p>To reboot your computer, press <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>del</kbd>.</p>\n```\n\n<p>To reboot your computer, press <kbd>ctrl</kbd>+<kbd>alt</kbd>+<kbd>del</kbd>.</p>\n\n\n```html\n<dl>\n    <dt>Definition list</dt>\n    <dd>Is something people use sometimes.</dd>\n\n    <dt>Markdown in HTML</dt>\n    <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>\n</dl>\n```\n\n\n<dl>\n    <dt>Definition list</dt>\n    <dd>Is something people use sometimes.</dd>\n\n    <dt>Markdown in HTML</dt>\n    <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd>\n</dl>\n\n\n## Links\n\n```markdown\n[I'm an inline-style link](https://www.google.com)\n\n[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\n\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\n\n[I'm a relative reference to a repository file](https://cdn.jsdelivr.net/gh/theme-volantis/hexo-theme-volantis/LICENSE)\n\n[You can use numbers for reference-style link definitions][1]\n\nOr leave it empty and use the [link text itself]\n\nSome text to show that the reference links can follow later.\n\n[arbitrary case-insensitive reference text]: https://hexo.io\n[1]: https://hexo.io/docs/\n[link text itself]: https://hexo.io/api/\n```\n\n[I'm an inline-style link](https://www.google.com)\n\n[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")\n\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\n\n[I'm a relative reference to a repository file](https://cdn.jsdelivr.net/gh/theme-volantis/hexo-theme-volantis/LICENSE)\n\n[You can use numbers for reference-style link definitions][1]\n\nOr leave it empty and use the [link text itself]\n\nSome text to show that the reference links can follow later.\n\n[arbitrary case-insensitive reference text]: https://hexo.io\n[1]: https://hexo.io/docs/\n[link text itself]: https://hexo.io/api/\n\n## Images\n\n```markdown\nhover to see the title text:\n\nInline-style:\n\n![alt text](https://hexo.io/icon/favicon-196x196.png \"Logo Title Text 1\")\n\nReference-style:\n![alt text][logo]\n\n[logo]: https://hexo.io/icon/favicon-196x196.png \"Logo Title Text 2\"\n```\n\nhover to see the title text:\n\nInline-style:\n\n![alt text](https://hexo.io/icon/favicon-196x196.png \"Logo Title Text 1\")\n\nReference-style:\n![alt text][logo]\n\n[logo]: https://hexo.io/icon/favicon-196x196.png \"Logo Title Text 2\"\n\n## Code and Syntax Highlighting\n\nInline `code` has `back-ticks around` it.\n\n\n```javascript\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\n```\n\n```python\ns = \"Python syntax highlighting\"\nprint s\n```\n\n```\nNo language indicated, so no syntax highlighting.\nBut let's throw in a <b>tag</b>.\n```\n\n## Tables\n\n```markdown\n|                |ASCII                          |HTML                         |\n|----------------|-------------------------------|-----------------------------|\n|Single backticks|`'Isn't this fun?'`            |'Isn't this fun?'            |\n|Quotes          |`\"Isn't this fun?\"`            |\"Isn't this fun?\"            |\n|Dashes          |`-- is en-dash, --- is em-dash`|-- is en-dash, --- is em-dash|\n```\n\n|                |ASCII                          |HTML                         |\n|----------------|-------------------------------|-----------------------------|\n|Single backticks|`'Isn't this fun?'`            |'Isn't this fun?'            |\n|Quotes          |`\"Isn't this fun?\"`            |\"Isn't this fun?\"            |\n|Dashes          |`-- is en-dash, --- is em-dash`|-- is en-dash, --- is em-dash|\n\n\n\n\nColons can be used to align columns.\n\n```markdown\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned |  |\n| col 2 is      | centered      |    |\n| zebra stripes | are neat      |   \n```\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned |  |\n| col 2 is      | centered      |    |\n| zebra stripes | are neat      |     |\n\nThe outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.\n\n```markdown\nMarkdown | Less | Pretty\n--- | --- | ---\n*Still* | `renders` | **nicely**\n1 | 2 | 3\n```\n\nMarkdown | Less | Pretty\n--- | --- | ---\n*Still* | `renders` | **nicely**\n1 | 2 | 3\n\n> You can find more information about **LaTeX** mathematical expressions [here](https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference).\n\n\n## Blockquotes\n\n> Blockquotes are very handy in email to emulate reply text.\n> This line is part of the same quote.\n\nQuote break.\n\n> This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote.\n\n## Horizontal Rule\n\nThree or more...\n\n```markdown\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\n```\n\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\n\n\n## Line Breaks\n\n```markdown\nHere's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\n\nThis line is also a separate paragraph, but...\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\n```\n\n\nHere's a line for us to start with.\n\nThis line is separated from the one above by two newlines, so it will be a *separate paragraph*.\n\nThis line is also a separate paragraph, but...\nThis line is only separated by a single newline, so it's a separate line in the *same paragraph*.\n\n\n-----\n\n```markdown\nThis is a regular paragraph.\n\n<table>\n    <tr>\n        <td>Foo</td>\n    </tr>\n</table>\n\nThis is another regular paragraph.\n```\n\nThis is a regular paragraph.\n\n<table>\n    <tr>\n        <td>Foo</td>\n    </tr>\n</table>\n\nThis is another regular paragraph.\n\n## Youtube videos\n\n```markdown\n<a href=\"https://www.youtube.com/watch?feature=player_embedded&v=ARted4RniaU\n\" target=\"_blank\"><img src=\"https://img.youtube.com/vi/ARted4RniaU/0.jpg\"\nalt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\" /></a>\n\nPure markdown version:\n\n[![IMAGE ALT TEXT HERE](https://img.youtube.com/vi/ARted4RniaU/0.jpg)](https://www.youtube.com/watch?v=ARted4RniaU)\n```\n\n<a href=\"https://www.youtube.com/watch?feature=player_embedded&v=ARted4RniaU\n\" target=\"_blank\"><img src=\"https://img.youtube.com/vi/ARted4RniaU/0.jpg\"\nalt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\" /></a>\n\nPure markdown version:\n\n[![IMAGE ALT TEXT HERE](https://img.youtube.com/vi/ARted4RniaU/0.jpg)](https://www.youtube.com/watch?v=ARted4RniaU)\n","slug":"test/markdown","published":1,"updated":"2023-12-16T13:55:47.464Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygxz0018o4vx3eqp93ze"},{"date":"2013-12-25T20:57:49.000Z","robots":"noindex,nofollow","hidden":true,"_content":"\nThis post doesn't have a title. Make sure it's accessible.\n","source":"_posts/test/no-title.md","raw":"date: 2013-12-25 22:57:49\ntags:\nrobots: noindex,nofollow\nhidden: true\n---\n\nThis post doesn't have a title. Make sure it's accessible.\n","slug":"test/no-title","published":1,"updated":"2023-12-16T13:55:49.743Z","title":"","comments":1,"layout":"post","photos":[],"_id":"clvr3ygxz001ao4vx61psdiur","content":"<p>This post doesn&#39;t have a title. Make sure it&#39;s accessible.</p>\n<!-- flag of hidden posts -->","excerpt":"","more":"<p>This post doesn&#39;t have a title. Make sure it&#39;s accessible.</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sat Dec 16 2023 15:55:49 GMT+0200 (Israel Standard Time)","title":"","path":"test/no-title/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2013-12-25T20:57:49.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2013-12-25T20:57:49.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":[],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"Tag Plugins","date":"2013-12-24T22:14:39.000Z","robots":"noindex,nofollow","hidden":true,"_content":"\nThis post is used for testing tag plugins. See docs for more info.\n\n## Block Quote\n\n### Normal blockquote\n\n> Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.\n\n### Quote from a book\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n### Quote from Twitter\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n### Quote from an article on the web\n\n{% blockquote Seth Godin `http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html` Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n## Code Block\n\n### Normal code block\n\n```\nalert('Hello World!');\n```\n\n### With caption\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n\n### With caption and URL\n\n{% codeblock .compact http://underscorejs.org/#compact Underscore.js %}\n.compact([0, 1, false, 2, ‘’, 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n\n### With marked lines\n\nLine 1,7-8,10 should be marked with different color.\n\n{% codeblock lang:js mark:1,7-8,10 %}\nconst http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 1337;\n\nhttp.createServer((req, res) => {\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\n  res.end('Hello World\\n');\n}).listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});\n{% endcodeblock %}\n\nNote: Theme's style should support `.highlight.line.marked` (recommend to use the selection or current line color).\n\n\n\n\n## Pullquote\n\n### Left\n\n{% pullquote left %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\n{% endpullquote %}\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempus molestie arcu, et fringilla mauris placerat ac. Nullam luctus bibendum risus. Ut cursus sed ipsum feugiat egestas. Suspendisse elementum, velit eu consequat consequat, augue lorem dapibus libero, eget pulvinar dolor est sit amet nulla. Suspendisse a porta tortor, et posuere mi. Pellentesque ultricies, mi quis volutpat malesuada, erat felis vulputate nisl, ac congue ante tortor ut ante. Proin aliquam sem vel mauris tincidunt, eget scelerisque tortor euismod. Nulla tincidunt enim nec commodo dictum. Mauris id sapien et orci gravida luctus id ut dui. In vel vulputate odio. Duis vel turpis molestie, scelerisque enim eu, lobortis eros. Cras at ipsum gravida, sagittis ante vel, viverra tellus. Nunc mauris turpis, elementum ullamcorper nisl pretium, ultrices cursus justo. Mauris porttitor commodo eros, ac ornare orci interdum in. Cras fermentum cursus leo sed mattis. In dignissim lorem sem, sit amet elementum mauris venenatis ac.\n\n### Right\n\n{% pullquote right %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\n{% endpullquote %}\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ligula justo, lobortis sit amet semper vel, dignissim sit amet libero. Praesent ac tempus ligula. Maecenas at gravida odio. Etiam tristique volutpat lacus eu faucibus. Donec non tempus arcu. Phasellus adipiscing, mauris nec mollis egestas, ipsum nunc auctor velit, et rhoncus lorem ipsum at ante. Praesent et sem in velit volutpat auctor. Duis vel mauris nulla. Maecenas mattis interdum ante, quis sagittis nibh cursus et. Nulla facilisi. Morbi convallis gravida tortor, ut fermentum enim gravida et. Nunc vel dictum nisl, non ultrices libero. Proin vestibulum felis eget orci consectetur lobortis. Vestibulum augue nulla, iaculis vitae augue vehicula, dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.\n","source":"_posts/test/tag-plugins.md","raw":"title: Tag Plugins\ndate: 2013-12-25 00:14:39\ntags:\nrobots: noindex,nofollow\nhidden: true\n---\n\nThis post is used for testing tag plugins. See docs for more info.\n\n## Block Quote\n\n### Normal blockquote\n\n> Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.\n\n### Quote from a book\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n### Quote from Twitter\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n### Quote from an article on the web\n\n{% blockquote Seth Godin `http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html` Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n## Code Block\n\n### Normal code block\n\n```\nalert('Hello World!');\n```\n\n### With caption\n\n{% codeblock Array.map %}\narray.map(callback[, thisArg])\n{% endcodeblock %}\n\n### With caption and URL\n\n{% codeblock .compact http://underscorejs.org/#compact Underscore.js %}\n.compact([0, 1, false, 2, ‘’, 3]);\n=> [1, 2, 3]\n{% endcodeblock %}\n\n### With marked lines\n\nLine 1,7-8,10 should be marked with different color.\n\n{% codeblock lang:js mark:1,7-8,10 %}\nconst http = require('http');\n\nconst hostname = '127.0.0.1';\nconst port = 1337;\n\nhttp.createServer((req, res) => {\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\n  res.end('Hello World\\n');\n}).listen(port, hostname, () => {\n  console.log(`Server running at http://${hostname}:${port}/`);\n});\n{% endcodeblock %}\n\nNote: Theme's style should support `.highlight.line.marked` (recommend to use the selection or current line color).\n\n\n\n\n## Pullquote\n\n### Left\n\n{% pullquote left %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\n{% endpullquote %}\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempus molestie arcu, et fringilla mauris placerat ac. Nullam luctus bibendum risus. Ut cursus sed ipsum feugiat egestas. Suspendisse elementum, velit eu consequat consequat, augue lorem dapibus libero, eget pulvinar dolor est sit amet nulla. Suspendisse a porta tortor, et posuere mi. Pellentesque ultricies, mi quis volutpat malesuada, erat felis vulputate nisl, ac congue ante tortor ut ante. Proin aliquam sem vel mauris tincidunt, eget scelerisque tortor euismod. Nulla tincidunt enim nec commodo dictum. Mauris id sapien et orci gravida luctus id ut dui. In vel vulputate odio. Duis vel turpis molestie, scelerisque enim eu, lobortis eros. Cras at ipsum gravida, sagittis ante vel, viverra tellus. Nunc mauris turpis, elementum ullamcorper nisl pretium, ultrices cursus justo. Mauris porttitor commodo eros, ac ornare orci interdum in. Cras fermentum cursus leo sed mattis. In dignissim lorem sem, sit amet elementum mauris venenatis ac.\n\n### Right\n\n{% pullquote right %}\nLorem ipsum dolor sit amet, consectetur adipiscing elit.\n{% endpullquote %}\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ligula justo, lobortis sit amet semper vel, dignissim sit amet libero. Praesent ac tempus ligula. Maecenas at gravida odio. Etiam tristique volutpat lacus eu faucibus. Donec non tempus arcu. Phasellus adipiscing, mauris nec mollis egestas, ipsum nunc auctor velit, et rhoncus lorem ipsum at ante. Praesent et sem in velit volutpat auctor. Duis vel mauris nulla. Maecenas mattis interdum ante, quis sagittis nibh cursus et. Nulla facilisi. Morbi convallis gravida tortor, ut fermentum enim gravida et. Nunc vel dictum nisl, non ultrices libero. Proin vestibulum felis eget orci consectetur lobortis. Vestibulum augue nulla, iaculis vitae augue vehicula, dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.\n","slug":"test/tag-plugins","published":1,"updated":"2023-12-16T13:55:57.233Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygy0001do4vx544k6154","content":"<p>This post is used for testing tag plugins. See docs for more info.</p>\n<h2 id=\"Block-Quote\"><a href=\"#Block-Quote\" class=\"headerlink\" title=\"Block Quote\"></a>Block Quote</h2><h3 id=\"Normal-blockquote\"><a href=\"#Normal-blockquote\" class=\"headerlink\" title=\"Normal blockquote\"></a>Normal blockquote</h3><blockquote>\n<p>Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.</p>\n</blockquote>\n<h3 id=\"Quote-from-a-book\"><a href=\"#Quote-from-a-book\" class=\"headerlink\" title=\"Quote from a book\"></a>Quote from a book</h3><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n\n<h3 id=\"Quote-from-Twitter\"><a href=\"#Quote-from-Twitter\" class=\"headerlink\" title=\"Quote from Twitter\"></a>Quote from Twitter</h3><blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n\n<h3 id=\"Quote-from-an-article-on-the-web\"><a href=\"#Quote-from-an-article-on-the-web\" class=\"headerlink\" title=\"Quote from an article on the web\"></a>Quote from an article on the web</h3><blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin `http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html` Welcome to Island Marketing</strong></footer></blockquote>\n\n<h2 id=\"Code-Block\"><a href=\"#Code-Block\" class=\"headerlink\" title=\"Code Block\"></a>Code Block</h2><h3 id=\"Normal-code-block\"><a href=\"#Normal-code-block\" class=\"headerlink\" title=\"Normal code block\"></a>Normal code block</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">alert(&#x27;Hello World!&#x27;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"With-caption\"><a href=\"#With-caption\" class=\"headerlink\" title=\"With caption\"></a>With caption</h3><figure class=\"highlight plaintext\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"With-caption-and-URL\"><a href=\"#With-caption-and-URL\" class=\"headerlink\" title=\"With caption and URL\"></a>With caption and URL</h3><figure class=\"highlight plaintext\"><figcaption><span>.compact</span><a href=\"http://underscorejs.org/#compact\">Underscore.js</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">.compact([0, 1, false, 2, ‘’, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"With-marked-lines\"><a href=\"#With-marked-lines\" class=\"headerlink\" title=\"With marked lines\"></a>With marked lines</h3><p>Line 1,7-8,10 should be marked with different color.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line marked\"><span class=\"keyword\">const</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> hostname = <span class=\"string\">&#x27;127.0.0.1&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> port = <span class=\"number\">1337</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">http.<span class=\"title function_\">createServer</span>(<span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line marked\">  res.<span class=\"title function_\">writeHead</span>(<span class=\"number\">200</span>, &#123; <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;text/plain&#x27;</span> &#125;);</span><br><span class=\"line marked\">  res.<span class=\"title function_\">end</span>(<span class=\"string\">&#x27;Hello World\\n&#x27;</span>);</span><br><span class=\"line\">&#125;).<span class=\"title function_\">listen</span>(port, hostname, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line marked\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`Server running at http://<span class=\"subst\">$&#123;hostname&#125;</span>:<span class=\"subst\">$&#123;port&#125;</span>/`</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Note: Theme&#39;s style should support <code>.highlight.line.marked</code> (recommend to use the selection or current line color).</p>\n<h2 id=\"Pullquote\"><a href=\"#Pullquote\" class=\"headerlink\" title=\"Pullquote\"></a>Pullquote</h2><h3 id=\"Left\"><a href=\"#Left\" class=\"headerlink\" title=\"Left\"></a>Left</h3><blockquote class=\"pullquote left\"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n</blockquote>\n\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempus molestie arcu, et fringilla mauris placerat ac. Nullam luctus bibendum risus. Ut cursus sed ipsum feugiat egestas. Suspendisse elementum, velit eu consequat consequat, augue lorem dapibus libero, eget pulvinar dolor est sit amet nulla. Suspendisse a porta tortor, et posuere mi. Pellentesque ultricies, mi quis volutpat malesuada, erat felis vulputate nisl, ac congue ante tortor ut ante. Proin aliquam sem vel mauris tincidunt, eget scelerisque tortor euismod. Nulla tincidunt enim nec commodo dictum. Mauris id sapien et orci gravida luctus id ut dui. In vel vulputate odio. Duis vel turpis molestie, scelerisque enim eu, lobortis eros. Cras at ipsum gravida, sagittis ante vel, viverra tellus. Nunc mauris turpis, elementum ullamcorper nisl pretium, ultrices cursus justo. Mauris porttitor commodo eros, ac ornare orci interdum in. Cras fermentum cursus leo sed mattis. In dignissim lorem sem, sit amet elementum mauris venenatis ac.</p>\n<h3 id=\"Right\"><a href=\"#Right\" class=\"headerlink\" title=\"Right\"></a>Right</h3><blockquote class=\"pullquote right\"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n</blockquote>\n\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ligula justo, lobortis sit amet semper vel, dignissim sit amet libero. Praesent ac tempus ligula. Maecenas at gravida odio. Etiam tristique volutpat lacus eu faucibus. Donec non tempus arcu. Phasellus adipiscing, mauris nec mollis egestas, ipsum nunc auctor velit, et rhoncus lorem ipsum at ante. Praesent et sem in velit volutpat auctor. Duis vel mauris nulla. Maecenas mattis interdum ante, quis sagittis nibh cursus et. Nulla facilisi. Morbi convallis gravida tortor, ut fermentum enim gravida et. Nunc vel dictum nisl, non ultrices libero. Proin vestibulum felis eget orci consectetur lobortis. Vestibulum augue nulla, iaculis vitae augue vehicula, dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.</p>\n<!-- flag of hidden posts -->","excerpt":"","more":"<p>This post is used for testing tag plugins. See docs for more info.</p>\n<h2 id=\"Block-Quote\"><a href=\"#Block-Quote\" class=\"headerlink\" title=\"Block Quote\"></a>Block Quote</h2><h3 id=\"Normal-blockquote\"><a href=\"#Normal-blockquote\" class=\"headerlink\" title=\"Normal blockquote\"></a>Normal blockquote</h3><blockquote>\n<p>Praesent diam elit, interdum ut pulvinar placerat, imperdiet at magna.</p>\n</blockquote>\n<h3 id=\"Quote-from-a-book\"><a href=\"#Quote-from-a-book\" class=\"headerlink\" title=\"Quote from a book\"></a>Quote from a book</h3><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>\n<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n\n<h3 id=\"Quote-from-Twitter\"><a href=\"#Quote-from-Twitter\" class=\"headerlink\" title=\"Quote from Twitter\"></a>Quote from Twitter</h3><blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">http://devdocs.io</a></p>\n<footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n\n<h3 id=\"Quote-from-an-article-on-the-web\"><a href=\"#Quote-from-an-article-on-the-web\" class=\"headerlink\" title=\"Quote from an article on the web\"></a>Quote from an article on the web</h3><blockquote><p>Every interaction is both precious and an opportunity to delight.</p>\n<footer><strong>Seth Godin `http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html` Welcome to Island Marketing</strong></footer></blockquote>\n\n<h2 id=\"Code-Block\"><a href=\"#Code-Block\" class=\"headerlink\" title=\"Code Block\"></a>Code Block</h2><h3 id=\"Normal-code-block\"><a href=\"#Normal-code-block\" class=\"headerlink\" title=\"Normal code block\"></a>Normal code block</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">alert(&#x27;Hello World!&#x27;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"With-caption\"><a href=\"#With-caption\" class=\"headerlink\" title=\"With caption\"></a>With caption</h3><figure class=\"highlight plaintext\"><figcaption><span>Array.map</span></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"With-caption-and-URL\"><a href=\"#With-caption-and-URL\" class=\"headerlink\" title=\"With caption and URL\"></a>With caption and URL</h3><figure class=\"highlight plaintext\"><figcaption><span>.compact</span><a href=\"http://underscorejs.org/#compact\">Underscore.js</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\">.compact([0, 1, false, 2, ‘’, 3]);</span><br><span class=\"line\">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"With-marked-lines\"><a href=\"#With-marked-lines\" class=\"headerlink\" title=\"With marked lines\"></a>With marked lines</h3><p>Line 1,7-8,10 should be marked with different color.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line marked\"><span class=\"keyword\">const</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;http&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> hostname = <span class=\"string\">&#x27;127.0.0.1&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> port = <span class=\"number\">1337</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">http.<span class=\"title function_\">createServer</span>(<span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line marked\">  res.<span class=\"title function_\">writeHead</span>(<span class=\"number\">200</span>, &#123; <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;text/plain&#x27;</span> &#125;);</span><br><span class=\"line marked\">  res.<span class=\"title function_\">end</span>(<span class=\"string\">&#x27;Hello World\\n&#x27;</span>);</span><br><span class=\"line\">&#125;).<span class=\"title function_\">listen</span>(port, hostname, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line marked\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`Server running at http://<span class=\"subst\">$&#123;hostname&#125;</span>:<span class=\"subst\">$&#123;port&#125;</span>/`</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Note: Theme&#39;s style should support <code>.highlight.line.marked</code> (recommend to use the selection or current line color).</p>\n<h2 id=\"Pullquote\"><a href=\"#Pullquote\" class=\"headerlink\" title=\"Pullquote\"></a>Pullquote</h2><h3 id=\"Left\"><a href=\"#Left\" class=\"headerlink\" title=\"Left\"></a>Left</h3><blockquote class=\"pullquote left\"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n</blockquote>\n\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas tempus molestie arcu, et fringilla mauris placerat ac. Nullam luctus bibendum risus. Ut cursus sed ipsum feugiat egestas. Suspendisse elementum, velit eu consequat consequat, augue lorem dapibus libero, eget pulvinar dolor est sit amet nulla. Suspendisse a porta tortor, et posuere mi. Pellentesque ultricies, mi quis volutpat malesuada, erat felis vulputate nisl, ac congue ante tortor ut ante. Proin aliquam sem vel mauris tincidunt, eget scelerisque tortor euismod. Nulla tincidunt enim nec commodo dictum. Mauris id sapien et orci gravida luctus id ut dui. In vel vulputate odio. Duis vel turpis molestie, scelerisque enim eu, lobortis eros. Cras at ipsum gravida, sagittis ante vel, viverra tellus. Nunc mauris turpis, elementum ullamcorper nisl pretium, ultrices cursus justo. Mauris porttitor commodo eros, ac ornare orci interdum in. Cras fermentum cursus leo sed mattis. In dignissim lorem sem, sit amet elementum mauris venenatis ac.</p>\n<h3 id=\"Right\"><a href=\"#Right\" class=\"headerlink\" title=\"Right\"></a>Right</h3><blockquote class=\"pullquote right\"><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n</blockquote>\n\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ligula justo, lobortis sit amet semper vel, dignissim sit amet libero. Praesent ac tempus ligula. Maecenas at gravida odio. Etiam tristique volutpat lacus eu faucibus. Donec non tempus arcu. Phasellus adipiscing, mauris nec mollis egestas, ipsum nunc auctor velit, et rhoncus lorem ipsum at ante. Praesent et sem in velit volutpat auctor. Duis vel mauris nulla. Maecenas mattis interdum ante, quis sagittis nibh cursus et. Nulla facilisi. Morbi convallis gravida tortor, ut fermentum enim gravida et. Nunc vel dictum nisl, non ultrices libero. Proin vestibulum felis eget orci consectetur lobortis. Vestibulum augue nulla, iaculis vitae augue vehicula, dignissim ultrices libero. Sed imperdiet urna et quam ultrices tincidunt nec ac magna. Etiam vel pharetra elit.</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":null,"popularPost_tmp_gaData":{"updated":"Sat Dec 16 2023 15:55:57 GMT+0200 (Israel Standard Time)","title":"Tag Plugins","path":"test/tag-plugins/","eyeCatchImage":null,"excerpt":null,"date":{"_isAMomentObject":true,"_i":"2013-12-24T22:14:39.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2013-12-24T22:14:39.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"","tags":[],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"טיול בעיר המרהיבה של מיאמי","description":"מיאמי היא עיר מהממת שמצעיה מגוון רחב של אטרקציות. הנה מדריך מפורט למה שתוכלו לעשות שם.","date":"2023-12-30T14:00:00.000Z","cover":"https://kolha.top/images/covers/kKw0mlU.jpg","_content":"\nמיאמי היא עיר מרהיבה שמציעה מגוון רחב של אטרקציות. הנה מדריך מפורט למה שתוכלו לצפות למצוא שם:\n\n## לינה\n באזור בריקל תמצאו את מלון **SLS Brickell** המלון מפואר עם חדרים מרווחים, בריכה מרהיבה על הגג ושירות מעולה. המיקום המרכזי של המלון מקל על ההגעה לעיר מהשדה.\n**אין ארוחות בוקר, לילה שלישי חינם**\n\n![נוף](https://kolha.top/images/b1n1MDX/view-of-sea-in-miami.webp)\n\n## תחבורה\n מיאמי מציעה מערכת תחבורה ציבורית מפותחת שתחסוך לכם זמן וכסף. המערכת כוללת אוטובוסים, רכבות ומוניות. ישנן גם אפשרויות להשכרת אופניים או רכבים חשמליים.\nאני ממליצה את **Metromover**- קרוניות עיליות חינמיות ברחבי העיר שנוסעות בכמה מסלולים, אוטובוסים וטרולי. כולם נוחים וזמינים.\n\n![תמונה של לוחית רישוי כקישוט](https://kolha.top/images/vvjdJtG/image-of-a-decorative-plate-kolhatop.webp)\n\n## אטרקציות\nבמיאמי תמצאו מקומות רבים לבילוי. ביקרו ב-**Bayside Marketplace, מיאמי ביץ’, ווינווד. בווינווד** תוכלו לטעום ממגוון מאפים מקומיים. בנוסף, תוכלו להתרשם מהגרפיטי המרהיב שמקשט את הרחובות, והנה עוד רשימה של אטרקציות שאספתי אך לא יצא לי לבקר בהם:\n-   **Brickell City Centre Shopping**:\n![Brickell city center shopping](https://kolha.top/images/Vm51gnW/brickell-city-center-shoppi.jpg)\nמתחם קניות חדשני ומרהיב המציע מגוון חנויות, מסעדות וקולנוע\n**⏰ שעות פתיחה:**  \n**יום ראשון - יום חמישי**: 10:00 - 21:30\n**יום שישי - יום שבת**: 10:00 - 22:00 \n**📍 701 S Miami Ave, Miami, FL 33131 \n📞 (305) 350-9922**\n    \n-   **Miami Circle National Historic Landmark**:\n![Miami circle](https://kolha.top/images/dg36G8D/miami-circle.png)\nמקום היסטורי וארכיאולוגי המציג את המקום הקדום ביותר של התיישבות קבועה בחוף המזרחי של ארצות הברית\n **⏰ שעות פתיחה:** \n**יום ראשון - יום שבת**: 09:00 - 17:00\n **📍 401 Brickell Point Rd, Miami, FL 33131\n📞 (305) 375-1492**\n    \n-   **Sugar Bars** :\n![Picure of the suger bar is miami beach](https://kolha.top/images/r6LMy7N/sugar-brickell-kolhatop.jpg)\nבר קוקטיילים עם נוף מרהיב של העיר מיאמי (לא כשר)\n**⏰ שעות פתיחה:** \n **יום ראשון - יום שלישי**: 16:00 - 00:00 \n **יום רביעי - יום שבת**: 16:00 - 02:00\n **📍 788 Brickell Plaza, Miami, FL 33131 \n 📞 (786) 805-4655**\n    \n-   **The Underline**:\n![The underline](https://kolha.top/images/GsBhyfp/the-under-line.png)\nמסלול רכיבה על אופניים ומסלול הליכה ירוק וחדשני המתחיל בסמוך לתחנת המטרו בקצה הדרומי של בריקל ומסתיים בפארק סאות’ פוינט\n **⏰ שעות פתיחה:**  כל הזמן כל יום \n**📍 25.7508° N, 80.2075° W \n📧 info@theunderline.org**\n    **יש לבדוק איזה חלקים פתוחים כרגע כי הפרויקט עדיין בבנייה**\n-   **Vizcaya Museum and Gardens**\n![Vizcaya Museum and Gardens](https://kolha.top/images/sQvHcrH/vizcaya-museum-and-gardens.png)\nמוזיאון וגנים המציגים את התרבות והאמנות של פרוור האמריקאי המפורסם ג’יימס דירינג\n**⏰ שעות פתיחה:**\n**יום שני - יום ראשון**: 09:30 - 16:30 \n**📍 3251 S Miami Ave, Miami, FL 33129 \n📞 (305) 250-9133**\n\n-   **Miami Beach** :\nחוף הים המפורסם של מיאמי המציע פעילויות רבות כמו שחייה, גלישה, וטיולי סירות\n**⏰ שעות פתיחה:**  \nלא ידוע \n**📍 1001 Ocean Dr, Miami Beach, FL 33139\n📞 (305) 673-7000**\n![מיאמי ביץ](https://kolha.top/images/ZG2nRdK/picture-of-miami-beach-kolhatop.webp)\n\n## אוכל\n מיאמי מציעה מגוון מסעדות, כמו Julia & Henry’s, שמציעה מתחם של שלוש קומות עם מלא דוכנים בסגנונות שונים, די-ג’יי ואוירה מגניבה. תוכלו למצוא מסעדות בסגנונות שונים, מאיטלקי וצרפתי, דרך אסייתי ועד לאמריקאי מסורתי.\n![אולם אוכל יוליה והנרי](https://kolha.top/images/4Y6cgXr/Julia-Henry-Food-Hall-in-Miami-kolhatop.jpg)\nCertainly! Here is the list of kosher restaurants in Miami:\n\n-   **המעדניה הכשרה בבריקל** (Brickell Kosher Deli)\n![תפריט המסעדה](https://kolha.top/images/h2DY7KZ/menu-Brickell-Kosher-Deli.jpg)\nמסעדה בסגנון מעדניה עם תפריט רחב של מנות כשרות\n**⏰ שעות פתיחה:** \n**יום שני - יום חמישי**: 10:00 - 17:00 \n**📍 35 SE 9th St, Miami, FL, 33131 \n📧 (305) 853-8582**\n    \n-   **Grill House**:\n![Grill house resturants](https://kolha.top/images/t8MFvdD/grill-house-outsides.png)\nמסעדת בשרים כשרה עם שף מבוסס במיאמי\n**⏰ שעות פתיחה:**\n **יום שני - יום חמישי**: 12:00 - 23:00\n **יום ראשון**: 12:00 - 22:00 \n **📍 976 Arthur Godfrey Rd, Miami Beach, FL, 33140 \n 📧 (305) 674-9005**\n    \n-  **הדקל מסעדה ישראלית כשרה (Hadekel - Kosher Israeli Restaurant)**:\n![תמונות של מנות ישראליות במעדת הדקל](https://kolha.top/images/vCWPt8T/the-dekel-food-kolhatop.webp)\nמסעדה ישראלית כשרה עם מנות מהמטבח המזרחי\n **⏰ שעות פתיחה:**\n**יום שני - יום חמישי**: 08:00 - 18:00 \n**יום שישי**: 08:00 - 15:00 \n**יום ראשון**: 09:00 - 18:00 \n**📍 2500 NE 186th St, Miami, FL, 33180 \n📞 (305) 952-3043**\n    \n-   **Kosh**:\n![The inside of kosh's resturant](https://kolha.top/images/xYYTdXP/kosh-resturant-insides.png)\n מסעדה עם מגוון רחב של מנות כשרות\n **⏰ שעות פתיחה:** \n **יום שני - יום חמישי**: 11:30 - 23:00 \n **יום שישי**: 11:30 - 14:00\n **יום ראשון**: 11:30 - 23:00 \n **📍 9477 Harding Ave, Surfside, FL, 33154 📞 (305) 763-8601**\n\n## סיורים\n אחת האטרקציות המיוחדות במיאמי היא הסיורי ביצות בסירת אויר **באברגליידס**, שכוללים הסעות וביקור בשמורת התנינים. זו הזדמנות נהדרת לראות את החייה המקומית מקרוב.\n\n![סיור ביצות](https://kolha.top/images/dGH358c/cave-in-miami-kolhatop.webp)\n\nבסה\"כ, מיאמי היא עיר מדהימה שמציעה מגוון רחב של פעילויות וחוויות. אנו ממליצים לכל מי שמתכנן לבקר שם. אנחנו בטוחים שגם אתם תאהבו את מיאמי. \n\n<small>מאמר זה מבוסס על טיול של 3 ימים במיאמי שכלל גם הסתובבות במרכזי קניות שונים בעיר ובנוסף מכיל מידע מהרשת</small>","source":"_posts/travel/america/triptomiami.md","raw":"---\ntitle: טיול בעיר המרהיבה של מיאמי\ndescription: מיאמי היא עיר מהממת שמצעיה מגוון רחב של אטרקציות. הנה מדריך מפורט למה שתוכלו לעשות שם.\ndate: 2023-12-30 16:00:00\ntags: [מיאמי, טיולים, קיץ,אוסף אטרקציות,מסעדות,ארצות הברית]\ncategories: [טיולים, ארצות הברית]\ncover: https://kolha.top/images/covers/kKw0mlU.jpg\n---\n\nמיאמי היא עיר מרהיבה שמציעה מגוון רחב של אטרקציות. הנה מדריך מפורט למה שתוכלו לצפות למצוא שם:\n\n## לינה\n באזור בריקל תמצאו את מלון **SLS Brickell** המלון מפואר עם חדרים מרווחים, בריכה מרהיבה על הגג ושירות מעולה. המיקום המרכזי של המלון מקל על ההגעה לעיר מהשדה.\n**אין ארוחות בוקר, לילה שלישי חינם**\n\n![נוף](https://kolha.top/images/b1n1MDX/view-of-sea-in-miami.webp)\n\n## תחבורה\n מיאמי מציעה מערכת תחבורה ציבורית מפותחת שתחסוך לכם זמן וכסף. המערכת כוללת אוטובוסים, רכבות ומוניות. ישנן גם אפשרויות להשכרת אופניים או רכבים חשמליים.\nאני ממליצה את **Metromover**- קרוניות עיליות חינמיות ברחבי העיר שנוסעות בכמה מסלולים, אוטובוסים וטרולי. כולם נוחים וזמינים.\n\n![תמונה של לוחית רישוי כקישוט](https://kolha.top/images/vvjdJtG/image-of-a-decorative-plate-kolhatop.webp)\n\n## אטרקציות\nבמיאמי תמצאו מקומות רבים לבילוי. ביקרו ב-**Bayside Marketplace, מיאמי ביץ’, ווינווד. בווינווד** תוכלו לטעום ממגוון מאפים מקומיים. בנוסף, תוכלו להתרשם מהגרפיטי המרהיב שמקשט את הרחובות, והנה עוד רשימה של אטרקציות שאספתי אך לא יצא לי לבקר בהם:\n-   **Brickell City Centre Shopping**:\n![Brickell city center shopping](https://kolha.top/images/Vm51gnW/brickell-city-center-shoppi.jpg)\nמתחם קניות חדשני ומרהיב המציע מגוון חנויות, מסעדות וקולנוע\n**⏰ שעות פתיחה:**  \n**יום ראשון - יום חמישי**: 10:00 - 21:30\n**יום שישי - יום שבת**: 10:00 - 22:00 \n**📍 701 S Miami Ave, Miami, FL 33131 \n📞 (305) 350-9922**\n    \n-   **Miami Circle National Historic Landmark**:\n![Miami circle](https://kolha.top/images/dg36G8D/miami-circle.png)\nמקום היסטורי וארכיאולוגי המציג את המקום הקדום ביותר של התיישבות קבועה בחוף המזרחי של ארצות הברית\n **⏰ שעות פתיחה:** \n**יום ראשון - יום שבת**: 09:00 - 17:00\n **📍 401 Brickell Point Rd, Miami, FL 33131\n📞 (305) 375-1492**\n    \n-   **Sugar Bars** :\n![Picure of the suger bar is miami beach](https://kolha.top/images/r6LMy7N/sugar-brickell-kolhatop.jpg)\nבר קוקטיילים עם נוף מרהיב של העיר מיאמי (לא כשר)\n**⏰ שעות פתיחה:** \n **יום ראשון - יום שלישי**: 16:00 - 00:00 \n **יום רביעי - יום שבת**: 16:00 - 02:00\n **📍 788 Brickell Plaza, Miami, FL 33131 \n 📞 (786) 805-4655**\n    \n-   **The Underline**:\n![The underline](https://kolha.top/images/GsBhyfp/the-under-line.png)\nמסלול רכיבה על אופניים ומסלול הליכה ירוק וחדשני המתחיל בסמוך לתחנת המטרו בקצה הדרומי של בריקל ומסתיים בפארק סאות’ פוינט\n **⏰ שעות פתיחה:**  כל הזמן כל יום \n**📍 25.7508° N, 80.2075° W \n📧 info@theunderline.org**\n    **יש לבדוק איזה חלקים פתוחים כרגע כי הפרויקט עדיין בבנייה**\n-   **Vizcaya Museum and Gardens**\n![Vizcaya Museum and Gardens](https://kolha.top/images/sQvHcrH/vizcaya-museum-and-gardens.png)\nמוזיאון וגנים המציגים את התרבות והאמנות של פרוור האמריקאי המפורסם ג’יימס דירינג\n**⏰ שעות פתיחה:**\n**יום שני - יום ראשון**: 09:30 - 16:30 \n**📍 3251 S Miami Ave, Miami, FL 33129 \n📞 (305) 250-9133**\n\n-   **Miami Beach** :\nחוף הים המפורסם של מיאמי המציע פעילויות רבות כמו שחייה, גלישה, וטיולי סירות\n**⏰ שעות פתיחה:**  \nלא ידוע \n**📍 1001 Ocean Dr, Miami Beach, FL 33139\n📞 (305) 673-7000**\n![מיאמי ביץ](https://kolha.top/images/ZG2nRdK/picture-of-miami-beach-kolhatop.webp)\n\n## אוכל\n מיאמי מציעה מגוון מסעדות, כמו Julia & Henry’s, שמציעה מתחם של שלוש קומות עם מלא דוכנים בסגנונות שונים, די-ג’יי ואוירה מגניבה. תוכלו למצוא מסעדות בסגנונות שונים, מאיטלקי וצרפתי, דרך אסייתי ועד לאמריקאי מסורתי.\n![אולם אוכל יוליה והנרי](https://kolha.top/images/4Y6cgXr/Julia-Henry-Food-Hall-in-Miami-kolhatop.jpg)\nCertainly! Here is the list of kosher restaurants in Miami:\n\n-   **המעדניה הכשרה בבריקל** (Brickell Kosher Deli)\n![תפריט המסעדה](https://kolha.top/images/h2DY7KZ/menu-Brickell-Kosher-Deli.jpg)\nמסעדה בסגנון מעדניה עם תפריט רחב של מנות כשרות\n**⏰ שעות פתיחה:** \n**יום שני - יום חמישי**: 10:00 - 17:00 \n**📍 35 SE 9th St, Miami, FL, 33131 \n📧 (305) 853-8582**\n    \n-   **Grill House**:\n![Grill house resturants](https://kolha.top/images/t8MFvdD/grill-house-outsides.png)\nמסעדת בשרים כשרה עם שף מבוסס במיאמי\n**⏰ שעות פתיחה:**\n **יום שני - יום חמישי**: 12:00 - 23:00\n **יום ראשון**: 12:00 - 22:00 \n **📍 976 Arthur Godfrey Rd, Miami Beach, FL, 33140 \n 📧 (305) 674-9005**\n    \n-  **הדקל מסעדה ישראלית כשרה (Hadekel - Kosher Israeli Restaurant)**:\n![תמונות של מנות ישראליות במעדת הדקל](https://kolha.top/images/vCWPt8T/the-dekel-food-kolhatop.webp)\nמסעדה ישראלית כשרה עם מנות מהמטבח המזרחי\n **⏰ שעות פתיחה:**\n**יום שני - יום חמישי**: 08:00 - 18:00 \n**יום שישי**: 08:00 - 15:00 \n**יום ראשון**: 09:00 - 18:00 \n**📍 2500 NE 186th St, Miami, FL, 33180 \n📞 (305) 952-3043**\n    \n-   **Kosh**:\n![The inside of kosh's resturant](https://kolha.top/images/xYYTdXP/kosh-resturant-insides.png)\n מסעדה עם מגוון רחב של מנות כשרות\n **⏰ שעות פתיחה:** \n **יום שני - יום חמישי**: 11:30 - 23:00 \n **יום שישי**: 11:30 - 14:00\n **יום ראשון**: 11:30 - 23:00 \n **📍 9477 Harding Ave, Surfside, FL, 33154 📞 (305) 763-8601**\n\n## סיורים\n אחת האטרקציות המיוחדות במיאמי היא הסיורי ביצות בסירת אויר **באברגליידס**, שכוללים הסעות וביקור בשמורת התנינים. זו הזדמנות נהדרת לראות את החייה המקומית מקרוב.\n\n![סיור ביצות](https://kolha.top/images/dGH358c/cave-in-miami-kolhatop.webp)\n\nבסה\"כ, מיאמי היא עיר מדהימה שמציעה מגוון רחב של פעילויות וחוויות. אנו ממליצים לכל מי שמתכנן לבקר שם. אנחנו בטוחים שגם אתם תאהבו את מיאמי. \n\n<small>מאמר זה מבוסס על טיול של 3 ימים במיאמי שכלל גם הסתובבות במרכזי קניות שונים בעיר ובנוסף מכיל מידע מהרשת</small>","slug":"travel/america/triptomiami","published":1,"updated":"2024-01-19T17:52:23.776Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygy1001go4vxemug3wdm","content":"<p>מיאמי היא עיר מרהיבה שמציעה מגוון רחב של אטרקציות. הנה מדריך מפורט למה שתוכלו לצפות למצוא שם:</p>\n<h2 id=\"לינה\"><a href=\"#לינה\" class=\"headerlink\" title=\"לינה\"></a>לינה</h2><p> באזור בריקל תמצאו את מלון <strong>SLS Brickell</strong> המלון מפואר עם חדרים מרווחים, בריכה מרהיבה על הגג ושירות מעולה. המיקום המרכזי של המלון מקל על ההגעה לעיר מהשדה.<br><strong>אין ארוחות בוקר, לילה שלישי חינם</strong></p>\n<p><img src=\"https://kolha.top/images/b1n1MDX/view-of-sea-in-miami.webp\" alt=\"נוף\"></p>\n<h2 id=\"תחבורה\"><a href=\"#תחבורה\" class=\"headerlink\" title=\"תחבורה\"></a>תחבורה</h2><p> מיאמי מציעה מערכת תחבורה ציבורית מפותחת שתחסוך לכם זמן וכסף. המערכת כוללת אוטובוסים, רכבות ומוניות. ישנן גם אפשרויות להשכרת אופניים או רכבים חשמליים.<br>אני ממליצה את <strong>Metromover</strong>- קרוניות עיליות חינמיות ברחבי העיר שנוסעות בכמה מסלולים, אוטובוסים וטרולי. כולם נוחים וזמינים.</p>\n<p><img src=\"https://kolha.top/images/vvjdJtG/image-of-a-decorative-plate-kolhatop.webp\" alt=\"תמונה של לוחית רישוי כקישוט\"></p>\n<h2 id=\"אטרקציות\"><a href=\"#אטרקציות\" class=\"headerlink\" title=\"אטרקציות\"></a>אטרקציות</h2><p>במיאמי תמצאו מקומות רבים לבילוי. ביקרו ב-<strong>Bayside Marketplace, מיאמי ביץ’, ווינווד. בווינווד</strong> תוכלו לטעום ממגוון מאפים מקומיים. בנוסף, תוכלו להתרשם מהגרפיטי המרהיב שמקשט את הרחובות, והנה עוד רשימה של אטרקציות שאספתי אך לא יצא לי לבקר בהם:</p>\n<ul>\n<li><p><strong>Brickell City Centre Shopping</strong>:<br><img src=\"https://kolha.top/images/Vm51gnW/brickell-city-center-shoppi.jpg\" alt=\"Brickell city center shopping\"><br>מתחם קניות חדשני ומרהיב המציע מגוון חנויות, מסעדות וקולנוע<br><strong>⏰ שעות פתיחה:</strong><br><strong>יום ראשון - יום חמישי</strong>: 10:00 - 21:30<br><strong>יום שישי - יום שבת</strong>: 10:00 - 22:00<br><strong>📍 701 S Miami Ave, Miami, FL 33131<br>📞 (305) 350-9922</strong></p>\n</li>\n<li><p><strong>Miami Circle National Historic Landmark</strong>:<br><img src=\"https://kolha.top/images/dg36G8D/miami-circle.png\" alt=\"Miami circle\"><br>מקום היסטורי וארכיאולוגי המציג את המקום הקדום ביותר של התיישבות קבועה בחוף המזרחי של ארצות הברית<br> <strong>⏰ שעות פתיחה:</strong><br><strong>יום ראשון - יום שבת</strong>: 09:00 - 17:00<br> <strong>📍 401 Brickell Point Rd, Miami, FL 33131<br>📞 (305) 375-1492</strong></p>\n</li>\n<li><p><strong>Sugar Bars</strong> :<br><img src=\"https://kolha.top/images/r6LMy7N/sugar-brickell-kolhatop.jpg\" alt=\"Picure of the suger bar is miami beach\"><br>בר קוקטיילים עם נוף מרהיב של העיר מיאמי (לא כשר)<br><strong>⏰ שעות פתיחה:</strong><br> <strong>יום ראשון - יום שלישי</strong>: 16:00 - 00:00<br> <strong>יום רביעי - יום שבת</strong>: 16:00 - 02:00<br> <strong>📍 788 Brickell Plaza, Miami, FL 33131<br> 📞 (786) 805-4655</strong></p>\n</li>\n<li><p><strong>The Underline</strong>:<br><img src=\"https://kolha.top/images/GsBhyfp/the-under-line.png\" alt=\"The underline\"><br>מסלול רכיבה על אופניים ומסלול הליכה ירוק וחדשני המתחיל בסמוך לתחנת המטרו בקצה הדרומי של בריקל ומסתיים בפארק סאות’ פוינט<br> <strong>⏰ שעות פתיחה:</strong>  כל הזמן כל יום<br><strong>📍 25.7508° N, 80.2075° W<br>📧 <a href=\"mailto:&#x69;&#x6e;&#102;&#x6f;&#x40;&#x74;&#104;&#x65;&#117;&#x6e;&#x64;&#x65;&#114;&#x6c;&#x69;&#x6e;&#x65;&#46;&#x6f;&#114;&#103;\">&#x69;&#x6e;&#102;&#x6f;&#x40;&#x74;&#104;&#x65;&#117;&#x6e;&#x64;&#x65;&#114;&#x6c;&#x69;&#x6e;&#x65;&#46;&#x6f;&#114;&#103;</a></strong><br><strong>יש לבדוק איזה חלקים פתוחים כרגע כי הפרויקט עדיין בבנייה</strong></p>\n</li>\n<li><p><strong>Vizcaya Museum and Gardens</strong><br><img src=\"https://kolha.top/images/sQvHcrH/vizcaya-museum-and-gardens.png\" alt=\"Vizcaya Museum and Gardens\"><br>מוזיאון וגנים המציגים את התרבות והאמנות של פרוור האמריקאי המפורסם ג’יימס דירינג<br><strong>⏰ שעות פתיחה:</strong><br><strong>יום שני - יום ראשון</strong>: 09:30 - 16:30<br><strong>📍 3251 S Miami Ave, Miami, FL 33129<br>📞 (305) 250-9133</strong></p>\n</li>\n<li><p><strong>Miami Beach</strong> :<br>חוף הים המפורסם של מיאמי המציע פעילויות רבות כמו שחייה, גלישה, וטיולי סירות<br><strong>⏰ שעות פתיחה:</strong><br>לא ידוע<br><strong>📍 1001 Ocean Dr, Miami Beach, FL 33139<br>📞 (305) 673-7000</strong><br><img src=\"https://kolha.top/images/ZG2nRdK/picture-of-miami-beach-kolhatop.webp\" alt=\"מיאמי ביץ\"></p>\n</li>\n</ul>\n<h2 id=\"אוכל\"><a href=\"#אוכל\" class=\"headerlink\" title=\"אוכל\"></a>אוכל</h2><p> מיאמי מציעה מגוון מסעדות, כמו Julia &amp; Henry’s, שמציעה מתחם של שלוש קומות עם מלא דוכנים בסגנונות שונים, די-ג’יי ואוירה מגניבה. תוכלו למצוא מסעדות בסגנונות שונים, מאיטלקי וצרפתי, דרך אסייתי ועד לאמריקאי מסורתי.<br><img src=\"https://kolha.top/images/4Y6cgXr/Julia-Henry-Food-Hall-in-Miami-kolhatop.jpg\" alt=\"אולם אוכל יוליה והנרי\"><br>Certainly! Here is the list of kosher restaurants in Miami:</p>\n<ul>\n<li><p><strong>המעדניה הכשרה בבריקל</strong> (Brickell Kosher Deli)<br><img src=\"https://kolha.top/images/h2DY7KZ/menu-Brickell-Kosher-Deli.jpg\" alt=\"תפריט המסעדה\"><br>מסעדה בסגנון מעדניה עם תפריט רחב של מנות כשרות<br><strong>⏰ שעות פתיחה:</strong><br><strong>יום שני - יום חמישי</strong>: 10:00 - 17:00<br><strong>📍 35 SE 9th St, Miami, FL, 33131<br>📧 (305) 853-8582</strong></p>\n</li>\n<li><p><strong>Grill House</strong>:<br><img src=\"https://kolha.top/images/t8MFvdD/grill-house-outsides.png\" alt=\"Grill house resturants\"><br>מסעדת בשרים כשרה עם שף מבוסס במיאמי<br><strong>⏰ שעות פתיחה:</strong><br> <strong>יום שני - יום חמישי</strong>: 12:00 - 23:00<br> <strong>יום ראשון</strong>: 12:00 - 22:00<br> <strong>📍 976 Arthur Godfrey Rd, Miami Beach, FL, 33140<br> 📧 (305) 674-9005</strong></p>\n</li>\n<li><p><strong>הדקל מסעדה ישראלית כשרה (Hadekel - Kosher Israeli Restaurant)</strong>:<br><img src=\"https://kolha.top/images/vCWPt8T/the-dekel-food-kolhatop.webp\" alt=\"תמונות של מנות ישראליות במעדת הדקל\"><br>מסעדה ישראלית כשרה עם מנות מהמטבח המזרחי<br> <strong>⏰ שעות פתיחה:</strong><br><strong>יום שני - יום חמישי</strong>: 08:00 - 18:00<br><strong>יום שישי</strong>: 08:00 - 15:00<br><strong>יום ראשון</strong>: 09:00 - 18:00<br><strong>📍 2500 NE 186th St, Miami, FL, 33180<br>📞 (305) 952-3043</strong></p>\n</li>\n<li><p><strong>Kosh</strong>:<br><img src=\"https://kolha.top/images/xYYTdXP/kosh-resturant-insides.png\" alt=\"The inside of kosh&#39;s resturant\"><br> מסעדה עם מגוון רחב של מנות כשרות<br> <strong>⏰ שעות פתיחה:</strong><br> <strong>יום שני - יום חמישי</strong>: 11:30 - 23:00<br> <strong>יום שישי</strong>: 11:30 - 14:00<br> <strong>יום ראשון</strong>: 11:30 - 23:00<br> <strong>📍 9477 Harding Ave, Surfside, FL, 33154 📞 (305) 763-8601</strong></p>\n</li>\n</ul>\n<h2 id=\"סיורים\"><a href=\"#סיורים\" class=\"headerlink\" title=\"סיורים\"></a>סיורים</h2><p> אחת האטרקציות המיוחדות במיאמי היא הסיורי ביצות בסירת אויר <strong>באברגליידס</strong>, שכוללים הסעות וביקור בשמורת התנינים. זו הזדמנות נהדרת לראות את החייה המקומית מקרוב.</p>\n<p><img src=\"https://kolha.top/images/dGH358c/cave-in-miami-kolhatop.webp\" alt=\"סיור ביצות\"></p>\n<p>בסה&quot;כ, מיאמי היא עיר מדהימה שמציעה מגוון רחב של פעילויות וחוויות. אנו ממליצים לכל מי שמתכנן לבקר שם. אנחנו בטוחים שגם אתם תאהבו את מיאמי. </p>\n<p><small>מאמר זה מבוסס על טיול של 3 ימים במיאמי שכלל גם הסתובבות במרכזי קניות שונים בעיר ובנוסף מכיל מידע מהרשת</small></p>\n","excerpt":"","more":"<p>מיאמי היא עיר מרהיבה שמציעה מגוון רחב של אטרקציות. הנה מדריך מפורט למה שתוכלו לצפות למצוא שם:</p>\n<h2 id=\"לינה\"><a href=\"#לינה\" class=\"headerlink\" title=\"לינה\"></a>לינה</h2><p> באזור בריקל תמצאו את מלון <strong>SLS Brickell</strong> המלון מפואר עם חדרים מרווחים, בריכה מרהיבה על הגג ושירות מעולה. המיקום המרכזי של המלון מקל על ההגעה לעיר מהשדה.<br><strong>אין ארוחות בוקר, לילה שלישי חינם</strong></p>\n<p><img src=\"https://kolha.top/images/b1n1MDX/view-of-sea-in-miami.webp\" alt=\"נוף\"></p>\n<h2 id=\"תחבורה\"><a href=\"#תחבורה\" class=\"headerlink\" title=\"תחבורה\"></a>תחבורה</h2><p> מיאמי מציעה מערכת תחבורה ציבורית מפותחת שתחסוך לכם זמן וכסף. המערכת כוללת אוטובוסים, רכבות ומוניות. ישנן גם אפשרויות להשכרת אופניים או רכבים חשמליים.<br>אני ממליצה את <strong>Metromover</strong>- קרוניות עיליות חינמיות ברחבי העיר שנוסעות בכמה מסלולים, אוטובוסים וטרולי. כולם נוחים וזמינים.</p>\n<p><img src=\"https://kolha.top/images/vvjdJtG/image-of-a-decorative-plate-kolhatop.webp\" alt=\"תמונה של לוחית רישוי כקישוט\"></p>\n<h2 id=\"אטרקציות\"><a href=\"#אטרקציות\" class=\"headerlink\" title=\"אטרקציות\"></a>אטרקציות</h2><p>במיאמי תמצאו מקומות רבים לבילוי. ביקרו ב-<strong>Bayside Marketplace, מיאמי ביץ’, ווינווד. בווינווד</strong> תוכלו לטעום ממגוון מאפים מקומיים. בנוסף, תוכלו להתרשם מהגרפיטי המרהיב שמקשט את הרחובות, והנה עוד רשימה של אטרקציות שאספתי אך לא יצא לי לבקר בהם:</p>\n<ul>\n<li><p><strong>Brickell City Centre Shopping</strong>:<br><img src=\"https://kolha.top/images/Vm51gnW/brickell-city-center-shoppi.jpg\" alt=\"Brickell city center shopping\"><br>מתחם קניות חדשני ומרהיב המציע מגוון חנויות, מסעדות וקולנוע<br><strong>⏰ שעות פתיחה:</strong><br><strong>יום ראשון - יום חמישי</strong>: 10:00 - 21:30<br><strong>יום שישי - יום שבת</strong>: 10:00 - 22:00<br><strong>📍 701 S Miami Ave, Miami, FL 33131<br>📞 (305) 350-9922</strong></p>\n</li>\n<li><p><strong>Miami Circle National Historic Landmark</strong>:<br><img src=\"https://kolha.top/images/dg36G8D/miami-circle.png\" alt=\"Miami circle\"><br>מקום היסטורי וארכיאולוגי המציג את המקום הקדום ביותר של התיישבות קבועה בחוף המזרחי של ארצות הברית<br> <strong>⏰ שעות פתיחה:</strong><br><strong>יום ראשון - יום שבת</strong>: 09:00 - 17:00<br> <strong>📍 401 Brickell Point Rd, Miami, FL 33131<br>📞 (305) 375-1492</strong></p>\n</li>\n<li><p><strong>Sugar Bars</strong> :<br><img src=\"https://kolha.top/images/r6LMy7N/sugar-brickell-kolhatop.jpg\" alt=\"Picure of the suger bar is miami beach\"><br>בר קוקטיילים עם נוף מרהיב של העיר מיאמי (לא כשר)<br><strong>⏰ שעות פתיחה:</strong><br> <strong>יום ראשון - יום שלישי</strong>: 16:00 - 00:00<br> <strong>יום רביעי - יום שבת</strong>: 16:00 - 02:00<br> <strong>📍 788 Brickell Plaza, Miami, FL 33131<br> 📞 (786) 805-4655</strong></p>\n</li>\n<li><p><strong>The Underline</strong>:<br><img src=\"https://kolha.top/images/GsBhyfp/the-under-line.png\" alt=\"The underline\"><br>מסלול רכיבה על אופניים ומסלול הליכה ירוק וחדשני המתחיל בסמוך לתחנת המטרו בקצה הדרומי של בריקל ומסתיים בפארק סאות’ פוינט<br> <strong>⏰ שעות פתיחה:</strong>  כל הזמן כל יום<br><strong>📍 25.7508° N, 80.2075° W<br>📧 <a href=\"mailto:&#x69;&#x6e;&#102;&#x6f;&#x40;&#x74;&#104;&#x65;&#117;&#x6e;&#x64;&#x65;&#114;&#x6c;&#x69;&#x6e;&#x65;&#46;&#x6f;&#114;&#103;\">&#x69;&#x6e;&#102;&#x6f;&#x40;&#x74;&#104;&#x65;&#117;&#x6e;&#x64;&#x65;&#114;&#x6c;&#x69;&#x6e;&#x65;&#46;&#x6f;&#114;&#103;</a></strong><br><strong>יש לבדוק איזה חלקים פתוחים כרגע כי הפרויקט עדיין בבנייה</strong></p>\n</li>\n<li><p><strong>Vizcaya Museum and Gardens</strong><br><img src=\"https://kolha.top/images/sQvHcrH/vizcaya-museum-and-gardens.png\" alt=\"Vizcaya Museum and Gardens\"><br>מוזיאון וגנים המציגים את התרבות והאמנות של פרוור האמריקאי המפורסם ג’יימס דירינג<br><strong>⏰ שעות פתיחה:</strong><br><strong>יום שני - יום ראשון</strong>: 09:30 - 16:30<br><strong>📍 3251 S Miami Ave, Miami, FL 33129<br>📞 (305) 250-9133</strong></p>\n</li>\n<li><p><strong>Miami Beach</strong> :<br>חוף הים המפורסם של מיאמי המציע פעילויות רבות כמו שחייה, גלישה, וטיולי סירות<br><strong>⏰ שעות פתיחה:</strong><br>לא ידוע<br><strong>📍 1001 Ocean Dr, Miami Beach, FL 33139<br>📞 (305) 673-7000</strong><br><img src=\"https://kolha.top/images/ZG2nRdK/picture-of-miami-beach-kolhatop.webp\" alt=\"מיאמי ביץ\"></p>\n</li>\n</ul>\n<h2 id=\"אוכל\"><a href=\"#אוכל\" class=\"headerlink\" title=\"אוכל\"></a>אוכל</h2><p> מיאמי מציעה מגוון מסעדות, כמו Julia &amp; Henry’s, שמציעה מתחם של שלוש קומות עם מלא דוכנים בסגנונות שונים, די-ג’יי ואוירה מגניבה. תוכלו למצוא מסעדות בסגנונות שונים, מאיטלקי וצרפתי, דרך אסייתי ועד לאמריקאי מסורתי.<br><img src=\"https://kolha.top/images/4Y6cgXr/Julia-Henry-Food-Hall-in-Miami-kolhatop.jpg\" alt=\"אולם אוכל יוליה והנרי\"><br>Certainly! Here is the list of kosher restaurants in Miami:</p>\n<ul>\n<li><p><strong>המעדניה הכשרה בבריקל</strong> (Brickell Kosher Deli)<br><img src=\"https://kolha.top/images/h2DY7KZ/menu-Brickell-Kosher-Deli.jpg\" alt=\"תפריט המסעדה\"><br>מסעדה בסגנון מעדניה עם תפריט רחב של מנות כשרות<br><strong>⏰ שעות פתיחה:</strong><br><strong>יום שני - יום חמישי</strong>: 10:00 - 17:00<br><strong>📍 35 SE 9th St, Miami, FL, 33131<br>📧 (305) 853-8582</strong></p>\n</li>\n<li><p><strong>Grill House</strong>:<br><img src=\"https://kolha.top/images/t8MFvdD/grill-house-outsides.png\" alt=\"Grill house resturants\"><br>מסעדת בשרים כשרה עם שף מבוסס במיאמי<br><strong>⏰ שעות פתיחה:</strong><br> <strong>יום שני - יום חמישי</strong>: 12:00 - 23:00<br> <strong>יום ראשון</strong>: 12:00 - 22:00<br> <strong>📍 976 Arthur Godfrey Rd, Miami Beach, FL, 33140<br> 📧 (305) 674-9005</strong></p>\n</li>\n<li><p><strong>הדקל מסעדה ישראלית כשרה (Hadekel - Kosher Israeli Restaurant)</strong>:<br><img src=\"https://kolha.top/images/vCWPt8T/the-dekel-food-kolhatop.webp\" alt=\"תמונות של מנות ישראליות במעדת הדקל\"><br>מסעדה ישראלית כשרה עם מנות מהמטבח המזרחי<br> <strong>⏰ שעות פתיחה:</strong><br><strong>יום שני - יום חמישי</strong>: 08:00 - 18:00<br><strong>יום שישי</strong>: 08:00 - 15:00<br><strong>יום ראשון</strong>: 09:00 - 18:00<br><strong>📍 2500 NE 186th St, Miami, FL, 33180<br>📞 (305) 952-3043</strong></p>\n</li>\n<li><p><strong>Kosh</strong>:<br><img src=\"https://kolha.top/images/xYYTdXP/kosh-resturant-insides.png\" alt=\"The inside of kosh&#39;s resturant\"><br> מסעדה עם מגוון רחב של מנות כשרות<br> <strong>⏰ שעות פתיחה:</strong><br> <strong>יום שני - יום חמישי</strong>: 11:30 - 23:00<br> <strong>יום שישי</strong>: 11:30 - 14:00<br> <strong>יום ראשון</strong>: 11:30 - 23:00<br> <strong>📍 9477 Harding Ave, Surfside, FL, 33154 📞 (305) 763-8601</strong></p>\n</li>\n</ul>\n<h2 id=\"סיורים\"><a href=\"#סיורים\" class=\"headerlink\" title=\"סיורים\"></a>סיורים</h2><p> אחת האטרקציות המיוחדות במיאמי היא הסיורי ביצות בסירת אויר <strong>באברגליידס</strong>, שכוללים הסעות וביקור בשמורת התנינים. זו הזדמנות נהדרת לראות את החייה המקומית מקרוב.</p>\n<p><img src=\"https://kolha.top/images/dGH358c/cave-in-miami-kolhatop.webp\" alt=\"סיור ביצות\"></p>\n<p>בסה&quot;כ, מיאמי היא עיר מדהימה שמציעה מגוון רחב של פעילויות וחוויות. אנו ממליצים לכל מי שמתכנן לבקר שם. אנחנו בטוחים שגם אתם תאהבו את מיאמי. </p>\n<p><small>מאמר זה מבוסס על טיול של 3 ימים במיאמי שכלל גם הסתובבות במרכזי קניות שונים בעיר ובנוסף מכיל מידע מהרשת</small></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"https://kolha.top/images/b1n1MDX/view-of-sea-in-miami.webp","popularPost_tmp_gaData":{"updated":"Fri Jan 19 2024 19:52:23 GMT+0200 (Israel Standard Time)","title":"טיול בעיר המרהיבה של מיאמי","path":"travel/america/triptomiami/","eyeCatchImage":"https://kolha.top/images/b1n1MDX/view-of-sea-in-miami.webp","excerpt":"מיאמי היא עיר מהממת שמצעיה מגוון רחב של אטרקציות. הנה מדריך מפורט למה שתוכלו לעשות שם.","date":{"_isAMomentObject":true,"_i":"2023-12-30T14:00:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2023-12-30T14:00:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"טיולים > ארצות הברית","tags":["מיאמי","טיולים","קיץ","אוסף אטרקציות","מסעדות","ארצות הברית"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"שווקי חג המולג בפראג 2023","description":"בפראג ישנם מלא שווקי חג מולד שווים, הנה רשימה מפורטת על חמישה שווקים שווים לקריסמס 2023-24","date":"2023-12-20T12:00:00.000Z","cover":"https://kolha.top/images/covers/ho74yFK.jpg","_content":"\n**זהו חלק מהכתבה המלאה על [כריסמס בפראג](https://kolha.top/travel/prauge/christmas)**\n\n### זמני הפעילות של השווקים\nהשנה, שוקי חג המולד העיקריים פועלים בין ה-2 בדצמבר 2023 ל-6 בינואר 2024, מלבד שווקים ספורים שנסגרים ב-24 בדצמבר 2023. כמה שווקים (מפורט בכל אחד מהשווקים) נפתחים רק ב-25 בנובמבר 2023 ליום ראשון הראשון של החג.\n\nשוקי חג המולד פתוחים כל יום, כולל ערב חג המולד, חג המולד (יום חג המולד הראשון - חג לאומי) ויום סטפן הקדוש (יום חג המולד השני - חג לאומי). הם פתוחים גם בערב השנה החדשה וביום השנה החדשה (שהוא חג לאומי ויום חופש).\nהשווקים פתוחים מ-10 בבוקר עד 22:00 בלילה והכניסה לשווקים חופשית.\nחלק מדוכני המזון פתוחים אפילו יותר מ-22:00, תלוי עד כמה הם עמוסים ואיך מזג האוויר.\n\n\n### היכן נמצא שוק חג המולד הגדול ביותר בפראג?\nשוק חג המולד הגדול ביותר בפראג ממוקם ממש במרכז - בכיכר העיר העתיקה (Staroměstské náměstí). שוק זה הוא שוק חג המולד הגדול והידוע ביותר בפראג, והוא ממוקם בלב המרכז ההיסטורי של העיר.\n\nבשוק חג המולד הזה יש למעלה מ-100 דוכנים שמוכרים מגוון רחב של מוצרי עבודת יד צ'כיות מסורתיות, קישוטים ומזכרות, כמו גם אוכל ושתייה. תוכלו ליהנות מפינוקי חג המולד הצ'כיים המסורתיים כגון יין חם (svařák), יין דבש חם (medovina), וג'ינג'ר (perník) או ערמונים קלויים.\n\nבכיכר העיר העתיקה יש תמיד את עץ חג המולד הגדול ביותר בעיר ומתחת במה גדולה להופעות שכוללת מוזיקה, תיאטרון וריקודים מסורתיים.\n\n### אילו שוקי חג המולד בפראג הם הטובים ביותר?\nזו שאלה שקשה לענות עליה, כי זה באמת תלוי במה אתם מחפשים. השוק הגדול והקל ביותר לביקור הוא השוק בכיכר העיר העתיקה וכדיי ללכת לשם כל יום בערב לראות את העץ. במיוחד בלילה האווירה קסומה וזהו מקום מרכזי נהדר להתחיל לחקור ממנו את פראג.\n\nאבל אם אתם באמת רוצים לקנות משהו אחר ולהרגיש אווירת חג מולד אותנטית יותר ופחות עמוסה, כדי ללכת לשוק כיכר השלום או לשוקי האדוונט בג'יראק ולשווקי המלאכה של סוף השבוע - שוק הקדרות ושוק דיז'אן ב-Vystaviste (תערוכה ארמון, פראג 7 - ראה הערות שלי למטה).\n\nאם אתם רוצים לקנות אוכל טרי מהיום להיום, עוגות ולקנות קישוטים להכנת זר חג המולד וכו', כדיי תמיד לקפוץ לשוק חג המולד של אנדל, כי הוא מיועד למקומיים ולאו דווקא לתיירים (ומחירים שפויים).\n\n## רשימת כל שווקי חג המולד של פראג\n\n1. **כיכר העיר העתיקה**\n![תמונה של שוק הקריסמס בכיכר העיר הישנה - כל הזכויות שמורות למגדלנה מרסדן](https://kolha.top/images/hF0VpJK/Christmas-Market-at-Old-Town-Square-View-from-Prague.webp)\nזהו שוק חג המולד הגדול ביותר בפראג וזה שפתוח הכי הרבה זמן ובכל יום. יש הופעות חיות על הבמה המרכזית, אבל אפשר גם להסתובב בין הדוכנים ולצפות במלאכת יד מסורתית או באנשי מקצוע שיוצרים עיטורים ממתכת . יש ריח של ערמונים קלויים, שקדים ויין חם ושאר מאכלים חגיגיים.\n\nיש גם נקודת תצפית ותמונות מעוצבת שבה תוכלו לצלם תמונות נהדרות וגם לראות את השוק מלמעלה. זה ממש ליד עץ חג המולד, כדי שתוכל לצלם את הסלפי המושלם או את התמונה הקבוצתית.\n\n**📍 כיכר העיר העתיקה, פראג 1, תחנת הרכבת התחתית או החשמלית הקרובה ביותר - Staromestska\n⏰ 2 בדצמבר 2023 - 6 בינואר 2024, 10:00 - 22:00**\n\n\n2. **כיכר ואצלב**\n![תמונה של שוק הקריסמס בכיכר ואצלב - כל הזכויות שמורות למגדלנה מרסדן](https://kolha.top/images/f8Vb1kq/Gingerbread-stall-at-Christmas-Markets-View-from-Prague.webp)\nיש עוד שוק חג מולד גדול בחלק התחתון של כיכר ואצלב והדוכנים דומים מאוד כמו בכיכר העיר העתיקה (השווקים מנוהלים על ידי אותה חברה).\n\nהשנה, תמצאו כאן גם משטח החלקה על הקרח, זו הפעם הראשונה מאז ימי הביניים, כשהייתה כאן בריכה קפואה. ניתן לשכור מחליקים על הקרח ולוקרים מאובטחים מסופקים לשמירה על דברים, כך שניתן פשוט להיכנס ולהחליק על הקרח. משטח החלקה על הקרח פתוח כל יום עד מאוחר והכניסה היא 200 קרונות לשעתיים (בנוסף השכרת נעלי החלקה על הקרח היא 150 קרונות).\n**📍 קרוב למטרו Mustek – רכבת תחתית בקו B, תחנת החשמלית הקרובה מס'. 9, 5, הוא 'Vaclavske Namesti' באמצע הכיכר.**\n\n\n3. **חג המולד בכיכר ואצלב - ארגוני צדקה**\n![תמונה של שוק הקריסמס בכיכר ואצלב - ארגוני צדקה - כל הזכויות שמורות למגדלנה מרסדן](https://kolha.top/images/XYYR67J/Roasted-chestnuts-at-Christmas-market-View-from-Prague.webp)\nיש גם שוק חג מולד שני בכיכר והוא נמצא בחלק העליון של האזור, הוא קרוב לפסל הסוס של סנט ואצלב ולבניין המוזיאון.\n\nבשוק חג המולד הזה יש דוכנים המנוהלים על ידי ארגוני צדקה שונים, כך שתמצאו מגוון שונה של אומנות, אוכל ומתנות מאשר בשווקים אחרים. יש גם שפע של דוכני מזון הדומים לשווקים אחרים, כך שתוכלו לשתות שוקו חם או יין חם תוך כדי דפדוף בין הדוכנים.\n📍 **החלק העליון של כיכר ואצלב ההיסטורית, קרוב למוזיאון הלאומי, הרכבת התחתית הקרובה ביותר היא Muzeum ותחנת החשמלית 'Vaclavske Namesti' מס. 5,9**\n\n⏰ **2 בדצמבר - 23 בדצמבר 2023, 10:00 - 22:00**\n\n\n4. **שוק חג המולד בכיכר השלום**\n![תמונה של שוק הקריסמס בכיכר השלום - כל הזכויות שמורות למגדלנה מרסדן](https://kolha.top/images/8g6knMB/Christmas-Market-at-Peace-Square-View-from-Prague-1.webp)\nשוק חג המולד הזה הוא אחד המומלצים לביקור מכיוון שהוא מרגיש הרבה יותר אותנטי מהשוק הגדול בכיכר העיר העתיקה. בשוק ישנם יותר יצרנים מקומיים או קטנים עם מתנות איכותיות, ניפוח זכוכית מסורתי \nקישוטים ואוכל מקומי ואפוי.\n\n\tאני ממליצה לכם לבקר את דוכן חוות הלבנדר, שמוכר עוגיות לבנדר, שהם בהחלט אחת העוגיות הותר טעימות שתטעמו, אחת מהמאפיות המקומיות הטובות ביותר בשם \"הלחם שלנו\" שייצרה עוגיות חג מולד מסורתיות שתוכלו לנסות בנפרד או לקנות קופסה שלמה ומעוטרת ביד. עוגיות ג'ינג'ר. יש גם דוכן עם מחברות עם כריכת עור, ציפורים מגולפות מעץ צבעוניות  וחותכני עוגיות מסורתיות (כדי שתוכלו להכין עוגיות חג המולד שלכם בבית).\n\n\tהמחירים גם נורמליים - לא במחיר מופקע במיוחד, אבל מתאים לעבודה שנכנסת לכל המוצרים בעבודת יד. שווה לקנות שם מתנות או קישוטים לעץ הקריסמס שלכם\n\n**📍 Namesti Miru - מול כנסיית סנט לודמילה, תחנת הרכבת התחתית הקרובה ביותר 'Namesti Miru' או חשמלית מס. 4, 5, 10, 16, 22. שוק זה נמצא במרחק של כ-20 דקות ממרכז פראג בחשמלית או מתחת לאדמה.\n⏰ 25 בנובמבר - 24 בדצמבר 2023 - 10:00 - 20:00-22:00 (תלוי בעומס ובמזג האוויר)**\n\n\n5. **שוק חג המולד בכיכר הרפובליקה**\n![תמונה של שוק הקריסמס בכיכר הרפובליקה - כל הזכויות שמורות למגדלנה מרסדן](https://kolha.top/images/XVy3NHt/Christmas-Gingerbreads-at-market-View-from-Prague.webp)\nיש שני שווקים נפרדים בכיכר הרפובליקה. הגלוי יותר נמצא ממש מחוץ למרכז הקניות \"פלדיום\" (הבניין הוורוד הגדול) וכולל הרבה דוכני אוכל מסורתי וקישוטי חג המולד.\nהשוק השני נמצא מול בניין \"סלניס, במרחק של כמה דקות הליכה. שוק זה כולל עוד דוכני בגדי חורף, לחמניות זנגביל מסורתיות וממתקים, מתנות בעבודת יד ויין חם. נחמד ללכת משוק אחד למשנהו ואז להמשיך למרכז פראג, שנמצא רק כרבע שעה הליכה.\n\n**📍 Namesti Republiky, מול מרכז הקניות Palladium, תחנת רכבת תחתית 'Namesti Republiky' על קו B. תחנות חשמלית 'Namesti Republiky', no 5, 6, 8, 15, 19, 26,\n⏰ 25 בנובמבר - 30 בדצמבר 2023, 10:00 - 20:00 (בערך)**\n\n","source":"_posts/travel/prauge/chirstmas-markets.md","raw":"---\ntitle: שווקי חג המולג בפראג 2023\ndescription: בפראג ישנם מלא שווקי חג מולד שווים, הנה רשימה מפורטת על חמישה שווקים שווים לקריסמס 2023-24\ndate: 2023-12-20 14:00:00\ntags: [פראג, טיולים, כריסמס,אוסף אטרקציות,שווקים]\ncategories: [טיולים, פראג]\ncover: https://kolha.top/images/covers/ho74yFK.jpg\n---\n\n**זהו חלק מהכתבה המלאה על [כריסמס בפראג](https://kolha.top/travel/prauge/christmas)**\n\n### זמני הפעילות של השווקים\nהשנה, שוקי חג המולד העיקריים פועלים בין ה-2 בדצמבר 2023 ל-6 בינואר 2024, מלבד שווקים ספורים שנסגרים ב-24 בדצמבר 2023. כמה שווקים (מפורט בכל אחד מהשווקים) נפתחים רק ב-25 בנובמבר 2023 ליום ראשון הראשון של החג.\n\nשוקי חג המולד פתוחים כל יום, כולל ערב חג המולד, חג המולד (יום חג המולד הראשון - חג לאומי) ויום סטפן הקדוש (יום חג המולד השני - חג לאומי). הם פתוחים גם בערב השנה החדשה וביום השנה החדשה (שהוא חג לאומי ויום חופש).\nהשווקים פתוחים מ-10 בבוקר עד 22:00 בלילה והכניסה לשווקים חופשית.\nחלק מדוכני המזון פתוחים אפילו יותר מ-22:00, תלוי עד כמה הם עמוסים ואיך מזג האוויר.\n\n\n### היכן נמצא שוק חג המולד הגדול ביותר בפראג?\nשוק חג המולד הגדול ביותר בפראג ממוקם ממש במרכז - בכיכר העיר העתיקה (Staroměstské náměstí). שוק זה הוא שוק חג המולד הגדול והידוע ביותר בפראג, והוא ממוקם בלב המרכז ההיסטורי של העיר.\n\nבשוק חג המולד הזה יש למעלה מ-100 דוכנים שמוכרים מגוון רחב של מוצרי עבודת יד צ'כיות מסורתיות, קישוטים ומזכרות, כמו גם אוכל ושתייה. תוכלו ליהנות מפינוקי חג המולד הצ'כיים המסורתיים כגון יין חם (svařák), יין דבש חם (medovina), וג'ינג'ר (perník) או ערמונים קלויים.\n\nבכיכר העיר העתיקה יש תמיד את עץ חג המולד הגדול ביותר בעיר ומתחת במה גדולה להופעות שכוללת מוזיקה, תיאטרון וריקודים מסורתיים.\n\n### אילו שוקי חג המולד בפראג הם הטובים ביותר?\nזו שאלה שקשה לענות עליה, כי זה באמת תלוי במה אתם מחפשים. השוק הגדול והקל ביותר לביקור הוא השוק בכיכר העיר העתיקה וכדיי ללכת לשם כל יום בערב לראות את העץ. במיוחד בלילה האווירה קסומה וזהו מקום מרכזי נהדר להתחיל לחקור ממנו את פראג.\n\nאבל אם אתם באמת רוצים לקנות משהו אחר ולהרגיש אווירת חג מולד אותנטית יותר ופחות עמוסה, כדי ללכת לשוק כיכר השלום או לשוקי האדוונט בג'יראק ולשווקי המלאכה של סוף השבוע - שוק הקדרות ושוק דיז'אן ב-Vystaviste (תערוכה ארמון, פראג 7 - ראה הערות שלי למטה).\n\nאם אתם רוצים לקנות אוכל טרי מהיום להיום, עוגות ולקנות קישוטים להכנת זר חג המולד וכו', כדיי תמיד לקפוץ לשוק חג המולד של אנדל, כי הוא מיועד למקומיים ולאו דווקא לתיירים (ומחירים שפויים).\n\n## רשימת כל שווקי חג המולד של פראג\n\n1. **כיכר העיר העתיקה**\n![תמונה של שוק הקריסמס בכיכר העיר הישנה - כל הזכויות שמורות למגדלנה מרסדן](https://kolha.top/images/hF0VpJK/Christmas-Market-at-Old-Town-Square-View-from-Prague.webp)\nזהו שוק חג המולד הגדול ביותר בפראג וזה שפתוח הכי הרבה זמן ובכל יום. יש הופעות חיות על הבמה המרכזית, אבל אפשר גם להסתובב בין הדוכנים ולצפות במלאכת יד מסורתית או באנשי מקצוע שיוצרים עיטורים ממתכת . יש ריח של ערמונים קלויים, שקדים ויין חם ושאר מאכלים חגיגיים.\n\nיש גם נקודת תצפית ותמונות מעוצבת שבה תוכלו לצלם תמונות נהדרות וגם לראות את השוק מלמעלה. זה ממש ליד עץ חג המולד, כדי שתוכל לצלם את הסלפי המושלם או את התמונה הקבוצתית.\n\n**📍 כיכר העיר העתיקה, פראג 1, תחנת הרכבת התחתית או החשמלית הקרובה ביותר - Staromestska\n⏰ 2 בדצמבר 2023 - 6 בינואר 2024, 10:00 - 22:00**\n\n\n2. **כיכר ואצלב**\n![תמונה של שוק הקריסמס בכיכר ואצלב - כל הזכויות שמורות למגדלנה מרסדן](https://kolha.top/images/f8Vb1kq/Gingerbread-stall-at-Christmas-Markets-View-from-Prague.webp)\nיש עוד שוק חג מולד גדול בחלק התחתון של כיכר ואצלב והדוכנים דומים מאוד כמו בכיכר העיר העתיקה (השווקים מנוהלים על ידי אותה חברה).\n\nהשנה, תמצאו כאן גם משטח החלקה על הקרח, זו הפעם הראשונה מאז ימי הביניים, כשהייתה כאן בריכה קפואה. ניתן לשכור מחליקים על הקרח ולוקרים מאובטחים מסופקים לשמירה על דברים, כך שניתן פשוט להיכנס ולהחליק על הקרח. משטח החלקה על הקרח פתוח כל יום עד מאוחר והכניסה היא 200 קרונות לשעתיים (בנוסף השכרת נעלי החלקה על הקרח היא 150 קרונות).\n**📍 קרוב למטרו Mustek – רכבת תחתית בקו B, תחנת החשמלית הקרובה מס'. 9, 5, הוא 'Vaclavske Namesti' באמצע הכיכר.**\n\n\n3. **חג המולד בכיכר ואצלב - ארגוני צדקה**\n![תמונה של שוק הקריסמס בכיכר ואצלב - ארגוני צדקה - כל הזכויות שמורות למגדלנה מרסדן](https://kolha.top/images/XYYR67J/Roasted-chestnuts-at-Christmas-market-View-from-Prague.webp)\nיש גם שוק חג מולד שני בכיכר והוא נמצא בחלק העליון של האזור, הוא קרוב לפסל הסוס של סנט ואצלב ולבניין המוזיאון.\n\nבשוק חג המולד הזה יש דוכנים המנוהלים על ידי ארגוני צדקה שונים, כך שתמצאו מגוון שונה של אומנות, אוכל ומתנות מאשר בשווקים אחרים. יש גם שפע של דוכני מזון הדומים לשווקים אחרים, כך שתוכלו לשתות שוקו חם או יין חם תוך כדי דפדוף בין הדוכנים.\n📍 **החלק העליון של כיכר ואצלב ההיסטורית, קרוב למוזיאון הלאומי, הרכבת התחתית הקרובה ביותר היא Muzeum ותחנת החשמלית 'Vaclavske Namesti' מס. 5,9**\n\n⏰ **2 בדצמבר - 23 בדצמבר 2023, 10:00 - 22:00**\n\n\n4. **שוק חג המולד בכיכר השלום**\n![תמונה של שוק הקריסמס בכיכר השלום - כל הזכויות שמורות למגדלנה מרסדן](https://kolha.top/images/8g6knMB/Christmas-Market-at-Peace-Square-View-from-Prague-1.webp)\nשוק חג המולד הזה הוא אחד המומלצים לביקור מכיוון שהוא מרגיש הרבה יותר אותנטי מהשוק הגדול בכיכר העיר העתיקה. בשוק ישנם יותר יצרנים מקומיים או קטנים עם מתנות איכותיות, ניפוח זכוכית מסורתי \nקישוטים ואוכל מקומי ואפוי.\n\n\tאני ממליצה לכם לבקר את דוכן חוות הלבנדר, שמוכר עוגיות לבנדר, שהם בהחלט אחת העוגיות הותר טעימות שתטעמו, אחת מהמאפיות המקומיות הטובות ביותר בשם \"הלחם שלנו\" שייצרה עוגיות חג מולד מסורתיות שתוכלו לנסות בנפרד או לקנות קופסה שלמה ומעוטרת ביד. עוגיות ג'ינג'ר. יש גם דוכן עם מחברות עם כריכת עור, ציפורים מגולפות מעץ צבעוניות  וחותכני עוגיות מסורתיות (כדי שתוכלו להכין עוגיות חג המולד שלכם בבית).\n\n\tהמחירים גם נורמליים - לא במחיר מופקע במיוחד, אבל מתאים לעבודה שנכנסת לכל המוצרים בעבודת יד. שווה לקנות שם מתנות או קישוטים לעץ הקריסמס שלכם\n\n**📍 Namesti Miru - מול כנסיית סנט לודמילה, תחנת הרכבת התחתית הקרובה ביותר 'Namesti Miru' או חשמלית מס. 4, 5, 10, 16, 22. שוק זה נמצא במרחק של כ-20 דקות ממרכז פראג בחשמלית או מתחת לאדמה.\n⏰ 25 בנובמבר - 24 בדצמבר 2023 - 10:00 - 20:00-22:00 (תלוי בעומס ובמזג האוויר)**\n\n\n5. **שוק חג המולד בכיכר הרפובליקה**\n![תמונה של שוק הקריסמס בכיכר הרפובליקה - כל הזכויות שמורות למגדלנה מרסדן](https://kolha.top/images/XVy3NHt/Christmas-Gingerbreads-at-market-View-from-Prague.webp)\nיש שני שווקים נפרדים בכיכר הרפובליקה. הגלוי יותר נמצא ממש מחוץ למרכז הקניות \"פלדיום\" (הבניין הוורוד הגדול) וכולל הרבה דוכני אוכל מסורתי וקישוטי חג המולד.\nהשוק השני נמצא מול בניין \"סלניס, במרחק של כמה דקות הליכה. שוק זה כולל עוד דוכני בגדי חורף, לחמניות זנגביל מסורתיות וממתקים, מתנות בעבודת יד ויין חם. נחמד ללכת משוק אחד למשנהו ואז להמשיך למרכז פראג, שנמצא רק כרבע שעה הליכה.\n\n**📍 Namesti Republiky, מול מרכז הקניות Palladium, תחנת רכבת תחתית 'Namesti Republiky' על קו B. תחנות חשמלית 'Namesti Republiky', no 5, 6, 8, 15, 19, 26,\n⏰ 25 בנובמבר - 30 בדצמבר 2023, 10:00 - 20:00 (בערך)**\n\n","slug":"travel/prauge/chirstmas-markets","published":1,"updated":"2024-01-19T17:52:31.431Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygy1001io4vx42g7f2dr","content":"<p><strong>זהו חלק מהכתבה המלאה על <a href=\"https://kolha.top/travel/prauge/christmas\">כריסמס בפראג</a></strong></p>\n<h3 id=\"זמני-הפעילות-של-השווקים\"><a href=\"#זמני-הפעילות-של-השווקים\" class=\"headerlink\" title=\"זמני הפעילות של השווקים\"></a>זמני הפעילות של השווקים</h3><p>השנה, שוקי חג המולד העיקריים פועלים בין ה-2 בדצמבר 2023 ל-6 בינואר 2024, מלבד שווקים ספורים שנסגרים ב-24 בדצמבר 2023. כמה שווקים (מפורט בכל אחד מהשווקים) נפתחים רק ב-25 בנובמבר 2023 ליום ראשון הראשון של החג.</p>\n<p>שוקי חג המולד פתוחים כל יום, כולל ערב חג המולד, חג המולד (יום חג המולד הראשון - חג לאומי) ויום סטפן הקדוש (יום חג המולד השני - חג לאומי). הם פתוחים גם בערב השנה החדשה וביום השנה החדשה (שהוא חג לאומי ויום חופש).<br>השווקים פתוחים מ-10 בבוקר עד 22:00 בלילה והכניסה לשווקים חופשית.<br>חלק מדוכני המזון פתוחים אפילו יותר מ-22:00, תלוי עד כמה הם עמוסים ואיך מזג האוויר.</p>\n<h3 id=\"היכן-נמצא-שוק-חג-המולד-הגדול-ביותר-בפראג\"><a href=\"#היכן-נמצא-שוק-חג-המולד-הגדול-ביותר-בפראג\" class=\"headerlink\" title=\"היכן נמצא שוק חג המולד הגדול ביותר בפראג?\"></a>היכן נמצא שוק חג המולד הגדול ביותר בפראג?</h3><p>שוק חג המולד הגדול ביותר בפראג ממוקם ממש במרכז - בכיכר העיר העתיקה (Staroměstské náměstí). שוק זה הוא שוק חג המולד הגדול והידוע ביותר בפראג, והוא ממוקם בלב המרכז ההיסטורי של העיר.</p>\n<p>בשוק חג המולד הזה יש למעלה מ-100 דוכנים שמוכרים מגוון רחב של מוצרי עבודת יד צ&#39;כיות מסורתיות, קישוטים ומזכרות, כמו גם אוכל ושתייה. תוכלו ליהנות מפינוקי חג המולד הצ&#39;כיים המסורתיים כגון יין חם (svařák), יין דבש חם (medovina), וג&#39;ינג&#39;ר (perník) או ערמונים קלויים.</p>\n<p>בכיכר העיר העתיקה יש תמיד את עץ חג המולד הגדול ביותר בעיר ומתחת במה גדולה להופעות שכוללת מוזיקה, תיאטרון וריקודים מסורתיים.</p>\n<h3 id=\"אילו-שוקי-חג-המולד-בפראג-הם-הטובים-ביותר\"><a href=\"#אילו-שוקי-חג-המולד-בפראג-הם-הטובים-ביותר\" class=\"headerlink\" title=\"אילו שוקי חג המולד בפראג הם הטובים ביותר?\"></a>אילו שוקי חג המולד בפראג הם הטובים ביותר?</h3><p>זו שאלה שקשה לענות עליה, כי זה באמת תלוי במה אתם מחפשים. השוק הגדול והקל ביותר לביקור הוא השוק בכיכר העיר העתיקה וכדיי ללכת לשם כל יום בערב לראות את העץ. במיוחד בלילה האווירה קסומה וזהו מקום מרכזי נהדר להתחיל לחקור ממנו את פראג.</p>\n<p>אבל אם אתם באמת רוצים לקנות משהו אחר ולהרגיש אווירת חג מולד אותנטית יותר ופחות עמוסה, כדי ללכת לשוק כיכר השלום או לשוקי האדוונט בג&#39;יראק ולשווקי המלאכה של סוף השבוע - שוק הקדרות ושוק דיז&#39;אן ב-Vystaviste (תערוכה ארמון, פראג 7 - ראה הערות שלי למטה).</p>\n<p>אם אתם רוצים לקנות אוכל טרי מהיום להיום, עוגות ולקנות קישוטים להכנת זר חג המולד וכו&#39;, כדיי תמיד לקפוץ לשוק חג המולד של אנדל, כי הוא מיועד למקומיים ולאו דווקא לתיירים (ומחירים שפויים).</p>\n<h2 id=\"רשימת-כל-שווקי-חג-המולד-של-פראג\"><a href=\"#רשימת-כל-שווקי-חג-המולד-של-פראג\" class=\"headerlink\" title=\"רשימת כל שווקי חג המולד של פראג\"></a>רשימת כל שווקי חג המולד של פראג</h2><ol>\n<li><strong>כיכר העיר העתיקה</strong><br><img src=\"https://kolha.top/images/hF0VpJK/Christmas-Market-at-Old-Town-Square-View-from-Prague.webp\" alt=\"תמונה של שוק הקריסמס בכיכר העיר הישנה - כל הזכויות שמורות למגדלנה מרסדן\"><br>זהו שוק חג המולד הגדול ביותר בפראג וזה שפתוח הכי הרבה זמן ובכל יום. יש הופעות חיות על הבמה המרכזית, אבל אפשר גם להסתובב בין הדוכנים ולצפות במלאכת יד מסורתית או באנשי מקצוע שיוצרים עיטורים ממתכת . יש ריח של ערמונים קלויים, שקדים ויין חם ושאר מאכלים חגיגיים.</li>\n</ol>\n<p>יש גם נקודת תצפית ותמונות מעוצבת שבה תוכלו לצלם תמונות נהדרות וגם לראות את השוק מלמעלה. זה ממש ליד עץ חג המולד, כדי שתוכל לצלם את הסלפי המושלם או את התמונה הקבוצתית.</p>\n<p><strong>📍 כיכר העיר העתיקה, פראג 1, תחנת הרכבת התחתית או החשמלית הקרובה ביותר - Staromestska<br>⏰ 2 בדצמבר 2023 - 6 בינואר 2024, 10:00 - 22:00</strong></p>\n<ol start=\"2\">\n<li><strong>כיכר ואצלב</strong><br><img src=\"https://kolha.top/images/f8Vb1kq/Gingerbread-stall-at-Christmas-Markets-View-from-Prague.webp\" alt=\"תמונה של שוק הקריסמס בכיכר ואצלב - כל הזכויות שמורות למגדלנה מרסדן\"><br>יש עוד שוק חג מולד גדול בחלק התחתון של כיכר ואצלב והדוכנים דומים מאוד כמו בכיכר העיר העתיקה (השווקים מנוהלים על ידי אותה חברה).</li>\n</ol>\n<p>השנה, תמצאו כאן גם משטח החלקה על הקרח, זו הפעם הראשונה מאז ימי הביניים, כשהייתה כאן בריכה קפואה. ניתן לשכור מחליקים על הקרח ולוקרים מאובטחים מסופקים לשמירה על דברים, כך שניתן פשוט להיכנס ולהחליק על הקרח. משטח החלקה על הקרח פתוח כל יום עד מאוחר והכניסה היא 200 קרונות לשעתיים (בנוסף השכרת נעלי החלקה על הקרח היא 150 קרונות).<br><strong>📍 קרוב למטרו Mustek – רכבת תחתית בקו B, תחנת החשמלית הקרובה מס&#39;. 9, 5, הוא &#39;Vaclavske Namesti&#39; באמצע הכיכר.</strong></p>\n<ol start=\"3\">\n<li><strong>חג המולד בכיכר ואצלב - ארגוני צדקה</strong><br><img src=\"https://kolha.top/images/XYYR67J/Roasted-chestnuts-at-Christmas-market-View-from-Prague.webp\" alt=\"תמונה של שוק הקריסמס בכיכר ואצלב - ארגוני צדקה - כל הזכויות שמורות למגדלנה מרסדן\"><br>יש גם שוק חג מולד שני בכיכר והוא נמצא בחלק העליון של האזור, הוא קרוב לפסל הסוס של סנט ואצלב ולבניין המוזיאון.</li>\n</ol>\n<p>בשוק חג המולד הזה יש דוכנים המנוהלים על ידי ארגוני צדקה שונים, כך שתמצאו מגוון שונה של אומנות, אוכל ומתנות מאשר בשווקים אחרים. יש גם שפע של דוכני מזון הדומים לשווקים אחרים, כך שתוכלו לשתות שוקו חם או יין חם תוך כדי דפדוף בין הדוכנים.<br>📍 <strong>החלק העליון של כיכר ואצלב ההיסטורית, קרוב למוזיאון הלאומי, הרכבת התחתית הקרובה ביותר היא Muzeum ותחנת החשמלית &#39;Vaclavske Namesti&#39; מס. 5,9</strong></p>\n<p>⏰ <strong>2 בדצמבר - 23 בדצמבר 2023, 10:00 - 22:00</strong></p>\n<ol start=\"4\">\n<li><p><strong>שוק חג המולד בכיכר השלום</strong><br><img src=\"https://kolha.top/images/8g6knMB/Christmas-Market-at-Peace-Square-View-from-Prague-1.webp\" alt=\"תמונה של שוק הקריסמס בכיכר השלום - כל הזכויות שמורות למגדלנה מרסדן\"><br>שוק חג המולד הזה הוא אחד המומלצים לביקור מכיוון שהוא מרגיש הרבה יותר אותנטי מהשוק הגדול בכיכר העיר העתיקה. בשוק ישנם יותר יצרנים מקומיים או קטנים עם מתנות איכותיות, ניפוח זכוכית מסורתי<br>קישוטים ואוכל מקומי ואפוי.</p>\n<p> אני ממליצה לכם לבקר את דוכן חוות הלבנדר, שמוכר עוגיות לבנדר, שהם בהחלט אחת העוגיות הותר טעימות שתטעמו, אחת מהמאפיות המקומיות הטובות ביותר בשם &quot;הלחם שלנו&quot; שייצרה עוגיות חג מולד מסורתיות שתוכלו לנסות בנפרד או לקנות קופסה שלמה ומעוטרת ביד. עוגיות ג&#39;ינג&#39;ר. יש גם דוכן עם מחברות עם כריכת עור, ציפורים מגולפות מעץ צבעוניות  וחותכני עוגיות מסורתיות (כדי שתוכלו להכין עוגיות חג המולד שלכם בבית).</p>\n<p> המחירים גם נורמליים - לא במחיר מופקע במיוחד, אבל מתאים לעבודה שנכנסת לכל המוצרים בעבודת יד. שווה לקנות שם מתנות או קישוטים לעץ הקריסמס שלכם</p>\n</li>\n</ol>\n<p><strong>📍 Namesti Miru - מול כנסיית סנט לודמילה, תחנת הרכבת התחתית הקרובה ביותר &#39;Namesti Miru&#39; או חשמלית מס. 4, 5, 10, 16, 22. שוק זה נמצא במרחק של כ-20 דקות ממרכז פראג בחשמלית או מתחת לאדמה.<br>⏰ 25 בנובמבר - 24 בדצמבר 2023 - 10:00 - 20:00-22:00 (תלוי בעומס ובמזג האוויר)</strong></p>\n<ol start=\"5\">\n<li><strong>שוק חג המולד בכיכר הרפובליקה</strong><br><img src=\"https://kolha.top/images/XVy3NHt/Christmas-Gingerbreads-at-market-View-from-Prague.webp\" alt=\"תמונה של שוק הקריסמס בכיכר הרפובליקה - כל הזכויות שמורות למגדלנה מרסדן\"><br>יש שני שווקים נפרדים בכיכר הרפובליקה. הגלוי יותר נמצא ממש מחוץ למרכז הקניות &quot;פלדיום&quot; (הבניין הוורוד הגדול) וכולל הרבה דוכני אוכל מסורתי וקישוטי חג המולד.<br>השוק השני נמצא מול בניין &quot;סלניס, במרחק של כמה דקות הליכה. שוק זה כולל עוד דוכני בגדי חורף, לחמניות זנגביל מסורתיות וממתקים, מתנות בעבודת יד ויין חם. נחמד ללכת משוק אחד למשנהו ואז להמשיך למרכז פראג, שנמצא רק כרבע שעה הליכה.</li>\n</ol>\n<p><strong>📍 Namesti Republiky, מול מרכז הקניות Palladium, תחנת רכבת תחתית &#39;Namesti Republiky&#39; על קו B. תחנות חשמלית &#39;Namesti Republiky&#39;, no 5, 6, 8, 15, 19, 26,<br>⏰ 25 בנובמבר - 30 בדצמבר 2023, 10:00 - 20:00 (בערך)</strong></p>\n","excerpt":"","more":"<p><strong>זהו חלק מהכתבה המלאה על <a href=\"https://kolha.top/travel/prauge/christmas\">כריסמס בפראג</a></strong></p>\n<h3 id=\"זמני-הפעילות-של-השווקים\"><a href=\"#זמני-הפעילות-של-השווקים\" class=\"headerlink\" title=\"זמני הפעילות של השווקים\"></a>זמני הפעילות של השווקים</h3><p>השנה, שוקי חג המולד העיקריים פועלים בין ה-2 בדצמבר 2023 ל-6 בינואר 2024, מלבד שווקים ספורים שנסגרים ב-24 בדצמבר 2023. כמה שווקים (מפורט בכל אחד מהשווקים) נפתחים רק ב-25 בנובמבר 2023 ליום ראשון הראשון של החג.</p>\n<p>שוקי חג המולד פתוחים כל יום, כולל ערב חג המולד, חג המולד (יום חג המולד הראשון - חג לאומי) ויום סטפן הקדוש (יום חג המולד השני - חג לאומי). הם פתוחים גם בערב השנה החדשה וביום השנה החדשה (שהוא חג לאומי ויום חופש).<br>השווקים פתוחים מ-10 בבוקר עד 22:00 בלילה והכניסה לשווקים חופשית.<br>חלק מדוכני המזון פתוחים אפילו יותר מ-22:00, תלוי עד כמה הם עמוסים ואיך מזג האוויר.</p>\n<h3 id=\"היכן-נמצא-שוק-חג-המולד-הגדול-ביותר-בפראג\"><a href=\"#היכן-נמצא-שוק-חג-המולד-הגדול-ביותר-בפראג\" class=\"headerlink\" title=\"היכן נמצא שוק חג המולד הגדול ביותר בפראג?\"></a>היכן נמצא שוק חג המולד הגדול ביותר בפראג?</h3><p>שוק חג המולד הגדול ביותר בפראג ממוקם ממש במרכז - בכיכר העיר העתיקה (Staroměstské náměstí). שוק זה הוא שוק חג המולד הגדול והידוע ביותר בפראג, והוא ממוקם בלב המרכז ההיסטורי של העיר.</p>\n<p>בשוק חג המולד הזה יש למעלה מ-100 דוכנים שמוכרים מגוון רחב של מוצרי עבודת יד צ&#39;כיות מסורתיות, קישוטים ומזכרות, כמו גם אוכל ושתייה. תוכלו ליהנות מפינוקי חג המולד הצ&#39;כיים המסורתיים כגון יין חם (svařák), יין דבש חם (medovina), וג&#39;ינג&#39;ר (perník) או ערמונים קלויים.</p>\n<p>בכיכר העיר העתיקה יש תמיד את עץ חג המולד הגדול ביותר בעיר ומתחת במה גדולה להופעות שכוללת מוזיקה, תיאטרון וריקודים מסורתיים.</p>\n<h3 id=\"אילו-שוקי-חג-המולד-בפראג-הם-הטובים-ביותר\"><a href=\"#אילו-שוקי-חג-המולד-בפראג-הם-הטובים-ביותר\" class=\"headerlink\" title=\"אילו שוקי חג המולד בפראג הם הטובים ביותר?\"></a>אילו שוקי חג המולד בפראג הם הטובים ביותר?</h3><p>זו שאלה שקשה לענות עליה, כי זה באמת תלוי במה אתם מחפשים. השוק הגדול והקל ביותר לביקור הוא השוק בכיכר העיר העתיקה וכדיי ללכת לשם כל יום בערב לראות את העץ. במיוחד בלילה האווירה קסומה וזהו מקום מרכזי נהדר להתחיל לחקור ממנו את פראג.</p>\n<p>אבל אם אתם באמת רוצים לקנות משהו אחר ולהרגיש אווירת חג מולד אותנטית יותר ופחות עמוסה, כדי ללכת לשוק כיכר השלום או לשוקי האדוונט בג&#39;יראק ולשווקי המלאכה של סוף השבוע - שוק הקדרות ושוק דיז&#39;אן ב-Vystaviste (תערוכה ארמון, פראג 7 - ראה הערות שלי למטה).</p>\n<p>אם אתם רוצים לקנות אוכל טרי מהיום להיום, עוגות ולקנות קישוטים להכנת זר חג המולד וכו&#39;, כדיי תמיד לקפוץ לשוק חג המולד של אנדל, כי הוא מיועד למקומיים ולאו דווקא לתיירים (ומחירים שפויים).</p>\n<h2 id=\"רשימת-כל-שווקי-חג-המולד-של-פראג\"><a href=\"#רשימת-כל-שווקי-חג-המולד-של-פראג\" class=\"headerlink\" title=\"רשימת כל שווקי חג המולד של פראג\"></a>רשימת כל שווקי חג המולד של פראג</h2><ol>\n<li><strong>כיכר העיר העתיקה</strong><br><img src=\"https://kolha.top/images/hF0VpJK/Christmas-Market-at-Old-Town-Square-View-from-Prague.webp\" alt=\"תמונה של שוק הקריסמס בכיכר העיר הישנה - כל הזכויות שמורות למגדלנה מרסדן\"><br>זהו שוק חג המולד הגדול ביותר בפראג וזה שפתוח הכי הרבה זמן ובכל יום. יש הופעות חיות על הבמה המרכזית, אבל אפשר גם להסתובב בין הדוכנים ולצפות במלאכת יד מסורתית או באנשי מקצוע שיוצרים עיטורים ממתכת . יש ריח של ערמונים קלויים, שקדים ויין חם ושאר מאכלים חגיגיים.</li>\n</ol>\n<p>יש גם נקודת תצפית ותמונות מעוצבת שבה תוכלו לצלם תמונות נהדרות וגם לראות את השוק מלמעלה. זה ממש ליד עץ חג המולד, כדי שתוכל לצלם את הסלפי המושלם או את התמונה הקבוצתית.</p>\n<p><strong>📍 כיכר העיר העתיקה, פראג 1, תחנת הרכבת התחתית או החשמלית הקרובה ביותר - Staromestska<br>⏰ 2 בדצמבר 2023 - 6 בינואר 2024, 10:00 - 22:00</strong></p>\n<ol start=\"2\">\n<li><strong>כיכר ואצלב</strong><br><img src=\"https://kolha.top/images/f8Vb1kq/Gingerbread-stall-at-Christmas-Markets-View-from-Prague.webp\" alt=\"תמונה של שוק הקריסמס בכיכר ואצלב - כל הזכויות שמורות למגדלנה מרסדן\"><br>יש עוד שוק חג מולד גדול בחלק התחתון של כיכר ואצלב והדוכנים דומים מאוד כמו בכיכר העיר העתיקה (השווקים מנוהלים על ידי אותה חברה).</li>\n</ol>\n<p>השנה, תמצאו כאן גם משטח החלקה על הקרח, זו הפעם הראשונה מאז ימי הביניים, כשהייתה כאן בריכה קפואה. ניתן לשכור מחליקים על הקרח ולוקרים מאובטחים מסופקים לשמירה על דברים, כך שניתן פשוט להיכנס ולהחליק על הקרח. משטח החלקה על הקרח פתוח כל יום עד מאוחר והכניסה היא 200 קרונות לשעתיים (בנוסף השכרת נעלי החלקה על הקרח היא 150 קרונות).<br><strong>📍 קרוב למטרו Mustek – רכבת תחתית בקו B, תחנת החשמלית הקרובה מס&#39;. 9, 5, הוא &#39;Vaclavske Namesti&#39; באמצע הכיכר.</strong></p>\n<ol start=\"3\">\n<li><strong>חג המולד בכיכר ואצלב - ארגוני צדקה</strong><br><img src=\"https://kolha.top/images/XYYR67J/Roasted-chestnuts-at-Christmas-market-View-from-Prague.webp\" alt=\"תמונה של שוק הקריסמס בכיכר ואצלב - ארגוני צדקה - כל הזכויות שמורות למגדלנה מרסדן\"><br>יש גם שוק חג מולד שני בכיכר והוא נמצא בחלק העליון של האזור, הוא קרוב לפסל הסוס של סנט ואצלב ולבניין המוזיאון.</li>\n</ol>\n<p>בשוק חג המולד הזה יש דוכנים המנוהלים על ידי ארגוני צדקה שונים, כך שתמצאו מגוון שונה של אומנות, אוכל ומתנות מאשר בשווקים אחרים. יש גם שפע של דוכני מזון הדומים לשווקים אחרים, כך שתוכלו לשתות שוקו חם או יין חם תוך כדי דפדוף בין הדוכנים.<br>📍 <strong>החלק העליון של כיכר ואצלב ההיסטורית, קרוב למוזיאון הלאומי, הרכבת התחתית הקרובה ביותר היא Muzeum ותחנת החשמלית &#39;Vaclavske Namesti&#39; מס. 5,9</strong></p>\n<p>⏰ <strong>2 בדצמבר - 23 בדצמבר 2023, 10:00 - 22:00</strong></p>\n<ol start=\"4\">\n<li><p><strong>שוק חג המולד בכיכר השלום</strong><br><img src=\"https://kolha.top/images/8g6knMB/Christmas-Market-at-Peace-Square-View-from-Prague-1.webp\" alt=\"תמונה של שוק הקריסמס בכיכר השלום - כל הזכויות שמורות למגדלנה מרסדן\"><br>שוק חג המולד הזה הוא אחד המומלצים לביקור מכיוון שהוא מרגיש הרבה יותר אותנטי מהשוק הגדול בכיכר העיר העתיקה. בשוק ישנם יותר יצרנים מקומיים או קטנים עם מתנות איכותיות, ניפוח זכוכית מסורתי<br>קישוטים ואוכל מקומי ואפוי.</p>\n<p> אני ממליצה לכם לבקר את דוכן חוות הלבנדר, שמוכר עוגיות לבנדר, שהם בהחלט אחת העוגיות הותר טעימות שתטעמו, אחת מהמאפיות המקומיות הטובות ביותר בשם &quot;הלחם שלנו&quot; שייצרה עוגיות חג מולד מסורתיות שתוכלו לנסות בנפרד או לקנות קופסה שלמה ומעוטרת ביד. עוגיות ג&#39;ינג&#39;ר. יש גם דוכן עם מחברות עם כריכת עור, ציפורים מגולפות מעץ צבעוניות  וחותכני עוגיות מסורתיות (כדי שתוכלו להכין עוגיות חג המולד שלכם בבית).</p>\n<p> המחירים גם נורמליים - לא במחיר מופקע במיוחד, אבל מתאים לעבודה שנכנסת לכל המוצרים בעבודת יד. שווה לקנות שם מתנות או קישוטים לעץ הקריסמס שלכם</p>\n</li>\n</ol>\n<p><strong>📍 Namesti Miru - מול כנסיית סנט לודמילה, תחנת הרכבת התחתית הקרובה ביותר &#39;Namesti Miru&#39; או חשמלית מס. 4, 5, 10, 16, 22. שוק זה נמצא במרחק של כ-20 דקות ממרכז פראג בחשמלית או מתחת לאדמה.<br>⏰ 25 בנובמבר - 24 בדצמבר 2023 - 10:00 - 20:00-22:00 (תלוי בעומס ובמזג האוויר)</strong></p>\n<ol start=\"5\">\n<li><strong>שוק חג המולד בכיכר הרפובליקה</strong><br><img src=\"https://kolha.top/images/XVy3NHt/Christmas-Gingerbreads-at-market-View-from-Prague.webp\" alt=\"תמונה של שוק הקריסמס בכיכר הרפובליקה - כל הזכויות שמורות למגדלנה מרסדן\"><br>יש שני שווקים נפרדים בכיכר הרפובליקה. הגלוי יותר נמצא ממש מחוץ למרכז הקניות &quot;פלדיום&quot; (הבניין הוורוד הגדול) וכולל הרבה דוכני אוכל מסורתי וקישוטי חג המולד.<br>השוק השני נמצא מול בניין &quot;סלניס, במרחק של כמה דקות הליכה. שוק זה כולל עוד דוכני בגדי חורף, לחמניות זנגביל מסורתיות וממתקים, מתנות בעבודת יד ויין חם. נחמד ללכת משוק אחד למשנהו ואז להמשיך למרכז פראג, שנמצא רק כרבע שעה הליכה.</li>\n</ol>\n<p><strong>📍 Namesti Republiky, מול מרכז הקניות Palladium, תחנת רכבת תחתית &#39;Namesti Republiky&#39; על קו B. תחנות חשמלית &#39;Namesti Republiky&#39;, no 5, 6, 8, 15, 19, 26,<br>⏰ 25 בנובמבר - 30 בדצמבר 2023, 10:00 - 20:00 (בערך)</strong></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"https://kolha.top/images/hF0VpJK/Christmas-Market-at-Old-Town-Square-View-from-Prague.webp","popularPost_tmp_gaData":{"updated":"Fri Jan 19 2024 19:52:31 GMT+0200 (Israel Standard Time)","title":"שווקי חג המולג בפראג 2023","path":"travel/prauge/chirstmas-markets/","eyeCatchImage":"https://kolha.top/images/hF0VpJK/Christmas-Market-at-Old-Town-Square-View-from-Prague.webp","excerpt":"בפראג ישנם מלא שווקי חג מולד שווים, הנה רשימה מפורטת על חמישה שווקים שווים לקריסמס 2023-24","date":{"_isAMomentObject":true,"_i":"2023-12-20T12:00:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2023-12-20T12:00:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"טיולים > פראג","tags":["כריסמס","טיולים","אוסף אטרקציות","פראג","שווקים"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"כריסמס מושלם בפראג","description":"חודש דצמבר המוכר גם כחודש הכריסמס הוא אחד מפרקי הזמן הקסומים ביותר לביקור בבירה הצכית. כל העיר מלאה באווירה חגיגית ושמחה המלווה בקשת רחבה של אטרקציות[...] הכנו לכם רשימה של המקומות הכי שווים לבקר בכריסמס הזה.","date":"2023-12-20T10:00:00.000Z","cover":"https://kolha.top/images/covers/uk9uV5M.jpg","_content":"\nפראג, העיר הזוהרת של צ'כיה, היא יעד מושלם לקריסמס (חג המולד). במהלך הקריסמס, העיר מתמלאה באורות חגיגיים, שווקים מסורתיים, ואווירה חגיגית. הנה מדריך לכל הדברים השווים שיש בקריסמס\n\n## אטרקציות לחג המולד\n -  **שוקי החג המולד**:\n![שווקי חג המולג 2023](https://kolha.top/images/covers/ho74yFK.jpg)\n פראג מארחת את כמה מהשווקים הכי יפים באירופה. השווקים מתמלאים בדוכנים שמוכרים מאכלים מסורתיים, משקאות חמים, ומוצרי יד מקומיים. ניתן למצוא שווקים ברחבי העיר, כולל בכיכר העיר העתיקה, כיכר ואצלב, כיכר הרפובליקה, ועוד. לעוד מידע על השווקים הכנתי לכם רשימה של [שווקי חג המולד בפראג 2023](https://kolha.top/travel/prauge/chirstmas-markets)\n - **גן החיות בפראג** (Prague Zoo):\n\t ![Czech Wikipedia user Packa, CC BY-SA 2.5 <https://creativecommons.org/licenses/by-sa/2.5>, via Wikimedia Commons](https://upload.wikimedia.org/wikipedia/commons/1/1e/Big_mammals_pavilion2%2C_Zoo_Prague.jpg)\n\t  ענקי בטירוף ומכיל כ5000 חיות שונות (650+ מינים שונים). אפשר להיות בגן כמה שעות טובות (6-5) בלי להתעכב יותר מדי. בגן עצמו יש מסעדה יחסית זולה וגם מכונות אוכל אוטומטיות זולות.\n📍 U **Trojského zámku 3/120, Praha 7** - ניתן להגיע עם תחב\"צ\n\n- **תערוכת חג המולד בגן הבוטני** (1-31 בדצמבר 2023)\nזהו אחד המקומות הטובים לחוות אווירת חג מולד צ'כית מסורתית אמיתית. בכל שנה, הגן הבוטני בפראג 2 מציג תערוכת חג המולד המתמקדת באלמנטים שונים של המסורות הצ'כיות סביב הזמנים החגיגיים. יש גם דוכן קטן עם קישוטים בעבודת יד, מגזינים לגינון וספרים.\n\nאם אתם מחפשים תרופת נגד השווקים המבריקים   והרועשים של חג המולד, המקום הזה יחזיר אתכם לזמן שבו מסורות חג המולד היו חלק מחיי היומיום של אנשים. הגן עצמו לא מיועד לתיירים, אז רוב השלטים בצ'כית, אבל לא משהו שגוגל טרנסלייט לא יכול לפתור\n\nהתערוכה היא חממה אחת גדולה, אז אפשר לשרוף שם שעה טובה. אפשר גם לטייל בגן ובחנות שמסביב לחממה לפני שתחזרו למרכז פראג. שירותים (בתשלום) זמינים (בניין צדדי כשנכנסים מתחנת החשמלית).\n\n**📍 הגן הבוטני, Na Slupi 16, פראג 2 – תחנת חשמלית 2, 14, 18, 24 Botanicka Zahrada\n⏰ 1-31 בדצמבר 2023, מדי יום (שני עד ראשון), 10:00 - 15:00\n🎫 100 CZK מבוגרים, 50 CZK ילדים, סטודנטים, אזרחים ותיקים, 250 CZK כרטיס משפחתי, ילדים מתחת לגיל 5 - חינם (במזומן בלבד, אין אפשרות לקנות דרך אתר)**\n- **קונצרטים בנושא הקריסמס**:\n, אתם יכולים למצוא הרבה קונצרטים בנושא חג המולד בכנסיות שונות במרכז פראג, כולל סנט ניקולאס, סנט סלבטור, סנט מרטין בקיר, קלמנטינום או בית הכנסת הספרדי. אם אתם רוצים לנסות משהו מאוד מסורתי (וצ’כי) תלכו למסה של חג המולד של F. Ryba, שהיה מורה למוזיקה וההופעה הזו הייתה יצירת המופת שלו. 📍 סנט ניקולאס, סנט סלבטור. כנסיית סנט מרטין ועוד ⏰ תלוי בהזמנה\n 💷 המחירים משתנים בהתאם למקום - מ-350 קרונות עד ל900 קרונות לכרטיסים הטובים ביותר\n\n## מסעדות\n### מסעדות כשרות\n(כל המידע נלקח מהמאמר שלנו על [מסעדות כשרות בפראג](https://kolha.top/travel/prauge/kosher-food))\n - **מסעדת שלנו** (Shelanu Dairy Restaurant/Shelanu pizzeria):\n\t![תמונה של המסעדה](https://chabadprague.cz/wp-content/uploads/2018/11/Shelanu-Pizzerie-Prague-3.jpg)\n\t פיצריית \"שלנו\" מציעה מבחר פיצות טעימות ומגוון מאכלי חלב ופרווה. פיצריית \"שלנו\" ממוקמת בלב הרובע היהודי, פסיעות ספורות מבית הכנסת של המהר\"ל.  \nפיצריית \"שלנו\" מספקת שירות משלוחים למשרדכם/מלונכם.  \n\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 11:00**\n\tיום שישי: **15:00 - 11:00**\n\t📍 Břehová 208/8, 110 00 Josefov, Czechia\n\t📧 kosher@chabadprague.cz\n\n -   **דיניץ** (Dinitz):\n\t![דיניץ](https://th.bing.com/th/id/OIP.MKPEb8oHif3B67NREVkR9gHaFj?rs=1&pid=ImgDetMain)\n\tהמסעדה הכשרה דיניץ בלב העיר העתיקה של פראג נוסדה בשנת 2008. המסעדה מציעה מבחר מגוון של מנות בשר וירקות. התפריט מבוסס על המנות הפופולריות ביותר של המטבח הישראלי, כולל סלטים ים תיכוניים, שיפודי בשר על האש וסטייקים עסיסיים. ניתן להזמין ארוחות שישי ושבת. הודות לארוחת הערב החגיגית של שבת שישי ולתפריט הצהריים של שבת, תוכלו ליהנות מהשבת כמו שהיא צריכה להיות, גם בדרכים. המסעדה מחזיקה בתעודת כשרות למהדרין ומפוקחת על ידי הרבנות הראשית של צ'כיה עד היום.\nהמסעדה ממוקמת ליד הבית הכנסת הספרדי, שנמצא רק צעדים מהכיכר העתיקה של פראג והגשר הרומנטי של צ’ארלס.\n\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 11:30**\n\tיום שישי: **15:00 - 11:30**\n\t📍 Bilkova 12 11100 Prague\n\t📞 +420 222 244 000\n\t📧 info@dinitz.cz\n\n -  **יו מילו** (U-Milo Kosher Italian dairy restaurant):\n\t![U-Milo](https://th.bing.com/th/id/OIP.GqqMNLComlSCE5tKl4_eigHaEK?rs=1&pid=ImgDetMain)\n יו מילו הוא מסעדה איטלקית כשרה חדשה שממוקמת ברחוב U Milosrdnych 4, בלב הרובע היהודי של פראג, ממש ליד מרכז חב\"ד. יו מילו הוא מסעדה צמחונית כשרה בפראג, תחת הפיקוח החמור של חב\"ד.\n\tהמסעדה מגישה מנות מהמסורת האיטלקית מוגשות עם ריחות וטעמים של המטבח הים-תיכוני, משלבות טעמים מערביים ומזרחיים. התפריט מגוון כדי למרות את כל החך; מסלטים ופסטות, למנות מבוססות דגים ומגוון של פיצות טעימות. מגוון רחב של יינות וקוקטיילים מלווים את המנות השונות ו, כמובן, לסיום, קינוחים שנוצרו במיוחד על ידי השף. יו מילו מציעה גם קייטרינג, כמו גם שירות משלוחים למשרד שלך או למלון.\n\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 8:30**\n\tיום שישי: **15:30 - 8:30**\n\tמוצאי שבת: **חצי שעה אחרי צאת השבת עד 1:00.**\n\t📍 U Milosrdných 848/4 110 00 Staré Město, Czechia\n\t📧 kosher@chabadprague.cz\n - **גריל חב\"ד** (The Chabad Grill):\n![The chabad grill image](https://machertours.com/wp-content/uploads/chabad-grill-3.jpg)\n\t מסעדת הגריל הינה מסעדה אלגנטית, איכותית וכשרה בז'אנר ישראלי, הממוקמת בלב הרובע היהודי.  \nהמסעדה מציעה תפריט עשיר ומגוון, המנות מתבססות על מרכיבים טריים ואיכותיים, המשולבים בבישול עילי: בשר על הגריל, סטייק אמריקאי, דגים, סלטים טריים ומנות פסטה נפלאות. לצד כל זה מוגשות מבחר תוספות בטעמים עשירים.  \nבמקום אף תהנו מעוגות, קינוחים מעולים וגולת הכותרת - הקיורטוש הכשר היחיד בפראג.  \nהאווירה במקום רגועה ושלווה ומלווה ביחס ביתי, חם ואוהב, המבטיח לכם חוויה של טעמים וניחוחות של אוכל יהודי.\n\t**שעות פתיחה:**\n\t\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 13:00**\n\tיום שישי: **15:00 - 11:00**\n\tשבת ומוצ\"ש: **סגור**\n\t**📍 U Milosrdných 849/6, 110 00 Staré Město, Czechia\n\t📧 kosher@chabadprague.cz**\n### לא כשרות\n - **מסעדות קינג סולומון במחוז החמישי** (5th District Restaurant & Café by King Solomon):\n\t![מסעדת המלך סולומון](https://whereyoueat.com/r_gallery_images/rgallery-17530/0001-BG.jpg)\n\tמסעדה זו היא חלום של כל אוהב אוכל. המסעדה מציעה מנות כשרות מגוונות באווירה נעימה. מרק כדורי מצה, דג גפילטה, חזה בקר מעושר,תרנגולת מצויינת ועוד!\n\t**שעות פתיחה:**\n\tראשון - שישי:  **22:00 - 11:00**\n\tשבת: **הזמנות בלבד**\n\t📍 5th District Restaurant & Café  by King Solomon (Pátá čtvrť) Siroka 8  110 00 Praha 1 - Josefov\n\t📧 info@kosher.cz  \n\t📞 [+420 224 818 752](tel:+420224818752)\n\n - **בר Anonymous** (Anonymous Bar): \n\t![בר Anonymous - תמונה להמחשה](https://kolha.top/images/Pt1VXQ6/61ab8df9-570b-11e9-b16e-005056011050-hi.jpg)\n\t המקום הזה הוא חוויה. הבר ממוקם בלב העיר העתיקה של פראג. הקוקטיילים שם מגיעים עם “הצגה” מרהיבה, ויש תפריט נסתר שמגלים רק אחרי שהזמנתם סבב ראשון של קוקטיילים.\n\tהבר מציע גם מגוון רחב של מאפים, פרפה ושאר מנות קינוח טעימות\n\tאם אתם מחפשים בר טוב, זה מקום מעולה עם חוויה של פעם בחיים.\n**📍 Michalská 12, Prague 1\n⏰ כל יום בין השעות 17:00 ל-02:00\n📞 [+420 608 280 069](tel:+420608280069)\n🎫 [הזמנה מראש](https://www.anonymousbar.cz/en/booking)**\n - **מסעדת Sia** (Sia resturant):\n\t![מסעדת Sia מבחוץ](https://kolha.top/images/2Wh22zJ/sia-02-e1622812296256.jpg)\n\t המסעדה קרובה לפלדיום, מסעדה אסייאתית ברמה גבוהה, אוכל מעולה, יש להם קונספט של שלוש קומות כשבכל קומה יש מטבח אסייאתי אחר.\n **💷 המסעדה יקרה יחסית למסעדות אחרות באזור\n 📍 V Celnici 1034/6  110 00 Praha 1  \n⏰ יום שני עד יום רביעי: 11:30 - 23:00\nיום חמישי ושישי: 11:30 - 00:00\nיום שבת: 12:00 - 00:00\nיום ראשון: 12:00 - 23:00\n📞 [+420 220 199 380](tel:+420220199380)  \n📧 [info@siarestaurant.cz](mailto:info@siarestaurant.cz)**\n \n\n - **Amritsar Mail**:\n\t![תמונה של המסעדה](https://kolha.top/images/KWjSrND/amritsar-mail-indicka-restaurace-praha-vchod.png)\nהמסעדה נמצאת באזור כיכר ואצלב. מסעדה של בופה\\אכול כפי יכולתך, המסעדה מגישה מנות הודיות אותנטיות ומגוונות באיכות גבוהה שמכונות על ידי שפים הודים.\n\n\t**📍 Vodičkova 34, Prague, Prague, 110 00\n⏰ יום שני עד יום שישי: 11:00 - 23:00\n יום שבת: 12:00 - 23:00\n יום ראשון: סגור\n📞 [+420 773 677 273](tel:+420773677273)**\n- 🍃 **הפינה הטבעונית של לינה** - Linh's Vegan Corner:\n- המסעדה מציעה מנות טבעוניות מגוונות, ומקבלת ביקורות חיוביות. אז אם אתם מחפשים מסעדה טבעונית בפראג, מסעדת Linh’s Vegan Corner היא בחירה מעולה. תהנו!\n**📍 Národní třída Havelská 508/9, Prague, Czech Republic\n⏰ 11:00-22:00 כל יום\n📞 [+420 608 045 711](tel:+420608045711)**\n\n## מה התאריך הכי טוב לבקר בפראג\nחג בקריסמס, הוא כמו חג רגיל אצלנו ביהדות, כלומר, בחלק מימי החג הרבה מהחנויות יהיו סגורות, הכנתי לכם גם רשימה יותר מפורטת על פי התאריכים:\n![קריסמס בפראג 2016](https://kolha.top/images/b36p5WZ/christmas-market.jpg)\n### מה הולך בערב החג?\nב-**25 בדצמבר**, שנקרא “יום חג המולד הראשון”, אין חגיגה מיוחדת. זהו יום חופשי, בנוסף ל-**26 בדצמבר**, ורוב האנשים מבקרים את משפחתם או נשארים בבית. אם אתם מתכננים לאכול בחוץ ב-**24 בדצמבר**, אני ממליצה להזמין מראש את שולחנכם מכיוון שרוב המסעדות מחוץ ל\"מרכז התיירות\" הראשי יהיו סגורות.\n\nרוב שווקי הקריסמס של פראג יהיו פתוחים, כמו כיכר העיר העתיקה, כיכר השלום (Náměstí Míru) ואנדל, שם תוכלו לראות את הקרפים שנמכרים לארוחת החג המסורתית. אתם יכולים גם להשתתף בקונצרט החגיגי של חג המולד באולם סמטנה בבית העירייה בשעה **17:00** או בארוחת החג של מוצרט בערב חג המולד ויום חג המולד באולם בוקצ’צ’יו בגרנדהוטל בוהמיה פראג בשעה **19:00**.\n\n### שעות הפתיחה של אטרקציות בחג עצמו\nב-**24 בדצמבר, יום ראשון**, החנויות והאטרקציות יהיו פתוחות עד שעות הצהריים או השעות המוקדמות של הצהריים. חלק מהמוזיאונים, כמו המוזיאון הלאומי, יהיו סגורים.\n ב-25 **בדצמבר, יום שני**, זהו יום חג לאומי, כלומר, החנויות יהיו סגורות, אך המוזיאונים והאטרקציות יהיו פתוחים. התחבורה הציבורית תרוץ לפי לוח זמנים של ימי ראשון עם מרווחים ארוכים יותר בין קו לקו.\n\nב-**26 בדצמבר, יום שלישי**, זהו גם יום חג לאומי, כלומר, החנויות יהיו סגורות, אך המוזיאונים והאטרקציות יהיו פתוחות. התחבורה הציבורית תרוץ לפי לוח זמנים של ימי ראשון עם מרווחים ארוכים יותר בין קו לקו.\n מה-**27 עד ה-30 בדצמבר**, יהיו שעות פתיחה רגילות לחנויות, מוזיאונים ואטרקציות תיירותיות, אך חלק מהמוזיאונים הפרטיים, בתי הקפה או החנויות עשויים להחליט לסגור לחגים.\n\nב-**31 בדצמבר,** סילבסטר, יהיו שעות פתיחה רגילות של יום ראשון ושירות יום ראשון לרכבות, חשמליות ורכבת תחתית (מרווחים ארוכים).\n ב-**1 בינואר 2024**, יום שני, ערב השנה החדשה זהו חג לאומי, כלומר, החנויות יהיו סגורות, אך המוזיאונים והאטרקציות יהיו פתוחות. התחבורה הציבורית תרוץ לפי לוח זמנים של ימי ראשון\n\n## טיול חוץ\n![צ'סקי קרומלוב](https://kolha.top/images/NZgt6tv/bg2iswx05vr01.jpg)\n-  אני ממליצה לכם לשכור רכב וללכת ל**צ'סקי קרומלוב**, ולטייל בעצמכם, הנוף מהמצודה מהמם ויש בכניסה בר עם בירה מקומית שאפשר לקחת ולטייל איתה. אכלנו במסעדה בוייב של ימי הביניים שנקראת **Krčma Šatlava** שמגישה בשר שעושים על גריל פתוח במקום, מומלץ לבקר.\n\n- **חג המולד בארמונות הצ’כיים**:\n![ארמון מקושט](https://kolha.top/images/Cz9VSfj/496122892403782.png)\n\t  רוב הארמונות נסגרים לעונת החורף בסוף אוקטובר, אך חלקם נפתחים מחדש לסיורים מיוחדים לתקופת הקריסמס, שבהם אפשר לראות את חדרי הארמון מעוצבים לחג המולד. האווירה בארמונות מדהימה - קר ובדרך כלל יורד שלג בחוץ ובתוך כל חדר מעוצבים עצים בקישוטי חג המולד ואורות שונים. הסיורים בדרך כלל שונים גם הם, מאחר שהם מתמקדים במסורות חג המולד הצ’כיות ואיך כל משפחה מסוימת או תקופה היסטורית חגגה את העונה החגיגית. השנה, הארמונות **בקרלשטיין** (40 דקות ברכבת מפראג), **טרבון** (שעתיים ברכבת מפראג), **קריבוקלאט** (שעה וחצי ברכבת מפראג), **סלטינני** (פחות משעתיים ברכבת), **מנישק פוד ברדי** (45 דקות באוטובוס מתחנת הרכבת של שמיחוב) **ולוצ’ן** (שעה וחצי) יהיו פתוחים בכל סוף שבוע לפני חג המולד.\n\nאם אתם מתלבטים הרבה אם לעשות בכלל יום של טיול חוץ תדעו שהארמונות והעיירות שמחוץ לעיר פרג כל כך יפעם והאווירה שם כל כך קסומה שבעיניי ששווה את זה, אפילו שהנסיעה לרוב ארוכה מאוד.\n\n### סיכום \nאז אם אתם מתכננים לבקר בפראג בחג המולד, תוכלו להיות בטוחים שתמצאו מגוון רחב של אטרקציות, מסעדות כשרות, ואפשרויות לטיולים יומיים מרהיבים. תהנו!","source":"_posts/travel/prauge/christmas.md","raw":"---\ntitle: כריסמס מושלם בפראג\ndescription: חודש דצמבר המוכר גם כחודש הכריסמס הוא אחד מפרקי הזמן הקסומים ביותר לביקור בבירה הצכית. כל העיר מלאה באווירה חגיגית ושמחה המלווה בקשת רחבה של אטרקציות[...] הכנו לכם רשימה של המקומות הכי שווים לבקר בכריסמס הזה.\ndate: 2023-12-20 12:00:00\ntags: [פראג, טיולים, כריסמס,אוסף אטרקציות,מסעדות]\ncategories: [טיולים, פראג]\ncover: https://kolha.top/images/covers/uk9uV5M.jpg\n---\n\nפראג, העיר הזוהרת של צ'כיה, היא יעד מושלם לקריסמס (חג המולד). במהלך הקריסמס, העיר מתמלאה באורות חגיגיים, שווקים מסורתיים, ואווירה חגיגית. הנה מדריך לכל הדברים השווים שיש בקריסמס\n\n## אטרקציות לחג המולד\n -  **שוקי החג המולד**:\n![שווקי חג המולג 2023](https://kolha.top/images/covers/ho74yFK.jpg)\n פראג מארחת את כמה מהשווקים הכי יפים באירופה. השווקים מתמלאים בדוכנים שמוכרים מאכלים מסורתיים, משקאות חמים, ומוצרי יד מקומיים. ניתן למצוא שווקים ברחבי העיר, כולל בכיכר העיר העתיקה, כיכר ואצלב, כיכר הרפובליקה, ועוד. לעוד מידע על השווקים הכנתי לכם רשימה של [שווקי חג המולד בפראג 2023](https://kolha.top/travel/prauge/chirstmas-markets)\n - **גן החיות בפראג** (Prague Zoo):\n\t ![Czech Wikipedia user Packa, CC BY-SA 2.5 <https://creativecommons.org/licenses/by-sa/2.5>, via Wikimedia Commons](https://upload.wikimedia.org/wikipedia/commons/1/1e/Big_mammals_pavilion2%2C_Zoo_Prague.jpg)\n\t  ענקי בטירוף ומכיל כ5000 חיות שונות (650+ מינים שונים). אפשר להיות בגן כמה שעות טובות (6-5) בלי להתעכב יותר מדי. בגן עצמו יש מסעדה יחסית זולה וגם מכונות אוכל אוטומטיות זולות.\n📍 U **Trojského zámku 3/120, Praha 7** - ניתן להגיע עם תחב\"צ\n\n- **תערוכת חג המולד בגן הבוטני** (1-31 בדצמבר 2023)\nזהו אחד המקומות הטובים לחוות אווירת חג מולד צ'כית מסורתית אמיתית. בכל שנה, הגן הבוטני בפראג 2 מציג תערוכת חג המולד המתמקדת באלמנטים שונים של המסורות הצ'כיות סביב הזמנים החגיגיים. יש גם דוכן קטן עם קישוטים בעבודת יד, מגזינים לגינון וספרים.\n\nאם אתם מחפשים תרופת נגד השווקים המבריקים   והרועשים של חג המולד, המקום הזה יחזיר אתכם לזמן שבו מסורות חג המולד היו חלק מחיי היומיום של אנשים. הגן עצמו לא מיועד לתיירים, אז רוב השלטים בצ'כית, אבל לא משהו שגוגל טרנסלייט לא יכול לפתור\n\nהתערוכה היא חממה אחת גדולה, אז אפשר לשרוף שם שעה טובה. אפשר גם לטייל בגן ובחנות שמסביב לחממה לפני שתחזרו למרכז פראג. שירותים (בתשלום) זמינים (בניין צדדי כשנכנסים מתחנת החשמלית).\n\n**📍 הגן הבוטני, Na Slupi 16, פראג 2 – תחנת חשמלית 2, 14, 18, 24 Botanicka Zahrada\n⏰ 1-31 בדצמבר 2023, מדי יום (שני עד ראשון), 10:00 - 15:00\n🎫 100 CZK מבוגרים, 50 CZK ילדים, סטודנטים, אזרחים ותיקים, 250 CZK כרטיס משפחתי, ילדים מתחת לגיל 5 - חינם (במזומן בלבד, אין אפשרות לקנות דרך אתר)**\n- **קונצרטים בנושא הקריסמס**:\n, אתם יכולים למצוא הרבה קונצרטים בנושא חג המולד בכנסיות שונות במרכז פראג, כולל סנט ניקולאס, סנט סלבטור, סנט מרטין בקיר, קלמנטינום או בית הכנסת הספרדי. אם אתם רוצים לנסות משהו מאוד מסורתי (וצ’כי) תלכו למסה של חג המולד של F. Ryba, שהיה מורה למוזיקה וההופעה הזו הייתה יצירת המופת שלו. 📍 סנט ניקולאס, סנט סלבטור. כנסיית סנט מרטין ועוד ⏰ תלוי בהזמנה\n 💷 המחירים משתנים בהתאם למקום - מ-350 קרונות עד ל900 קרונות לכרטיסים הטובים ביותר\n\n## מסעדות\n### מסעדות כשרות\n(כל המידע נלקח מהמאמר שלנו על [מסעדות כשרות בפראג](https://kolha.top/travel/prauge/kosher-food))\n - **מסעדת שלנו** (Shelanu Dairy Restaurant/Shelanu pizzeria):\n\t![תמונה של המסעדה](https://chabadprague.cz/wp-content/uploads/2018/11/Shelanu-Pizzerie-Prague-3.jpg)\n\t פיצריית \"שלנו\" מציעה מבחר פיצות טעימות ומגוון מאכלי חלב ופרווה. פיצריית \"שלנו\" ממוקמת בלב הרובע היהודי, פסיעות ספורות מבית הכנסת של המהר\"ל.  \nפיצריית \"שלנו\" מספקת שירות משלוחים למשרדכם/מלונכם.  \n\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 11:00**\n\tיום שישי: **15:00 - 11:00**\n\t📍 Břehová 208/8, 110 00 Josefov, Czechia\n\t📧 kosher@chabadprague.cz\n\n -   **דיניץ** (Dinitz):\n\t![דיניץ](https://th.bing.com/th/id/OIP.MKPEb8oHif3B67NREVkR9gHaFj?rs=1&pid=ImgDetMain)\n\tהמסעדה הכשרה דיניץ בלב העיר העתיקה של פראג נוסדה בשנת 2008. המסעדה מציעה מבחר מגוון של מנות בשר וירקות. התפריט מבוסס על המנות הפופולריות ביותר של המטבח הישראלי, כולל סלטים ים תיכוניים, שיפודי בשר על האש וסטייקים עסיסיים. ניתן להזמין ארוחות שישי ושבת. הודות לארוחת הערב החגיגית של שבת שישי ולתפריט הצהריים של שבת, תוכלו ליהנות מהשבת כמו שהיא צריכה להיות, גם בדרכים. המסעדה מחזיקה בתעודת כשרות למהדרין ומפוקחת על ידי הרבנות הראשית של צ'כיה עד היום.\nהמסעדה ממוקמת ליד הבית הכנסת הספרדי, שנמצא רק צעדים מהכיכר העתיקה של פראג והגשר הרומנטי של צ’ארלס.\n\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 11:30**\n\tיום שישי: **15:00 - 11:30**\n\t📍 Bilkova 12 11100 Prague\n\t📞 +420 222 244 000\n\t📧 info@dinitz.cz\n\n -  **יו מילו** (U-Milo Kosher Italian dairy restaurant):\n\t![U-Milo](https://th.bing.com/th/id/OIP.GqqMNLComlSCE5tKl4_eigHaEK?rs=1&pid=ImgDetMain)\n יו מילו הוא מסעדה איטלקית כשרה חדשה שממוקמת ברחוב U Milosrdnych 4, בלב הרובע היהודי של פראג, ממש ליד מרכז חב\"ד. יו מילו הוא מסעדה צמחונית כשרה בפראג, תחת הפיקוח החמור של חב\"ד.\n\tהמסעדה מגישה מנות מהמסורת האיטלקית מוגשות עם ריחות וטעמים של המטבח הים-תיכוני, משלבות טעמים מערביים ומזרחיים. התפריט מגוון כדי למרות את כל החך; מסלטים ופסטות, למנות מבוססות דגים ומגוון של פיצות טעימות. מגוון רחב של יינות וקוקטיילים מלווים את המנות השונות ו, כמובן, לסיום, קינוחים שנוצרו במיוחד על ידי השף. יו מילו מציעה גם קייטרינג, כמו גם שירות משלוחים למשרד שלך או למלון.\n\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 8:30**\n\tיום שישי: **15:30 - 8:30**\n\tמוצאי שבת: **חצי שעה אחרי צאת השבת עד 1:00.**\n\t📍 U Milosrdných 848/4 110 00 Staré Město, Czechia\n\t📧 kosher@chabadprague.cz\n - **גריל חב\"ד** (The Chabad Grill):\n![The chabad grill image](https://machertours.com/wp-content/uploads/chabad-grill-3.jpg)\n\t מסעדת הגריל הינה מסעדה אלגנטית, איכותית וכשרה בז'אנר ישראלי, הממוקמת בלב הרובע היהודי.  \nהמסעדה מציעה תפריט עשיר ומגוון, המנות מתבססות על מרכיבים טריים ואיכותיים, המשולבים בבישול עילי: בשר על הגריל, סטייק אמריקאי, דגים, סלטים טריים ומנות פסטה נפלאות. לצד כל זה מוגשות מבחר תוספות בטעמים עשירים.  \nבמקום אף תהנו מעוגות, קינוחים מעולים וגולת הכותרת - הקיורטוש הכשר היחיד בפראג.  \nהאווירה במקום רגועה ושלווה ומלווה ביחס ביתי, חם ואוהב, המבטיח לכם חוויה של טעמים וניחוחות של אוכל יהודי.\n\t**שעות פתיחה:**\n\t\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 13:00**\n\tיום שישי: **15:00 - 11:00**\n\tשבת ומוצ\"ש: **סגור**\n\t**📍 U Milosrdných 849/6, 110 00 Staré Město, Czechia\n\t📧 kosher@chabadprague.cz**\n### לא כשרות\n - **מסעדות קינג סולומון במחוז החמישי** (5th District Restaurant & Café by King Solomon):\n\t![מסעדת המלך סולומון](https://whereyoueat.com/r_gallery_images/rgallery-17530/0001-BG.jpg)\n\tמסעדה זו היא חלום של כל אוהב אוכל. המסעדה מציעה מנות כשרות מגוונות באווירה נעימה. מרק כדורי מצה, דג גפילטה, חזה בקר מעושר,תרנגולת מצויינת ועוד!\n\t**שעות פתיחה:**\n\tראשון - שישי:  **22:00 - 11:00**\n\tשבת: **הזמנות בלבד**\n\t📍 5th District Restaurant & Café  by King Solomon (Pátá čtvrť) Siroka 8  110 00 Praha 1 - Josefov\n\t📧 info@kosher.cz  \n\t📞 [+420 224 818 752](tel:+420224818752)\n\n - **בר Anonymous** (Anonymous Bar): \n\t![בר Anonymous - תמונה להמחשה](https://kolha.top/images/Pt1VXQ6/61ab8df9-570b-11e9-b16e-005056011050-hi.jpg)\n\t המקום הזה הוא חוויה. הבר ממוקם בלב העיר העתיקה של פראג. הקוקטיילים שם מגיעים עם “הצגה” מרהיבה, ויש תפריט נסתר שמגלים רק אחרי שהזמנתם סבב ראשון של קוקטיילים.\n\tהבר מציע גם מגוון רחב של מאפים, פרפה ושאר מנות קינוח טעימות\n\tאם אתם מחפשים בר טוב, זה מקום מעולה עם חוויה של פעם בחיים.\n**📍 Michalská 12, Prague 1\n⏰ כל יום בין השעות 17:00 ל-02:00\n📞 [+420 608 280 069](tel:+420608280069)\n🎫 [הזמנה מראש](https://www.anonymousbar.cz/en/booking)**\n - **מסעדת Sia** (Sia resturant):\n\t![מסעדת Sia מבחוץ](https://kolha.top/images/2Wh22zJ/sia-02-e1622812296256.jpg)\n\t המסעדה קרובה לפלדיום, מסעדה אסייאתית ברמה גבוהה, אוכל מעולה, יש להם קונספט של שלוש קומות כשבכל קומה יש מטבח אסייאתי אחר.\n **💷 המסעדה יקרה יחסית למסעדות אחרות באזור\n 📍 V Celnici 1034/6  110 00 Praha 1  \n⏰ יום שני עד יום רביעי: 11:30 - 23:00\nיום חמישי ושישי: 11:30 - 00:00\nיום שבת: 12:00 - 00:00\nיום ראשון: 12:00 - 23:00\n📞 [+420 220 199 380](tel:+420220199380)  \n📧 [info@siarestaurant.cz](mailto:info@siarestaurant.cz)**\n \n\n - **Amritsar Mail**:\n\t![תמונה של המסעדה](https://kolha.top/images/KWjSrND/amritsar-mail-indicka-restaurace-praha-vchod.png)\nהמסעדה נמצאת באזור כיכר ואצלב. מסעדה של בופה\\אכול כפי יכולתך, המסעדה מגישה מנות הודיות אותנטיות ומגוונות באיכות גבוהה שמכונות על ידי שפים הודים.\n\n\t**📍 Vodičkova 34, Prague, Prague, 110 00\n⏰ יום שני עד יום שישי: 11:00 - 23:00\n יום שבת: 12:00 - 23:00\n יום ראשון: סגור\n📞 [+420 773 677 273](tel:+420773677273)**\n- 🍃 **הפינה הטבעונית של לינה** - Linh's Vegan Corner:\n- המסעדה מציעה מנות טבעוניות מגוונות, ומקבלת ביקורות חיוביות. אז אם אתם מחפשים מסעדה טבעונית בפראג, מסעדת Linh’s Vegan Corner היא בחירה מעולה. תהנו!\n**📍 Národní třída Havelská 508/9, Prague, Czech Republic\n⏰ 11:00-22:00 כל יום\n📞 [+420 608 045 711](tel:+420608045711)**\n\n## מה התאריך הכי טוב לבקר בפראג\nחג בקריסמס, הוא כמו חג רגיל אצלנו ביהדות, כלומר, בחלק מימי החג הרבה מהחנויות יהיו סגורות, הכנתי לכם גם רשימה יותר מפורטת על פי התאריכים:\n![קריסמס בפראג 2016](https://kolha.top/images/b36p5WZ/christmas-market.jpg)\n### מה הולך בערב החג?\nב-**25 בדצמבר**, שנקרא “יום חג המולד הראשון”, אין חגיגה מיוחדת. זהו יום חופשי, בנוסף ל-**26 בדצמבר**, ורוב האנשים מבקרים את משפחתם או נשארים בבית. אם אתם מתכננים לאכול בחוץ ב-**24 בדצמבר**, אני ממליצה להזמין מראש את שולחנכם מכיוון שרוב המסעדות מחוץ ל\"מרכז התיירות\" הראשי יהיו סגורות.\n\nרוב שווקי הקריסמס של פראג יהיו פתוחים, כמו כיכר העיר העתיקה, כיכר השלום (Náměstí Míru) ואנדל, שם תוכלו לראות את הקרפים שנמכרים לארוחת החג המסורתית. אתם יכולים גם להשתתף בקונצרט החגיגי של חג המולד באולם סמטנה בבית העירייה בשעה **17:00** או בארוחת החג של מוצרט בערב חג המולד ויום חג המולד באולם בוקצ’צ’יו בגרנדהוטל בוהמיה פראג בשעה **19:00**.\n\n### שעות הפתיחה של אטרקציות בחג עצמו\nב-**24 בדצמבר, יום ראשון**, החנויות והאטרקציות יהיו פתוחות עד שעות הצהריים או השעות המוקדמות של הצהריים. חלק מהמוזיאונים, כמו המוזיאון הלאומי, יהיו סגורים.\n ב-25 **בדצמבר, יום שני**, זהו יום חג לאומי, כלומר, החנויות יהיו סגורות, אך המוזיאונים והאטרקציות יהיו פתוחים. התחבורה הציבורית תרוץ לפי לוח זמנים של ימי ראשון עם מרווחים ארוכים יותר בין קו לקו.\n\nב-**26 בדצמבר, יום שלישי**, זהו גם יום חג לאומי, כלומר, החנויות יהיו סגורות, אך המוזיאונים והאטרקציות יהיו פתוחות. התחבורה הציבורית תרוץ לפי לוח זמנים של ימי ראשון עם מרווחים ארוכים יותר בין קו לקו.\n מה-**27 עד ה-30 בדצמבר**, יהיו שעות פתיחה רגילות לחנויות, מוזיאונים ואטרקציות תיירותיות, אך חלק מהמוזיאונים הפרטיים, בתי הקפה או החנויות עשויים להחליט לסגור לחגים.\n\nב-**31 בדצמבר,** סילבסטר, יהיו שעות פתיחה רגילות של יום ראשון ושירות יום ראשון לרכבות, חשמליות ורכבת תחתית (מרווחים ארוכים).\n ב-**1 בינואר 2024**, יום שני, ערב השנה החדשה זהו חג לאומי, כלומר, החנויות יהיו סגורות, אך המוזיאונים והאטרקציות יהיו פתוחות. התחבורה הציבורית תרוץ לפי לוח זמנים של ימי ראשון\n\n## טיול חוץ\n![צ'סקי קרומלוב](https://kolha.top/images/NZgt6tv/bg2iswx05vr01.jpg)\n-  אני ממליצה לכם לשכור רכב וללכת ל**צ'סקי קרומלוב**, ולטייל בעצמכם, הנוף מהמצודה מהמם ויש בכניסה בר עם בירה מקומית שאפשר לקחת ולטייל איתה. אכלנו במסעדה בוייב של ימי הביניים שנקראת **Krčma Šatlava** שמגישה בשר שעושים על גריל פתוח במקום, מומלץ לבקר.\n\n- **חג המולד בארמונות הצ’כיים**:\n![ארמון מקושט](https://kolha.top/images/Cz9VSfj/496122892403782.png)\n\t  רוב הארמונות נסגרים לעונת החורף בסוף אוקטובר, אך חלקם נפתחים מחדש לסיורים מיוחדים לתקופת הקריסמס, שבהם אפשר לראות את חדרי הארמון מעוצבים לחג המולד. האווירה בארמונות מדהימה - קר ובדרך כלל יורד שלג בחוץ ובתוך כל חדר מעוצבים עצים בקישוטי חג המולד ואורות שונים. הסיורים בדרך כלל שונים גם הם, מאחר שהם מתמקדים במסורות חג המולד הצ’כיות ואיך כל משפחה מסוימת או תקופה היסטורית חגגה את העונה החגיגית. השנה, הארמונות **בקרלשטיין** (40 דקות ברכבת מפראג), **טרבון** (שעתיים ברכבת מפראג), **קריבוקלאט** (שעה וחצי ברכבת מפראג), **סלטינני** (פחות משעתיים ברכבת), **מנישק פוד ברדי** (45 דקות באוטובוס מתחנת הרכבת של שמיחוב) **ולוצ’ן** (שעה וחצי) יהיו פתוחים בכל סוף שבוע לפני חג המולד.\n\nאם אתם מתלבטים הרבה אם לעשות בכלל יום של טיול חוץ תדעו שהארמונות והעיירות שמחוץ לעיר פרג כל כך יפעם והאווירה שם כל כך קסומה שבעיניי ששווה את זה, אפילו שהנסיעה לרוב ארוכה מאוד.\n\n### סיכום \nאז אם אתם מתכננים לבקר בפראג בחג המולד, תוכלו להיות בטוחים שתמצאו מגוון רחב של אטרקציות, מסעדות כשרות, ואפשרויות לטיולים יומיים מרהיבים. תהנו!","slug":"travel/prauge/christmas","published":1,"updated":"2024-01-19T17:52:41.444Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygy2001mo4vx01exh6fz","content":"<p>פראג, העיר הזוהרת של צ&#39;כיה, היא יעד מושלם לקריסמס (חג המולד). במהלך הקריסמס, העיר מתמלאה באורות חגיגיים, שווקים מסורתיים, ואווירה חגיגית. הנה מדריך לכל הדברים השווים שיש בקריסמס</p>\n<h2 id=\"אטרקציות-לחג-המולד\"><a href=\"#אטרקציות-לחג-המולד\" class=\"headerlink\" title=\"אטרקציות לחג המולד\"></a>אטרקציות לחג המולד</h2><ul>\n<li><p><strong>שוקי החג המולד</strong>:<br><img src=\"https://kolha.top/images/covers/ho74yFK.jpg\" alt=\"שווקי חג המולג 2023\"><br> פראג מארחת את כמה מהשווקים הכי יפים באירופה. השווקים מתמלאים בדוכנים שמוכרים מאכלים מסורתיים, משקאות חמים, ומוצרי יד מקומיים. ניתן למצוא שווקים ברחבי העיר, כולל בכיכר העיר העתיקה, כיכר ואצלב, כיכר הרפובליקה, ועוד. לעוד מידע על השווקים הכנתי לכם רשימה של <a href=\"https://kolha.top/travel/prauge/chirstmas-markets\">שווקי חג המולד בפראג 2023</a></p>\n</li>\n<li><p><strong>גן החיות בפראג</strong> (Prague Zoo):<br>  <img src=\"https://upload.wikimedia.org/wikipedia/commons/1/1e/Big_mammals_pavilion2%2C_Zoo_Prague.jpg\" alt=\"Czech Wikipedia user Packa, CC BY-SA 2.5 &lt;https://creativecommons.org/licenses/by-sa/2.5&gt;, via Wikimedia Commons\"><br>   ענקי בטירוף ומכיל כ5000 חיות שונות (650+ מינים שונים). אפשר להיות בגן כמה שעות טובות (6-5) בלי להתעכב יותר מדי. בגן עצמו יש מסעדה יחסית זולה וגם מכונות אוכל אוטומטיות זולות.<br>📍 U <strong>Trojského zámku 3&#x2F;120, Praha 7</strong> - ניתן להגיע עם תחב&quot;צ</p>\n</li>\n<li><p><strong>תערוכת חג המולד בגן הבוטני</strong> (1-31 בדצמבר 2023)<br>זהו אחד המקומות הטובים לחוות אווירת חג מולד צ&#39;כית מסורתית אמיתית. בכל שנה, הגן הבוטני בפראג 2 מציג תערוכת חג המולד המתמקדת באלמנטים שונים של המסורות הצ&#39;כיות סביב הזמנים החגיגיים. יש גם דוכן קטן עם קישוטים בעבודת יד, מגזינים לגינון וספרים.</p>\n</li>\n</ul>\n<p>אם אתם מחפשים תרופת נגד השווקים המבריקים   והרועשים של חג המולד, המקום הזה יחזיר אתכם לזמן שבו מסורות חג המולד היו חלק מחיי היומיום של אנשים. הגן עצמו לא מיועד לתיירים, אז רוב השלטים בצ&#39;כית, אבל לא משהו שגוגל טרנסלייט לא יכול לפתור</p>\n<p>התערוכה היא חממה אחת גדולה, אז אפשר לשרוף שם שעה טובה. אפשר גם לטייל בגן ובחנות שמסביב לחממה לפני שתחזרו למרכז פראג. שירותים (בתשלום) זמינים (בניין צדדי כשנכנסים מתחנת החשמלית).</p>\n<p><strong>📍 הגן הבוטני, Na Slupi 16, פראג 2 – תחנת חשמלית 2, 14, 18, 24 Botanicka Zahrada<br>⏰ 1-31 בדצמבר 2023, מדי יום (שני עד ראשון), 10:00 - 15:00<br>🎫 100 CZK מבוגרים, 50 CZK ילדים, סטודנטים, אזרחים ותיקים, 250 CZK כרטיס משפחתי, ילדים מתחת לגיל 5 - חינם (במזומן בלבד, אין אפשרות לקנות דרך אתר)</strong></p>\n<ul>\n<li><strong>קונצרטים בנושא הקריסמס</strong>:<br>, אתם יכולים למצוא הרבה קונצרטים בנושא חג המולד בכנסיות שונות במרכז פראג, כולל סנט ניקולאס, סנט סלבטור, סנט מרטין בקיר, קלמנטינום או בית הכנסת הספרדי. אם אתם רוצים לנסות משהו מאוד מסורתי (וצ’כי) תלכו למסה של חג המולד של F. Ryba, שהיה מורה למוזיקה וההופעה הזו הייתה יצירת המופת שלו. 📍 סנט ניקולאס, סנט סלבטור. כנסיית סנט מרטין ועוד ⏰ תלוי בהזמנה<br> 💷 המחירים משתנים בהתאם למקום - מ-350 קרונות עד ל900 קרונות לכרטיסים הטובים ביותר</li>\n</ul>\n<h2 id=\"מסעדות\"><a href=\"#מסעדות\" class=\"headerlink\" title=\"מסעדות\"></a>מסעדות</h2><h3 id=\"מסעדות-כשרות\"><a href=\"#מסעדות-כשרות\" class=\"headerlink\" title=\"מסעדות כשרות\"></a>מסעדות כשרות</h3><p>(כל המידע נלקח מהמאמר שלנו על <a href=\"https://kolha.top/travel/prauge/kosher-food\">מסעדות כשרות בפראג</a>)</p>\n<ul>\n<li><p><strong>מסעדת שלנו</strong> (Shelanu Dairy Restaurant&#x2F;Shelanu pizzeria):<br> <img src=\"https://chabadprague.cz/wp-content/uploads/2018/11/Shelanu-Pizzerie-Prague-3.jpg\" alt=\"תמונה של המסעדה\"><br>  פיצריית &quot;שלנו&quot; מציעה מבחר פיצות טעימות ומגוון מאכלי חלב ופרווה. פיצריית &quot;שלנו&quot; ממוקמת בלב הרובע היהודי, פסיעות ספורות מבית הכנסת של המהר&quot;ל.<br>פיצריית &quot;שלנו&quot; מספקת שירות משלוחים למשרדכם&#x2F;מלונכם.<br> <strong>שעות פתיחה:</strong><br> ראשון - חמישי:  <strong>22:00 - 11:00</strong><br> יום שישי: <strong>15:00 - 11:00</strong><br> 📍 Břehová 208&#x2F;8, 110 00 Josefov, Czechia<br> 📧 <a href=\"mailto:&#x6b;&#x6f;&#115;&#x68;&#101;&#114;&#64;&#99;&#104;&#97;&#x62;&#97;&#x64;&#112;&#x72;&#x61;&#x67;&#117;&#x65;&#46;&#99;&#x7a;\">&#x6b;&#x6f;&#115;&#x68;&#101;&#114;&#64;&#99;&#104;&#97;&#x62;&#97;&#x64;&#112;&#x72;&#x61;&#x67;&#117;&#x65;&#46;&#99;&#x7a;</a></p>\n</li>\n<li><p><strong>דיניץ</strong> (Dinitz):<br><img src=\"https://th.bing.com/th/id/OIP.MKPEb8oHif3B67NREVkR9gHaFj?rs=1&pid=ImgDetMain\" alt=\"דיניץ\"><br>המסעדה הכשרה דיניץ בלב העיר העתיקה של פראג נוסדה בשנת 2008. המסעדה מציעה מבחר מגוון של מנות בשר וירקות. התפריט מבוסס על המנות הפופולריות ביותר של המטבח הישראלי, כולל סלטים ים תיכוניים, שיפודי בשר על האש וסטייקים עסיסיים. ניתן להזמין ארוחות שישי ושבת. הודות לארוחת הערב החגיגית של שבת שישי ולתפריט הצהריים של שבת, תוכלו ליהנות מהשבת כמו שהיא צריכה להיות, גם בדרכים. המסעדה מחזיקה בתעודת כשרות למהדרין ומפוקחת על ידי הרבנות הראשית של צ&#39;כיה עד היום.<br>המסעדה ממוקמת ליד הבית הכנסת הספרדי, שנמצא רק צעדים מהכיכר העתיקה של פראג והגשר הרומנטי של צ’ארלס.<br><strong>שעות פתיחה:</strong><br>ראשון - חמישי:  <strong>22:00 - 11:30</strong><br>יום שישי: <strong>15:00 - 11:30</strong><br>📍 Bilkova 12 11100 Prague<br>📞 +420 222 244 000<br>📧 <a href=\"mailto:&#105;&#x6e;&#x66;&#x6f;&#x40;&#100;&#105;&#110;&#105;&#116;&#122;&#x2e;&#x63;&#122;\">&#105;&#x6e;&#x66;&#x6f;&#x40;&#100;&#105;&#110;&#105;&#116;&#122;&#x2e;&#x63;&#122;</a></p>\n</li>\n<li><p><strong>יו מילו</strong> (U-Milo Kosher Italian dairy restaurant):<br><img src=\"https://th.bing.com/th/id/OIP.GqqMNLComlSCE5tKl4_eigHaEK?rs=1&pid=ImgDetMain\" alt=\"U-Milo\"><br> יו מילו הוא מסעדה איטלקית כשרה חדשה שממוקמת ברחוב U Milosrdnych 4, בלב הרובע היהודי של פראג, ממש ליד מרכז חב&quot;ד. יו מילו הוא מסעדה צמחונית כשרה בפראג, תחת הפיקוח החמור של חב&quot;ד.<br>המסעדה מגישה מנות מהמסורת האיטלקית מוגשות עם ריחות וטעמים של המטבח הים-תיכוני, משלבות טעמים מערביים ומזרחיים. התפריט מגוון כדי למרות את כל החך; מסלטים ופסטות, למנות מבוססות דגים ומגוון של פיצות טעימות. מגוון רחב של יינות וקוקטיילים מלווים את המנות השונות ו, כמובן, לסיום, קינוחים שנוצרו במיוחד על ידי השף. יו מילו מציעה גם קייטרינג, כמו גם שירות משלוחים למשרד שלך או למלון.<br><strong>שעות פתיחה:</strong><br>ראשון - חמישי:  <strong>22:00 - 8:30</strong><br>יום שישי: <strong>15:30 - 8:30</strong><br>מוצאי שבת: <strong>חצי שעה אחרי צאת השבת עד 1:00.</strong><br>📍 U Milosrdných 848&#x2F;4 110 00 Staré Město, Czechia<br>📧 <a href=\"mailto:&#x6b;&#x6f;&#x73;&#x68;&#x65;&#x72;&#64;&#99;&#104;&#x61;&#x62;&#x61;&#100;&#x70;&#x72;&#97;&#103;&#117;&#101;&#x2e;&#x63;&#122;\">&#x6b;&#x6f;&#x73;&#x68;&#x65;&#x72;&#64;&#99;&#104;&#x61;&#x62;&#x61;&#100;&#x70;&#x72;&#97;&#103;&#117;&#101;&#x2e;&#x63;&#122;</a></p>\n</li>\n<li><p><strong>גריל חב&quot;ד</strong> (The Chabad Grill):<br><img src=\"https://machertours.com/wp-content/uploads/chabad-grill-3.jpg\" alt=\"The chabad grill image\"><br>  מסעדת הגריל הינה מסעדה אלגנטית, איכותית וכשרה בז&#39;אנר ישראלי, הממוקמת בלב הרובע היהודי.<br>המסעדה מציעה תפריט עשיר ומגוון, המנות מתבססות על מרכיבים טריים ואיכותיים, המשולבים בבישול עילי: בשר על הגריל, סטייק אמריקאי, דגים, סלטים טריים ומנות פסטה נפלאות. לצד כל זה מוגשות מבחר תוספות בטעמים עשירים.<br>במקום אף תהנו מעוגות, קינוחים מעולים וגולת הכותרת - הקיורטוש הכשר היחיד בפראג.<br>האווירה במקום רגועה ושלווה ומלווה ביחס ביתי, חם ואוהב, המבטיח לכם חוויה של טעמים וניחוחות של אוכל יהודי.<br> <strong>שעות פתיחה:</strong><br> <strong>שעות פתיחה:</strong><br> ראשון - חמישי:  <strong>22:00 - 13:00</strong><br> יום שישי: <strong>15:00 - 11:00</strong><br> שבת ומוצ&quot;ש: <strong>סגור</strong><br> <strong>📍 U Milosrdných 849&#x2F;6, 110 00 Staré Město, Czechia<br> 📧 <a href=\"mailto:&#107;&#111;&#x73;&#104;&#101;&#x72;&#x40;&#x63;&#104;&#97;&#98;&#97;&#100;&#x70;&#x72;&#97;&#x67;&#117;&#101;&#46;&#99;&#x7a;\">&#107;&#111;&#x73;&#104;&#101;&#x72;&#x40;&#x63;&#104;&#97;&#98;&#97;&#100;&#x70;&#x72;&#97;&#x67;&#117;&#101;&#46;&#99;&#x7a;</a></strong></p>\n</li>\n</ul>\n<h3 id=\"לא-כשרות\"><a href=\"#לא-כשרות\" class=\"headerlink\" title=\"לא כשרות\"></a>לא כשרות</h3><ul>\n<li><p><strong>מסעדות קינג סולומון במחוז החמישי</strong> (5th District Restaurant &amp; Café by King Solomon):<br> <img src=\"https://whereyoueat.com/r_gallery_images/rgallery-17530/0001-BG.jpg\" alt=\"מסעדת המלך סולומון\"><br> מסעדה זו היא חלום של כל אוהב אוכל. המסעדה מציעה מנות כשרות מגוונות באווירה נעימה. מרק כדורי מצה, דג גפילטה, חזה בקר מעושר,תרנגולת מצויינת ועוד!<br> <strong>שעות פתיחה:</strong><br> ראשון - שישי:  <strong>22:00 - 11:00</strong><br> שבת: <strong>הזמנות בלבד</strong><br> 📍 5th District Restaurant &amp; Café  by King Solomon (Pátá čtvrť) Siroka 8  110 00 Praha 1 - Josefov<br> 📧 <a href=\"mailto:&#105;&#x6e;&#102;&#x6f;&#x40;&#x6b;&#x6f;&#115;&#x68;&#101;&#x72;&#x2e;&#x63;&#122;\">&#105;&#x6e;&#102;&#x6f;&#x40;&#x6b;&#x6f;&#115;&#x68;&#101;&#x72;&#x2e;&#x63;&#122;</a><br> 📞 <a href=\"tel:+420224818752\">+420 224 818 752</a></p>\n</li>\n<li><p><strong>בר Anonymous</strong> (Anonymous Bar):<br> <img src=\"https://kolha.top/images/Pt1VXQ6/61ab8df9-570b-11e9-b16e-005056011050-hi.jpg\" alt=\"בר Anonymous - תמונה להמחשה\"><br>  המקום הזה הוא חוויה. הבר ממוקם בלב העיר העתיקה של פראג. הקוקטיילים שם מגיעים עם “הצגה” מרהיבה, ויש תפריט נסתר שמגלים רק אחרי שהזמנתם סבב ראשון של קוקטיילים.<br> הבר מציע גם מגוון רחב של מאפים, פרפה ושאר מנות קינוח טעימות<br> אם אתם מחפשים בר טוב, זה מקום מעולה עם חוויה של פעם בחיים.<br><strong>📍 Michalská 12, Prague 1<br>⏰ כל יום בין השעות 17:00 ל-02:00<br>📞 <a href=\"tel:+420608280069\">+420 608 280 069</a><br>🎫 <a href=\"https://www.anonymousbar.cz/en/booking\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">הזמנה מראש</a></strong></p>\n</li>\n<li><p><strong>מסעדת Sia</strong> (Sia resturant):<br> <img src=\"https://kolha.top/images/2Wh22zJ/sia-02-e1622812296256.jpg\" alt=\"מסעדת Sia מבחוץ\"><br>  המסעדה קרובה לפלדיום, מסעדה אסייאתית ברמה גבוהה, אוכל מעולה, יש להם קונספט של שלוש קומות כשבכל קומה יש מטבח אסייאתי אחר.<br> <strong>💷 המסעדה יקרה יחסית למסעדות אחרות באזור<br> 📍 V Celnici 1034&#x2F;6  110 00 Praha 1<br>⏰ יום שני עד יום רביעי: 11:30 - 23:00<br>יום חמישי ושישי: 11:30 - 00:00<br>יום שבת: 12:00 - 00:00<br>יום ראשון: 12:00 - 23:00<br>📞 <a href=\"tel:+420220199380\">+420 220 199 380</a><br>📧 <a href=\"mailto:info@siarestaurant.cz\">info@siarestaurant.cz</a></strong></p>\n</li>\n<li><p><strong>Amritsar Mail</strong>:<br> <img src=\"https://kolha.top/images/KWjSrND/amritsar-mail-indicka-restaurace-praha-vchod.png\" alt=\"תמונה של המסעדה\"><br>המסעדה נמצאת באזור כיכר ואצלב. מסעדה של בופה\\אכול כפי יכולתך, המסעדה מגישה מנות הודיות אותנטיות ומגוונות באיכות גבוהה שמכונות על ידי שפים הודים.</p>\n<p> **📍 Vodičkova 34, Prague, Prague, 110 00</p>\n</li>\n</ul>\n<p>⏰ יום שני עד יום שישי: 11:00 - 23:00<br> יום שבת: 12:00 - 23:00<br> יום ראשון: סגור<br>📞 <a href=\"tel:+420773677273\">+420 773 677 273</a>**</p>\n<ul>\n<li>🍃 <strong>הפינה הטבעונית של לינה</strong> - Linh&#39;s Vegan Corner:</li>\n<li>המסעדה מציעה מנות טבעוניות מגוונות, ומקבלת ביקורות חיוביות. אז אם אתם מחפשים מסעדה טבעונית בפראג, מסעדת Linh’s Vegan Corner היא בחירה מעולה. תהנו!<br><strong>📍 Národní třída Havelská 508&#x2F;9, Prague, Czech Republic<br>⏰ 11:00-22:00 כל יום<br>📞 <a href=\"tel:+420608045711\">+420 608 045 711</a></strong></li>\n</ul>\n<h2 id=\"מה-התאריך-הכי-טוב-לבקר-בפראג\"><a href=\"#מה-התאריך-הכי-טוב-לבקר-בפראג\" class=\"headerlink\" title=\"מה התאריך הכי טוב לבקר בפראג\"></a>מה התאריך הכי טוב לבקר בפראג</h2><p>חג בקריסמס, הוא כמו חג רגיל אצלנו ביהדות, כלומר, בחלק מימי החג הרבה מהחנויות יהיו סגורות, הכנתי לכם גם רשימה יותר מפורטת על פי התאריכים:<br><img src=\"https://kolha.top/images/b36p5WZ/christmas-market.jpg\" alt=\"קריסמס בפראג 2016\"></p>\n<h3 id=\"מה-הולך-בערב-החג\"><a href=\"#מה-הולך-בערב-החג\" class=\"headerlink\" title=\"מה הולך בערב החג?\"></a>מה הולך בערב החג?</h3><p>ב-<strong>25 בדצמבר</strong>, שנקרא “יום חג המולד הראשון”, אין חגיגה מיוחדת. זהו יום חופשי, בנוסף ל-<strong>26 בדצמבר</strong>, ורוב האנשים מבקרים את משפחתם או נשארים בבית. אם אתם מתכננים לאכול בחוץ ב-<strong>24 בדצמבר</strong>, אני ממליצה להזמין מראש את שולחנכם מכיוון שרוב המסעדות מחוץ ל&quot;מרכז התיירות&quot; הראשי יהיו סגורות.</p>\n<p>רוב שווקי הקריסמס של פראג יהיו פתוחים, כמו כיכר העיר העתיקה, כיכר השלום (Náměstí Míru) ואנדל, שם תוכלו לראות את הקרפים שנמכרים לארוחת החג המסורתית. אתם יכולים גם להשתתף בקונצרט החגיגי של חג המולד באולם סמטנה בבית העירייה בשעה <strong>17:00</strong> או בארוחת החג של מוצרט בערב חג המולד ויום חג המולד באולם בוקצ’צ’יו בגרנדהוטל בוהמיה פראג בשעה <strong>19:00</strong>.</p>\n<h3 id=\"שעות-הפתיחה-של-אטרקציות-בחג-עצמו\"><a href=\"#שעות-הפתיחה-של-אטרקציות-בחג-עצמו\" class=\"headerlink\" title=\"שעות הפתיחה של אטרקציות בחג עצמו\"></a>שעות הפתיחה של אטרקציות בחג עצמו</h3><p>ב-<strong>24 בדצמבר, יום ראשון</strong>, החנויות והאטרקציות יהיו פתוחות עד שעות הצהריים או השעות המוקדמות של הצהריים. חלק מהמוזיאונים, כמו המוזיאון הלאומי, יהיו סגורים.<br> ב-25 <strong>בדצמבר, יום שני</strong>, זהו יום חג לאומי, כלומר, החנויות יהיו סגורות, אך המוזיאונים והאטרקציות יהיו פתוחים. התחבורה הציבורית תרוץ לפי לוח זמנים של ימי ראשון עם מרווחים ארוכים יותר בין קו לקו.</p>\n<p>ב-<strong>26 בדצמבר, יום שלישי</strong>, זהו גם יום חג לאומי, כלומר, החנויות יהיו סגורות, אך המוזיאונים והאטרקציות יהיו פתוחות. התחבורה הציבורית תרוץ לפי לוח זמנים של ימי ראשון עם מרווחים ארוכים יותר בין קו לקו.<br> מה-<strong>27 עד ה-30 בדצמבר</strong>, יהיו שעות פתיחה רגילות לחנויות, מוזיאונים ואטרקציות תיירותיות, אך חלק מהמוזיאונים הפרטיים, בתי הקפה או החנויות עשויים להחליט לסגור לחגים.</p>\n<p>ב-<strong>31 בדצמבר,</strong> סילבסטר, יהיו שעות פתיחה רגילות של יום ראשון ושירות יום ראשון לרכבות, חשמליות ורכבת תחתית (מרווחים ארוכים).<br> ב-<strong>1 בינואר 2024</strong>, יום שני, ערב השנה החדשה זהו חג לאומי, כלומר, החנויות יהיו סגורות, אך המוזיאונים והאטרקציות יהיו פתוחות. התחבורה הציבורית תרוץ לפי לוח זמנים של ימי ראשון</p>\n<h2 id=\"טיול-חוץ\"><a href=\"#טיול-חוץ\" class=\"headerlink\" title=\"טיול חוץ\"></a>טיול חוץ</h2><p><img src=\"https://kolha.top/images/NZgt6tv/bg2iswx05vr01.jpg\" alt=\"צ&#39;סקי קרומלוב\"></p>\n<ul>\n<li><p>אני ממליצה לכם לשכור רכב וללכת ל<strong>צ&#39;סקי קרומלוב</strong>, ולטייל בעצמכם, הנוף מהמצודה מהמם ויש בכניסה בר עם בירה מקומית שאפשר לקחת ולטייל איתה. אכלנו במסעדה בוייב של ימי הביניים שנקראת <strong>Krčma Šatlava</strong> שמגישה בשר שעושים על גריל פתוח במקום, מומלץ לבקר.</p>\n</li>\n<li><p><strong>חג המולד בארמונות הצ’כיים</strong>:<br><img src=\"https://kolha.top/images/Cz9VSfj/496122892403782.png\" alt=\"ארמון מקושט\"><br>רוב הארמונות נסגרים לעונת החורף בסוף אוקטובר, אך חלקם נפתחים מחדש לסיורים מיוחדים לתקופת הקריסמס, שבהם אפשר לראות את חדרי הארמון מעוצבים לחג המולד. האווירה בארמונות מדהימה - קר ובדרך כלל יורד שלג בחוץ ובתוך כל חדר מעוצבים עצים בקישוטי חג המולד ואורות שונים. הסיורים בדרך כלל שונים גם הם, מאחר שהם מתמקדים במסורות חג המולד הצ’כיות ואיך כל משפחה מסוימת או תקופה היסטורית חגגה את העונה החגיגית. השנה, הארמונות <strong>בקרלשטיין</strong> (40 דקות ברכבת מפראג), <strong>טרבון</strong> (שעתיים ברכבת מפראג), <strong>קריבוקלאט</strong> (שעה וחצי ברכבת מפראג), <strong>סלטינני</strong> (פחות משעתיים ברכבת), <strong>מנישק פוד ברדי</strong> (45 דקות באוטובוס מתחנת הרכבת של שמיחוב) <strong>ולוצ’ן</strong> (שעה וחצי) יהיו פתוחים בכל סוף שבוע לפני חג המולד.</p>\n</li>\n</ul>\n<p>אם אתם מתלבטים הרבה אם לעשות בכלל יום של טיול חוץ תדעו שהארמונות והעיירות שמחוץ לעיר פרג כל כך יפעם והאווירה שם כל כך קסומה שבעיניי ששווה את זה, אפילו שהנסיעה לרוב ארוכה מאוד.</p>\n<h3 id=\"סיכום\"><a href=\"#סיכום\" class=\"headerlink\" title=\"סיכום\"></a>סיכום</h3><p>אז אם אתם מתכננים לבקר בפראג בחג המולד, תוכלו להיות בטוחים שתמצאו מגוון רחב של אטרקציות, מסעדות כשרות, ואפשרויות לטיולים יומיים מרהיבים. תהנו!</p>\n","excerpt":"","more":"<p>פראג, העיר הזוהרת של צ&#39;כיה, היא יעד מושלם לקריסמס (חג המולד). במהלך הקריסמס, העיר מתמלאה באורות חגיגיים, שווקים מסורתיים, ואווירה חגיגית. הנה מדריך לכל הדברים השווים שיש בקריסמס</p>\n<h2 id=\"אטרקציות-לחג-המולד\"><a href=\"#אטרקציות-לחג-המולד\" class=\"headerlink\" title=\"אטרקציות לחג המולד\"></a>אטרקציות לחג המולד</h2><ul>\n<li><p><strong>שוקי החג המולד</strong>:<br><img src=\"https://kolha.top/images/covers/ho74yFK.jpg\" alt=\"שווקי חג המולג 2023\"><br> פראג מארחת את כמה מהשווקים הכי יפים באירופה. השווקים מתמלאים בדוכנים שמוכרים מאכלים מסורתיים, משקאות חמים, ומוצרי יד מקומיים. ניתן למצוא שווקים ברחבי העיר, כולל בכיכר העיר העתיקה, כיכר ואצלב, כיכר הרפובליקה, ועוד. לעוד מידע על השווקים הכנתי לכם רשימה של <a href=\"https://kolha.top/travel/prauge/chirstmas-markets\">שווקי חג המולד בפראג 2023</a></p>\n</li>\n<li><p><strong>גן החיות בפראג</strong> (Prague Zoo):<br>  <img src=\"https://upload.wikimedia.org/wikipedia/commons/1/1e/Big_mammals_pavilion2%2C_Zoo_Prague.jpg\" alt=\"Czech Wikipedia user Packa, CC BY-SA 2.5 &lt;https://creativecommons.org/licenses/by-sa/2.5&gt;, via Wikimedia Commons\"><br>   ענקי בטירוף ומכיל כ5000 חיות שונות (650+ מינים שונים). אפשר להיות בגן כמה שעות טובות (6-5) בלי להתעכב יותר מדי. בגן עצמו יש מסעדה יחסית זולה וגם מכונות אוכל אוטומטיות זולות.<br>📍 U <strong>Trojského zámku 3&#x2F;120, Praha 7</strong> - ניתן להגיע עם תחב&quot;צ</p>\n</li>\n<li><p><strong>תערוכת חג המולד בגן הבוטני</strong> (1-31 בדצמבר 2023)<br>זהו אחד המקומות הטובים לחוות אווירת חג מולד צ&#39;כית מסורתית אמיתית. בכל שנה, הגן הבוטני בפראג 2 מציג תערוכת חג המולד המתמקדת באלמנטים שונים של המסורות הצ&#39;כיות סביב הזמנים החגיגיים. יש גם דוכן קטן עם קישוטים בעבודת יד, מגזינים לגינון וספרים.</p>\n</li>\n</ul>\n<p>אם אתם מחפשים תרופת נגד השווקים המבריקים   והרועשים של חג המולד, המקום הזה יחזיר אתכם לזמן שבו מסורות חג המולד היו חלק מחיי היומיום של אנשים. הגן עצמו לא מיועד לתיירים, אז רוב השלטים בצ&#39;כית, אבל לא משהו שגוגל טרנסלייט לא יכול לפתור</p>\n<p>התערוכה היא חממה אחת גדולה, אז אפשר לשרוף שם שעה טובה. אפשר גם לטייל בגן ובחנות שמסביב לחממה לפני שתחזרו למרכז פראג. שירותים (בתשלום) זמינים (בניין צדדי כשנכנסים מתחנת החשמלית).</p>\n<p><strong>📍 הגן הבוטני, Na Slupi 16, פראג 2 – תחנת חשמלית 2, 14, 18, 24 Botanicka Zahrada<br>⏰ 1-31 בדצמבר 2023, מדי יום (שני עד ראשון), 10:00 - 15:00<br>🎫 100 CZK מבוגרים, 50 CZK ילדים, סטודנטים, אזרחים ותיקים, 250 CZK כרטיס משפחתי, ילדים מתחת לגיל 5 - חינם (במזומן בלבד, אין אפשרות לקנות דרך אתר)</strong></p>\n<ul>\n<li><strong>קונצרטים בנושא הקריסמס</strong>:<br>, אתם יכולים למצוא הרבה קונצרטים בנושא חג המולד בכנסיות שונות במרכז פראג, כולל סנט ניקולאס, סנט סלבטור, סנט מרטין בקיר, קלמנטינום או בית הכנסת הספרדי. אם אתם רוצים לנסות משהו מאוד מסורתי (וצ’כי) תלכו למסה של חג המולד של F. Ryba, שהיה מורה למוזיקה וההופעה הזו הייתה יצירת המופת שלו. 📍 סנט ניקולאס, סנט סלבטור. כנסיית סנט מרטין ועוד ⏰ תלוי בהזמנה<br> 💷 המחירים משתנים בהתאם למקום - מ-350 קרונות עד ל900 קרונות לכרטיסים הטובים ביותר</li>\n</ul>\n<h2 id=\"מסעדות\"><a href=\"#מסעדות\" class=\"headerlink\" title=\"מסעדות\"></a>מסעדות</h2><h3 id=\"מסעדות-כשרות\"><a href=\"#מסעדות-כשרות\" class=\"headerlink\" title=\"מסעדות כשרות\"></a>מסעדות כשרות</h3><p>(כל המידע נלקח מהמאמר שלנו על <a href=\"https://kolha.top/travel/prauge/kosher-food\">מסעדות כשרות בפראג</a>)</p>\n<ul>\n<li><p><strong>מסעדת שלנו</strong> (Shelanu Dairy Restaurant&#x2F;Shelanu pizzeria):<br> <img src=\"https://chabadprague.cz/wp-content/uploads/2018/11/Shelanu-Pizzerie-Prague-3.jpg\" alt=\"תמונה של המסעדה\"><br>  פיצריית &quot;שלנו&quot; מציעה מבחר פיצות טעימות ומגוון מאכלי חלב ופרווה. פיצריית &quot;שלנו&quot; ממוקמת בלב הרובע היהודי, פסיעות ספורות מבית הכנסת של המהר&quot;ל.<br>פיצריית &quot;שלנו&quot; מספקת שירות משלוחים למשרדכם&#x2F;מלונכם.<br> <strong>שעות פתיחה:</strong><br> ראשון - חמישי:  <strong>22:00 - 11:00</strong><br> יום שישי: <strong>15:00 - 11:00</strong><br> 📍 Břehová 208&#x2F;8, 110 00 Josefov, Czechia<br> 📧 <a href=\"mailto:&#x6b;&#x6f;&#115;&#x68;&#101;&#114;&#64;&#99;&#104;&#97;&#x62;&#97;&#x64;&#112;&#x72;&#x61;&#x67;&#117;&#x65;&#46;&#99;&#x7a;\">&#x6b;&#x6f;&#115;&#x68;&#101;&#114;&#64;&#99;&#104;&#97;&#x62;&#97;&#x64;&#112;&#x72;&#x61;&#x67;&#117;&#x65;&#46;&#99;&#x7a;</a></p>\n</li>\n<li><p><strong>דיניץ</strong> (Dinitz):<br><img src=\"https://th.bing.com/th/id/OIP.MKPEb8oHif3B67NREVkR9gHaFj?rs=1&pid=ImgDetMain\" alt=\"דיניץ\"><br>המסעדה הכשרה דיניץ בלב העיר העתיקה של פראג נוסדה בשנת 2008. המסעדה מציעה מבחר מגוון של מנות בשר וירקות. התפריט מבוסס על המנות הפופולריות ביותר של המטבח הישראלי, כולל סלטים ים תיכוניים, שיפודי בשר על האש וסטייקים עסיסיים. ניתן להזמין ארוחות שישי ושבת. הודות לארוחת הערב החגיגית של שבת שישי ולתפריט הצהריים של שבת, תוכלו ליהנות מהשבת כמו שהיא צריכה להיות, גם בדרכים. המסעדה מחזיקה בתעודת כשרות למהדרין ומפוקחת על ידי הרבנות הראשית של צ&#39;כיה עד היום.<br>המסעדה ממוקמת ליד הבית הכנסת הספרדי, שנמצא רק צעדים מהכיכר העתיקה של פראג והגשר הרומנטי של צ’ארלס.<br><strong>שעות פתיחה:</strong><br>ראשון - חמישי:  <strong>22:00 - 11:30</strong><br>יום שישי: <strong>15:00 - 11:30</strong><br>📍 Bilkova 12 11100 Prague<br>📞 +420 222 244 000<br>📧 <a href=\"mailto:&#105;&#x6e;&#x66;&#x6f;&#x40;&#100;&#105;&#110;&#105;&#116;&#122;&#x2e;&#x63;&#122;\">&#105;&#x6e;&#x66;&#x6f;&#x40;&#100;&#105;&#110;&#105;&#116;&#122;&#x2e;&#x63;&#122;</a></p>\n</li>\n<li><p><strong>יו מילו</strong> (U-Milo Kosher Italian dairy restaurant):<br><img src=\"https://th.bing.com/th/id/OIP.GqqMNLComlSCE5tKl4_eigHaEK?rs=1&pid=ImgDetMain\" alt=\"U-Milo\"><br> יו מילו הוא מסעדה איטלקית כשרה חדשה שממוקמת ברחוב U Milosrdnych 4, בלב הרובע היהודי של פראג, ממש ליד מרכז חב&quot;ד. יו מילו הוא מסעדה צמחונית כשרה בפראג, תחת הפיקוח החמור של חב&quot;ד.<br>המסעדה מגישה מנות מהמסורת האיטלקית מוגשות עם ריחות וטעמים של המטבח הים-תיכוני, משלבות טעמים מערביים ומזרחיים. התפריט מגוון כדי למרות את כל החך; מסלטים ופסטות, למנות מבוססות דגים ומגוון של פיצות טעימות. מגוון רחב של יינות וקוקטיילים מלווים את המנות השונות ו, כמובן, לסיום, קינוחים שנוצרו במיוחד על ידי השף. יו מילו מציעה גם קייטרינג, כמו גם שירות משלוחים למשרד שלך או למלון.<br><strong>שעות פתיחה:</strong><br>ראשון - חמישי:  <strong>22:00 - 8:30</strong><br>יום שישי: <strong>15:30 - 8:30</strong><br>מוצאי שבת: <strong>חצי שעה אחרי צאת השבת עד 1:00.</strong><br>📍 U Milosrdných 848&#x2F;4 110 00 Staré Město, Czechia<br>📧 <a href=\"mailto:&#x6b;&#x6f;&#x73;&#x68;&#x65;&#x72;&#64;&#99;&#104;&#x61;&#x62;&#x61;&#100;&#x70;&#x72;&#97;&#103;&#117;&#101;&#x2e;&#x63;&#122;\">&#x6b;&#x6f;&#x73;&#x68;&#x65;&#x72;&#64;&#99;&#104;&#x61;&#x62;&#x61;&#100;&#x70;&#x72;&#97;&#103;&#117;&#101;&#x2e;&#x63;&#122;</a></p>\n</li>\n<li><p><strong>גריל חב&quot;ד</strong> (The Chabad Grill):<br><img src=\"https://machertours.com/wp-content/uploads/chabad-grill-3.jpg\" alt=\"The chabad grill image\"><br>  מסעדת הגריל הינה מסעדה אלגנטית, איכותית וכשרה בז&#39;אנר ישראלי, הממוקמת בלב הרובע היהודי.<br>המסעדה מציעה תפריט עשיר ומגוון, המנות מתבססות על מרכיבים טריים ואיכותיים, המשולבים בבישול עילי: בשר על הגריל, סטייק אמריקאי, דגים, סלטים טריים ומנות פסטה נפלאות. לצד כל זה מוגשות מבחר תוספות בטעמים עשירים.<br>במקום אף תהנו מעוגות, קינוחים מעולים וגולת הכותרת - הקיורטוש הכשר היחיד בפראג.<br>האווירה במקום רגועה ושלווה ומלווה ביחס ביתי, חם ואוהב, המבטיח לכם חוויה של טעמים וניחוחות של אוכל יהודי.<br> <strong>שעות פתיחה:</strong><br> <strong>שעות פתיחה:</strong><br> ראשון - חמישי:  <strong>22:00 - 13:00</strong><br> יום שישי: <strong>15:00 - 11:00</strong><br> שבת ומוצ&quot;ש: <strong>סגור</strong><br> <strong>📍 U Milosrdných 849&#x2F;6, 110 00 Staré Město, Czechia<br> 📧 <a href=\"mailto:&#107;&#111;&#x73;&#104;&#101;&#x72;&#x40;&#x63;&#104;&#97;&#98;&#97;&#100;&#x70;&#x72;&#97;&#x67;&#117;&#101;&#46;&#99;&#x7a;\">&#107;&#111;&#x73;&#104;&#101;&#x72;&#x40;&#x63;&#104;&#97;&#98;&#97;&#100;&#x70;&#x72;&#97;&#x67;&#117;&#101;&#46;&#99;&#x7a;</a></strong></p>\n</li>\n</ul>\n<h3 id=\"לא-כשרות\"><a href=\"#לא-כשרות\" class=\"headerlink\" title=\"לא כשרות\"></a>לא כשרות</h3><ul>\n<li><p><strong>מסעדות קינג סולומון במחוז החמישי</strong> (5th District Restaurant &amp; Café by King Solomon):<br> <img src=\"https://whereyoueat.com/r_gallery_images/rgallery-17530/0001-BG.jpg\" alt=\"מסעדת המלך סולומון\"><br> מסעדה זו היא חלום של כל אוהב אוכל. המסעדה מציעה מנות כשרות מגוונות באווירה נעימה. מרק כדורי מצה, דג גפילטה, חזה בקר מעושר,תרנגולת מצויינת ועוד!<br> <strong>שעות פתיחה:</strong><br> ראשון - שישי:  <strong>22:00 - 11:00</strong><br> שבת: <strong>הזמנות בלבד</strong><br> 📍 5th District Restaurant &amp; Café  by King Solomon (Pátá čtvrť) Siroka 8  110 00 Praha 1 - Josefov<br> 📧 <a href=\"mailto:&#105;&#x6e;&#102;&#x6f;&#x40;&#x6b;&#x6f;&#115;&#x68;&#101;&#x72;&#x2e;&#x63;&#122;\">&#105;&#x6e;&#102;&#x6f;&#x40;&#x6b;&#x6f;&#115;&#x68;&#101;&#x72;&#x2e;&#x63;&#122;</a><br> 📞 <a href=\"tel:+420224818752\">+420 224 818 752</a></p>\n</li>\n<li><p><strong>בר Anonymous</strong> (Anonymous Bar):<br> <img src=\"https://kolha.top/images/Pt1VXQ6/61ab8df9-570b-11e9-b16e-005056011050-hi.jpg\" alt=\"בר Anonymous - תמונה להמחשה\"><br>  המקום הזה הוא חוויה. הבר ממוקם בלב העיר העתיקה של פראג. הקוקטיילים שם מגיעים עם “הצגה” מרהיבה, ויש תפריט נסתר שמגלים רק אחרי שהזמנתם סבב ראשון של קוקטיילים.<br> הבר מציע גם מגוון רחב של מאפים, פרפה ושאר מנות קינוח טעימות<br> אם אתם מחפשים בר טוב, זה מקום מעולה עם חוויה של פעם בחיים.<br><strong>📍 Michalská 12, Prague 1<br>⏰ כל יום בין השעות 17:00 ל-02:00<br>📞 <a href=\"tel:+420608280069\">+420 608 280 069</a><br>🎫 <a href=\"https://www.anonymousbar.cz/en/booking\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">הזמנה מראש</a></strong></p>\n</li>\n<li><p><strong>מסעדת Sia</strong> (Sia resturant):<br> <img src=\"https://kolha.top/images/2Wh22zJ/sia-02-e1622812296256.jpg\" alt=\"מסעדת Sia מבחוץ\"><br>  המסעדה קרובה לפלדיום, מסעדה אסייאתית ברמה גבוהה, אוכל מעולה, יש להם קונספט של שלוש קומות כשבכל קומה יש מטבח אסייאתי אחר.<br> <strong>💷 המסעדה יקרה יחסית למסעדות אחרות באזור<br> 📍 V Celnici 1034&#x2F;6  110 00 Praha 1<br>⏰ יום שני עד יום רביעי: 11:30 - 23:00<br>יום חמישי ושישי: 11:30 - 00:00<br>יום שבת: 12:00 - 00:00<br>יום ראשון: 12:00 - 23:00<br>📞 <a href=\"tel:+420220199380\">+420 220 199 380</a><br>📧 <a href=\"mailto:info@siarestaurant.cz\">info@siarestaurant.cz</a></strong></p>\n</li>\n<li><p><strong>Amritsar Mail</strong>:<br> <img src=\"https://kolha.top/images/KWjSrND/amritsar-mail-indicka-restaurace-praha-vchod.png\" alt=\"תמונה של המסעדה\"><br>המסעדה נמצאת באזור כיכר ואצלב. מסעדה של בופה\\אכול כפי יכולתך, המסעדה מגישה מנות הודיות אותנטיות ומגוונות באיכות גבוהה שמכונות על ידי שפים הודים.</p>\n<p> **📍 Vodičkova 34, Prague, Prague, 110 00</p>\n</li>\n</ul>\n<p>⏰ יום שני עד יום שישי: 11:00 - 23:00<br> יום שבת: 12:00 - 23:00<br> יום ראשון: סגור<br>📞 <a href=\"tel:+420773677273\">+420 773 677 273</a>**</p>\n<ul>\n<li>🍃 <strong>הפינה הטבעונית של לינה</strong> - Linh&#39;s Vegan Corner:</li>\n<li>המסעדה מציעה מנות טבעוניות מגוונות, ומקבלת ביקורות חיוביות. אז אם אתם מחפשים מסעדה טבעונית בפראג, מסעדת Linh’s Vegan Corner היא בחירה מעולה. תהנו!<br><strong>📍 Národní třída Havelská 508&#x2F;9, Prague, Czech Republic<br>⏰ 11:00-22:00 כל יום<br>📞 <a href=\"tel:+420608045711\">+420 608 045 711</a></strong></li>\n</ul>\n<h2 id=\"מה-התאריך-הכי-טוב-לבקר-בפראג\"><a href=\"#מה-התאריך-הכי-טוב-לבקר-בפראג\" class=\"headerlink\" title=\"מה התאריך הכי טוב לבקר בפראג\"></a>מה התאריך הכי טוב לבקר בפראג</h2><p>חג בקריסמס, הוא כמו חג רגיל אצלנו ביהדות, כלומר, בחלק מימי החג הרבה מהחנויות יהיו סגורות, הכנתי לכם גם רשימה יותר מפורטת על פי התאריכים:<br><img src=\"https://kolha.top/images/b36p5WZ/christmas-market.jpg\" alt=\"קריסמס בפראג 2016\"></p>\n<h3 id=\"מה-הולך-בערב-החג\"><a href=\"#מה-הולך-בערב-החג\" class=\"headerlink\" title=\"מה הולך בערב החג?\"></a>מה הולך בערב החג?</h3><p>ב-<strong>25 בדצמבר</strong>, שנקרא “יום חג המולד הראשון”, אין חגיגה מיוחדת. זהו יום חופשי, בנוסף ל-<strong>26 בדצמבר</strong>, ורוב האנשים מבקרים את משפחתם או נשארים בבית. אם אתם מתכננים לאכול בחוץ ב-<strong>24 בדצמבר</strong>, אני ממליצה להזמין מראש את שולחנכם מכיוון שרוב המסעדות מחוץ ל&quot;מרכז התיירות&quot; הראשי יהיו סגורות.</p>\n<p>רוב שווקי הקריסמס של פראג יהיו פתוחים, כמו כיכר העיר העתיקה, כיכר השלום (Náměstí Míru) ואנדל, שם תוכלו לראות את הקרפים שנמכרים לארוחת החג המסורתית. אתם יכולים גם להשתתף בקונצרט החגיגי של חג המולד באולם סמטנה בבית העירייה בשעה <strong>17:00</strong> או בארוחת החג של מוצרט בערב חג המולד ויום חג המולד באולם בוקצ’צ’יו בגרנדהוטל בוהמיה פראג בשעה <strong>19:00</strong>.</p>\n<h3 id=\"שעות-הפתיחה-של-אטרקציות-בחג-עצמו\"><a href=\"#שעות-הפתיחה-של-אטרקציות-בחג-עצמו\" class=\"headerlink\" title=\"שעות הפתיחה של אטרקציות בחג עצמו\"></a>שעות הפתיחה של אטרקציות בחג עצמו</h3><p>ב-<strong>24 בדצמבר, יום ראשון</strong>, החנויות והאטרקציות יהיו פתוחות עד שעות הצהריים או השעות המוקדמות של הצהריים. חלק מהמוזיאונים, כמו המוזיאון הלאומי, יהיו סגורים.<br> ב-25 <strong>בדצמבר, יום שני</strong>, זהו יום חג לאומי, כלומר, החנויות יהיו סגורות, אך המוזיאונים והאטרקציות יהיו פתוחים. התחבורה הציבורית תרוץ לפי לוח זמנים של ימי ראשון עם מרווחים ארוכים יותר בין קו לקו.</p>\n<p>ב-<strong>26 בדצמבר, יום שלישי</strong>, זהו גם יום חג לאומי, כלומר, החנויות יהיו סגורות, אך המוזיאונים והאטרקציות יהיו פתוחות. התחבורה הציבורית תרוץ לפי לוח זמנים של ימי ראשון עם מרווחים ארוכים יותר בין קו לקו.<br> מה-<strong>27 עד ה-30 בדצמבר</strong>, יהיו שעות פתיחה רגילות לחנויות, מוזיאונים ואטרקציות תיירותיות, אך חלק מהמוזיאונים הפרטיים, בתי הקפה או החנויות עשויים להחליט לסגור לחגים.</p>\n<p>ב-<strong>31 בדצמבר,</strong> סילבסטר, יהיו שעות פתיחה רגילות של יום ראשון ושירות יום ראשון לרכבות, חשמליות ורכבת תחתית (מרווחים ארוכים).<br> ב-<strong>1 בינואר 2024</strong>, יום שני, ערב השנה החדשה זהו חג לאומי, כלומר, החנויות יהיו סגורות, אך המוזיאונים והאטרקציות יהיו פתוחות. התחבורה הציבורית תרוץ לפי לוח זמנים של ימי ראשון</p>\n<h2 id=\"טיול-חוץ\"><a href=\"#טיול-חוץ\" class=\"headerlink\" title=\"טיול חוץ\"></a>טיול חוץ</h2><p><img src=\"https://kolha.top/images/NZgt6tv/bg2iswx05vr01.jpg\" alt=\"צ&#39;סקי קרומלוב\"></p>\n<ul>\n<li><p>אני ממליצה לכם לשכור רכב וללכת ל<strong>צ&#39;סקי קרומלוב</strong>, ולטייל בעצמכם, הנוף מהמצודה מהמם ויש בכניסה בר עם בירה מקומית שאפשר לקחת ולטייל איתה. אכלנו במסעדה בוייב של ימי הביניים שנקראת <strong>Krčma Šatlava</strong> שמגישה בשר שעושים על גריל פתוח במקום, מומלץ לבקר.</p>\n</li>\n<li><p><strong>חג המולד בארמונות הצ’כיים</strong>:<br><img src=\"https://kolha.top/images/Cz9VSfj/496122892403782.png\" alt=\"ארמון מקושט\"><br>רוב הארמונות נסגרים לעונת החורף בסוף אוקטובר, אך חלקם נפתחים מחדש לסיורים מיוחדים לתקופת הקריסמס, שבהם אפשר לראות את חדרי הארמון מעוצבים לחג המולד. האווירה בארמונות מדהימה - קר ובדרך כלל יורד שלג בחוץ ובתוך כל חדר מעוצבים עצים בקישוטי חג המולד ואורות שונים. הסיורים בדרך כלל שונים גם הם, מאחר שהם מתמקדים במסורות חג המולד הצ’כיות ואיך כל משפחה מסוימת או תקופה היסטורית חגגה את העונה החגיגית. השנה, הארמונות <strong>בקרלשטיין</strong> (40 דקות ברכבת מפראג), <strong>טרבון</strong> (שעתיים ברכבת מפראג), <strong>קריבוקלאט</strong> (שעה וחצי ברכבת מפראג), <strong>סלטינני</strong> (פחות משעתיים ברכבת), <strong>מנישק פוד ברדי</strong> (45 דקות באוטובוס מתחנת הרכבת של שמיחוב) <strong>ולוצ’ן</strong> (שעה וחצי) יהיו פתוחים בכל סוף שבוע לפני חג המולד.</p>\n</li>\n</ul>\n<p>אם אתם מתלבטים הרבה אם לעשות בכלל יום של טיול חוץ תדעו שהארמונות והעיירות שמחוץ לעיר פרג כל כך יפעם והאווירה שם כל כך קסומה שבעיניי ששווה את זה, אפילו שהנסיעה לרוב ארוכה מאוד.</p>\n<h3 id=\"סיכום\"><a href=\"#סיכום\" class=\"headerlink\" title=\"סיכום\"></a>סיכום</h3><p>אז אם אתם מתכננים לבקר בפראג בחג המולד, תוכלו להיות בטוחים שתמצאו מגוון רחב של אטרקציות, מסעדות כשרות, ואפשרויות לטיולים יומיים מרהיבים. תהנו!</p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"https://kolha.top/images/covers/ho74yFK.jpg","popularPost_tmp_gaData":{"updated":"Fri Jan 19 2024 19:52:41 GMT+0200 (Israel Standard Time)","title":"כריסמס מושלם בפראג","path":"travel/prauge/christmas/","eyeCatchImage":"https://kolha.top/images/covers/ho74yFK.jpg","excerpt":"חודש דצמבר המוכר גם כחודש הכריסמס הוא אחד מפרקי הזמן הקסומים ביותר לביקור בבירה הצכית. כל העיר מלאה באווירה חגיגית ושמחה המלווה בקשת רחבה של אטרקציות[...] הכנו לכם רשימה של המקומות הכי שווים לבקר בכריסמס הזה.","date":{"_isAMomentObject":true,"_i":"2023-12-20T10:00:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2023-12-20T10:00:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"טיולים > פראג","tags":["כריסמס","טיולים","אוסף אטרקציות","מסעדות","פראג"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"מסעדות כשרות בפראג 2023","description":"רשימה זאת מכילה את כל המסעדות הכשרות הכי מומלצות בפראג","date":"2023-12-20T08:00:00.000Z","cover":"https://kolha.top/images/covers/0XganQJ.jpg","_content":" רשימה זאת מכילה את כל המסעדות הכשרות הכי מומלצות בפראג, המסעדות פה לרוב יופיעו בנוסף בעמודים אחרים המציינים טיולים בפראג\n - **מסעדת שלנו** (Shelanu Dairy Restaurant/Shelanu pizzeria):\n\t![תמונה של המסעדה](https://chabadprague.cz/wp-content/uploads/2018/11/Shelanu-Pizzerie-Prague-3.jpg)\n\t פיצריית \"שלנו\" מציעה מבחר פיצות טעימות ומגוון מאכלי חלב ופרווה. פיצריית \"שלנו\" ממוקמת בלב הרובע היהודי, פסיעות ספורות מבית הכנסת של המהר\"ל.  \nפיצריית \"שלנו\" מספקת שירות משלוחים למשרדכם/מלונכם.  \n\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 11:00**\n\tיום שישי: **15:00 - 11:00**\n\t📍 Břehová 208/8, 110 00 Josefov, Czechia\n\t📧 kosher@chabadprague.cz\n\n -   **דיניץ** (Dinitz):\n\t![דיניץ](https://th.bing.com/th/id/OIP.MKPEb8oHif3B67NREVkR9gHaFj?rs=1&pid=ImgDetMain)\n\tהמסעדה הכשרה דיניץ בלב העיר העתיקה של פראג נוסדה בשנת 2008. המסעדה מציעה מבחר מגוון של מנות בשר וירקות. התפריט מבוסס על המנות הפופולריות ביותר של המטבח הישראלי, כולל סלטים ים תיכוניים, שיפודי בשר על האש וסטייקים עסיסיים. ניתן להזמין ארוחות שישי ושבת. הודות לארוחת הערב החגיגית של שבת שישי ולתפריט הצהריים של שבת, תוכלו ליהנות מהשבת כמו שהיא צריכה להיות, גם בדרכים. המסעדה מחזיקה בתעודת כשרות למהדרין ומפוקחת על ידי הרבנות הראשית של צ'כיה עד היום.\nהמסעדה ממוקמת ליד הבית הכנסת הספרדי, שנמצא רק צעדים מהכיכר העתיקה של פראג והגשר הרומנטי של צ’ארלס.\n\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 11:30**\n\tיום שישי: **15:00 - 11:30**\n\t📍 Bilkova 12 11100 Prague\n\t📞 +420 222 244 000\n\t📧 info@dinitz.cz\n\n -  **יו מילו** (U-Milo Kosher Italian dairy restaurant):\n\t![U-Milo](https://th.bing.com/th/id/OIP.GqqMNLComlSCE5tKl4_eigHaEK?rs=1&pid=ImgDetMain)\n יו מילו הוא מסעדה איטלקית כשרה חדשה שממוקמת ברחוב U Milosrdnych 4, בלב הרובע היהודי של פראג, ממש ליד מרכז חב\"ד. יו מילו הוא מסעדה צמחונית כשרה בפראג, תחת הפיקוח החמור של חב\"ד.\n\tהמסעדה מגישה מנות מהמסורת האיטלקית מוגשות עם ריחות וטעמים של המטבח הים-תיכוני, משלבות טעמים מערביים ומזרחיים. התפריט מגוון כדי למרות את כל החך; מסלטים ופסטות, למנות מבוססות דגים ומגוון של פיצות טעימות. מגוון רחב של יינות וקוקטיילים מלווים את המנות השונות ו, כמובן, לסיום, קינוחים שנוצרו במיוחד על ידי השף. יו מילו מציעה גם קייטרינג, כמו גם שירות משלוחים למשרד שלך או למלון.\n\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 8:30**\n\tיום שישי: **15:30 - 8:30**\n\tמוצאי שבת: **חצי שעה אחרי צאת השבת עד 1:00.**\n\t📍 U Milosrdných 848/4 110 00 Staré Město, Czechia\n\t📧 kosher@chabadprague.cz\n - **גריל חב\"ד** (The Chabad Grill):\n![The chabad grill image](https://machertours.com/wp-content/uploads/chabad-grill-3.jpg)\n\t מסעדת הגריל הינה מסעדה אלגנטית, איכותית וכשרה בז'אנר ישראלי, הממוקמת בלב הרובע היהודי.  \nהמסעדה מציעה תפריט עשיר ומגוון, המנות מתבססות על מרכיבים טריים ואיכותיים, המשולבים בבישול עילי: בשר על הגריל, סטייק אמריקאי, דגים, סלטים טריים ומנות פסטה נפלאות. לצד כל זה מוגשות מבחר תוספות בטעמים עשירים.  \nבמקום אף תהנו מעוגות, קינוחים מעולים וגולת הכותרת - הקיורטוש הכשר היחיד בפראג.  \nהאווירה במקום רגועה ושלווה ומלווה ביחס ביתי, חם ואוהב, המבטיח לכם חוויה של טעמים וניחוחות של אוכל יהודי.\n\t**שעות פתיחה:**\n\t\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 13:00**\n\tיום שישי: **15:00 - 11:00**\n\tשבת ומוצ\"ש: **סגור**\n\t**📍 U Milosrdných 849/6, 110 00 Staré Město, Czechia\n\t📧 kosher@chabadprague.cz**\n\n- **מסעדות קינג סולומון במחוז החמישי** (5th District Restaurant & Café by King Solomon):\n **המסעדה עצמה כשרה, אך על פי האתר שלה, פתוחה בשבת, מומלץ להתקשר ולבדוק**\n\t![מסעדת המלך סולומון](https://whereyoueat.com/r_gallery_images/rgallery-17530/0001-BG.jpg)\n\tמסעדה זו היא חלום של כל אוהב אוכל. המסעדה מציעה מנות כשרות מגוונות באווירה נעימה. מרק כדורי מצה, דג גפילטה, חזה בקר מעושר,תרנגולת מצויינת ועוד!\n\t**שעות פתיחה:**\n\tראשון - שישי:  **22:00 - 11:00**\n\tשבת: **הזמנות בלבד**\n\t📍 5th District Restaurant & Café  by King Solomon (Pátá čtvrť) Siroka 8  110 00 Praha 1 - Josefov\n\t📧 info@kosher.cz  \n\t📞 [+420 224 818 752](tel:+420224818752)","source":"_posts/travel/prauge/kosher-food.md","raw":"---\ntitle: מסעדות כשרות בפראג 2023\ndescription: רשימה זאת מכילה את כל המסעדות הכשרות הכי מומלצות בפראג\ndate: 2023-12-20 10:00:00\ntags: [פראג, טיולים, מסעדות, אוכל,כשר]\ncategories: [טיולים, פראג]\ncover: https://kolha.top/images/covers/0XganQJ.jpg\n---\n רשימה זאת מכילה את כל המסעדות הכשרות הכי מומלצות בפראג, המסעדות פה לרוב יופיעו בנוסף בעמודים אחרים המציינים טיולים בפראג\n - **מסעדת שלנו** (Shelanu Dairy Restaurant/Shelanu pizzeria):\n\t![תמונה של המסעדה](https://chabadprague.cz/wp-content/uploads/2018/11/Shelanu-Pizzerie-Prague-3.jpg)\n\t פיצריית \"שלנו\" מציעה מבחר פיצות טעימות ומגוון מאכלי חלב ופרווה. פיצריית \"שלנו\" ממוקמת בלב הרובע היהודי, פסיעות ספורות מבית הכנסת של המהר\"ל.  \nפיצריית \"שלנו\" מספקת שירות משלוחים למשרדכם/מלונכם.  \n\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 11:00**\n\tיום שישי: **15:00 - 11:00**\n\t📍 Břehová 208/8, 110 00 Josefov, Czechia\n\t📧 kosher@chabadprague.cz\n\n -   **דיניץ** (Dinitz):\n\t![דיניץ](https://th.bing.com/th/id/OIP.MKPEb8oHif3B67NREVkR9gHaFj?rs=1&pid=ImgDetMain)\n\tהמסעדה הכשרה דיניץ בלב העיר העתיקה של פראג נוסדה בשנת 2008. המסעדה מציעה מבחר מגוון של מנות בשר וירקות. התפריט מבוסס על המנות הפופולריות ביותר של המטבח הישראלי, כולל סלטים ים תיכוניים, שיפודי בשר על האש וסטייקים עסיסיים. ניתן להזמין ארוחות שישי ושבת. הודות לארוחת הערב החגיגית של שבת שישי ולתפריט הצהריים של שבת, תוכלו ליהנות מהשבת כמו שהיא צריכה להיות, גם בדרכים. המסעדה מחזיקה בתעודת כשרות למהדרין ומפוקחת על ידי הרבנות הראשית של צ'כיה עד היום.\nהמסעדה ממוקמת ליד הבית הכנסת הספרדי, שנמצא רק צעדים מהכיכר העתיקה של פראג והגשר הרומנטי של צ’ארלס.\n\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 11:30**\n\tיום שישי: **15:00 - 11:30**\n\t📍 Bilkova 12 11100 Prague\n\t📞 +420 222 244 000\n\t📧 info@dinitz.cz\n\n -  **יו מילו** (U-Milo Kosher Italian dairy restaurant):\n\t![U-Milo](https://th.bing.com/th/id/OIP.GqqMNLComlSCE5tKl4_eigHaEK?rs=1&pid=ImgDetMain)\n יו מילו הוא מסעדה איטלקית כשרה חדשה שממוקמת ברחוב U Milosrdnych 4, בלב הרובע היהודי של פראג, ממש ליד מרכז חב\"ד. יו מילו הוא מסעדה צמחונית כשרה בפראג, תחת הפיקוח החמור של חב\"ד.\n\tהמסעדה מגישה מנות מהמסורת האיטלקית מוגשות עם ריחות וטעמים של המטבח הים-תיכוני, משלבות טעמים מערביים ומזרחיים. התפריט מגוון כדי למרות את כל החך; מסלטים ופסטות, למנות מבוססות דגים ומגוון של פיצות טעימות. מגוון רחב של יינות וקוקטיילים מלווים את המנות השונות ו, כמובן, לסיום, קינוחים שנוצרו במיוחד על ידי השף. יו מילו מציעה גם קייטרינג, כמו גם שירות משלוחים למשרד שלך או למלון.\n\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 8:30**\n\tיום שישי: **15:30 - 8:30**\n\tמוצאי שבת: **חצי שעה אחרי צאת השבת עד 1:00.**\n\t📍 U Milosrdných 848/4 110 00 Staré Město, Czechia\n\t📧 kosher@chabadprague.cz\n - **גריל חב\"ד** (The Chabad Grill):\n![The chabad grill image](https://machertours.com/wp-content/uploads/chabad-grill-3.jpg)\n\t מסעדת הגריל הינה מסעדה אלגנטית, איכותית וכשרה בז'אנר ישראלי, הממוקמת בלב הרובע היהודי.  \nהמסעדה מציעה תפריט עשיר ומגוון, המנות מתבססות על מרכיבים טריים ואיכותיים, המשולבים בבישול עילי: בשר על הגריל, סטייק אמריקאי, דגים, סלטים טריים ומנות פסטה נפלאות. לצד כל זה מוגשות מבחר תוספות בטעמים עשירים.  \nבמקום אף תהנו מעוגות, קינוחים מעולים וגולת הכותרת - הקיורטוש הכשר היחיד בפראג.  \nהאווירה במקום רגועה ושלווה ומלווה ביחס ביתי, חם ואוהב, המבטיח לכם חוויה של טעמים וניחוחות של אוכל יהודי.\n\t**שעות פתיחה:**\n\t\t**שעות פתיחה:**\n\tראשון - חמישי:  **22:00 - 13:00**\n\tיום שישי: **15:00 - 11:00**\n\tשבת ומוצ\"ש: **סגור**\n\t**📍 U Milosrdných 849/6, 110 00 Staré Město, Czechia\n\t📧 kosher@chabadprague.cz**\n\n- **מסעדות קינג סולומון במחוז החמישי** (5th District Restaurant & Café by King Solomon):\n **המסעדה עצמה כשרה, אך על פי האתר שלה, פתוחה בשבת, מומלץ להתקשר ולבדוק**\n\t![מסעדת המלך סולומון](https://whereyoueat.com/r_gallery_images/rgallery-17530/0001-BG.jpg)\n\tמסעדה זו היא חלום של כל אוהב אוכל. המסעדה מציעה מנות כשרות מגוונות באווירה נעימה. מרק כדורי מצה, דג גפילטה, חזה בקר מעושר,תרנגולת מצויינת ועוד!\n\t**שעות פתיחה:**\n\tראשון - שישי:  **22:00 - 11:00**\n\tשבת: **הזמנות בלבד**\n\t📍 5th District Restaurant & Café  by King Solomon (Pátá čtvrť) Siroka 8  110 00 Praha 1 - Josefov\n\t📧 info@kosher.cz  \n\t📞 [+420 224 818 752](tel:+420224818752)","slug":"travel/prauge/kosher-food","published":1,"updated":"2024-01-19T17:53:16.129Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygy2001no4vxhn3w9u7d","content":"<p> רשימה זאת מכילה את כל המסעדות הכשרות הכי מומלצות בפראג, המסעדות פה לרוב יופיעו בנוסף בעמודים אחרים המציינים טיולים בפראג</p>\n<ul>\n<li><p><strong>מסעדת שלנו</strong> (Shelanu Dairy Restaurant&#x2F;Shelanu pizzeria):<br> <img src=\"https://chabadprague.cz/wp-content/uploads/2018/11/Shelanu-Pizzerie-Prague-3.jpg\" alt=\"תמונה של המסעדה\"><br>  פיצריית &quot;שלנו&quot; מציעה מבחר פיצות טעימות ומגוון מאכלי חלב ופרווה. פיצריית &quot;שלנו&quot; ממוקמת בלב הרובע היהודי, פסיעות ספורות מבית הכנסת של המהר&quot;ל.<br>פיצריית &quot;שלנו&quot; מספקת שירות משלוחים למשרדכם&#x2F;מלונכם.<br> <strong>שעות פתיחה:</strong><br> ראשון - חמישי:  <strong>22:00 - 11:00</strong><br> יום שישי: <strong>15:00 - 11:00</strong><br> 📍 Břehová 208&#x2F;8, 110 00 Josefov, Czechia<br> 📧 <a href=\"mailto:&#107;&#111;&#115;&#x68;&#x65;&#114;&#x40;&#99;&#104;&#x61;&#98;&#x61;&#100;&#x70;&#x72;&#97;&#103;&#117;&#101;&#46;&#99;&#x7a;\">&#107;&#111;&#115;&#x68;&#x65;&#114;&#x40;&#99;&#104;&#x61;&#98;&#x61;&#100;&#x70;&#x72;&#97;&#103;&#117;&#101;&#46;&#99;&#x7a;</a></p>\n</li>\n<li><p><strong>דיניץ</strong> (Dinitz):<br><img src=\"https://th.bing.com/th/id/OIP.MKPEb8oHif3B67NREVkR9gHaFj?rs=1&pid=ImgDetMain\" alt=\"דיניץ\"><br>המסעדה הכשרה דיניץ בלב העיר העתיקה של פראג נוסדה בשנת 2008. המסעדה מציעה מבחר מגוון של מנות בשר וירקות. התפריט מבוסס על המנות הפופולריות ביותר של המטבח הישראלי, כולל סלטים ים תיכוניים, שיפודי בשר על האש וסטייקים עסיסיים. ניתן להזמין ארוחות שישי ושבת. הודות לארוחת הערב החגיגית של שבת שישי ולתפריט הצהריים של שבת, תוכלו ליהנות מהשבת כמו שהיא צריכה להיות, גם בדרכים. המסעדה מחזיקה בתעודת כשרות למהדרין ומפוקחת על ידי הרבנות הראשית של צ&#39;כיה עד היום.<br>המסעדה ממוקמת ליד הבית הכנסת הספרדי, שנמצא רק צעדים מהכיכר העתיקה של פראג והגשר הרומנטי של צ’ארלס.<br><strong>שעות פתיחה:</strong><br>ראשון - חמישי:  <strong>22:00 - 11:30</strong><br>יום שישי: <strong>15:00 - 11:30</strong><br>📍 Bilkova 12 11100 Prague<br>📞 +420 222 244 000<br>📧 <a href=\"mailto:&#105;&#110;&#x66;&#x6f;&#64;&#100;&#x69;&#110;&#x69;&#116;&#122;&#46;&#x63;&#x7a;\">&#105;&#110;&#x66;&#x6f;&#64;&#100;&#x69;&#110;&#x69;&#116;&#122;&#46;&#x63;&#x7a;</a></p>\n</li>\n<li><p><strong>יו מילו</strong> (U-Milo Kosher Italian dairy restaurant):<br><img src=\"https://th.bing.com/th/id/OIP.GqqMNLComlSCE5tKl4_eigHaEK?rs=1&pid=ImgDetMain\" alt=\"U-Milo\"><br> יו מילו הוא מסעדה איטלקית כשרה חדשה שממוקמת ברחוב U Milosrdnych 4, בלב הרובע היהודי של פראג, ממש ליד מרכז חב&quot;ד. יו מילו הוא מסעדה צמחונית כשרה בפראג, תחת הפיקוח החמור של חב&quot;ד.<br>המסעדה מגישה מנות מהמסורת האיטלקית מוגשות עם ריחות וטעמים של המטבח הים-תיכוני, משלבות טעמים מערביים ומזרחיים. התפריט מגוון כדי למרות את כל החך; מסלטים ופסטות, למנות מבוססות דגים ומגוון של פיצות טעימות. מגוון רחב של יינות וקוקטיילים מלווים את המנות השונות ו, כמובן, לסיום, קינוחים שנוצרו במיוחד על ידי השף. יו מילו מציעה גם קייטרינג, כמו גם שירות משלוחים למשרד שלך או למלון.<br><strong>שעות פתיחה:</strong><br>ראשון - חמישי:  <strong>22:00 - 8:30</strong><br>יום שישי: <strong>15:30 - 8:30</strong><br>מוצאי שבת: <strong>חצי שעה אחרי צאת השבת עד 1:00.</strong><br>📍 U Milosrdných 848&#x2F;4 110 00 Staré Město, Czechia<br>📧 <a href=\"mailto:&#x6b;&#x6f;&#115;&#x68;&#x65;&#x72;&#x40;&#x63;&#x68;&#97;&#x62;&#97;&#x64;&#112;&#x72;&#x61;&#x67;&#x75;&#x65;&#x2e;&#99;&#x7a;\">&#x6b;&#x6f;&#115;&#x68;&#x65;&#x72;&#x40;&#x63;&#x68;&#97;&#x62;&#97;&#x64;&#112;&#x72;&#x61;&#x67;&#x75;&#x65;&#x2e;&#99;&#x7a;</a></p>\n</li>\n<li><p><strong>גריל חב&quot;ד</strong> (The Chabad Grill):<br><img src=\"https://machertours.com/wp-content/uploads/chabad-grill-3.jpg\" alt=\"The chabad grill image\"><br>  מסעדת הגריל הינה מסעדה אלגנטית, איכותית וכשרה בז&#39;אנר ישראלי, הממוקמת בלב הרובע היהודי.<br>המסעדה מציעה תפריט עשיר ומגוון, המנות מתבססות על מרכיבים טריים ואיכותיים, המשולבים בבישול עילי: בשר על הגריל, סטייק אמריקאי, דגים, סלטים טריים ומנות פסטה נפלאות. לצד כל זה מוגשות מבחר תוספות בטעמים עשירים.<br>במקום אף תהנו מעוגות, קינוחים מעולים וגולת הכותרת - הקיורטוש הכשר היחיד בפראג.<br>האווירה במקום רגועה ושלווה ומלווה ביחס ביתי, חם ואוהב, המבטיח לכם חוויה של טעמים וניחוחות של אוכל יהודי.<br> <strong>שעות פתיחה:</strong><br> <strong>שעות פתיחה:</strong><br> ראשון - חמישי:  <strong>22:00 - 13:00</strong><br> יום שישי: <strong>15:00 - 11:00</strong><br> שבת ומוצ&quot;ש: <strong>סגור</strong><br> <strong>📍 U Milosrdných 849&#x2F;6, 110 00 Staré Město, Czechia<br> 📧 <a href=\"mailto:&#x6b;&#x6f;&#x73;&#104;&#x65;&#114;&#64;&#x63;&#104;&#x61;&#x62;&#x61;&#100;&#112;&#x72;&#97;&#103;&#117;&#x65;&#x2e;&#x63;&#122;\">&#x6b;&#x6f;&#x73;&#104;&#x65;&#114;&#64;&#x63;&#104;&#x61;&#x62;&#x61;&#100;&#112;&#x72;&#97;&#103;&#117;&#x65;&#x2e;&#x63;&#122;</a></strong></p>\n</li>\n<li><p><strong>מסעדות קינג סולומון במחוז החמישי</strong> (5th District Restaurant &amp; Café by King Solomon):<br> <strong>המסעדה עצמה כשרה, אך על פי האתר שלה, פתוחה בשבת, מומלץ להתקשר ולבדוק</strong><br>  <img src=\"https://whereyoueat.com/r_gallery_images/rgallery-17530/0001-BG.jpg\" alt=\"מסעדת המלך סולומון\"><br>  מסעדה זו היא חלום של כל אוהב אוכל. המסעדה מציעה מנות כשרות מגוונות באווירה נעימה. מרק כדורי מצה, דג גפילטה, חזה בקר מעושר,תרנגולת מצויינת ועוד!<br>  <strong>שעות פתיחה:</strong><br>  ראשון - שישי:  <strong>22:00 - 11:00</strong><br>  שבת: <strong>הזמנות בלבד</strong><br>  📍 5th District Restaurant &amp; Café  by King Solomon (Pátá čtvrť) Siroka 8  110 00 Praha 1 - Josefov<br>  📧 <a href=\"mailto:&#x69;&#110;&#x66;&#x6f;&#64;&#107;&#x6f;&#x73;&#x68;&#x65;&#114;&#x2e;&#99;&#x7a;\">&#x69;&#110;&#x66;&#x6f;&#64;&#107;&#x6f;&#x73;&#x68;&#x65;&#114;&#x2e;&#99;&#x7a;</a><br>  📞 <a href=\"tel:+420224818752\">+420 224 818 752</a></p>\n</li>\n</ul>\n","excerpt":"","more":"<p> רשימה זאת מכילה את כל המסעדות הכשרות הכי מומלצות בפראג, המסעדות פה לרוב יופיעו בנוסף בעמודים אחרים המציינים טיולים בפראג</p>\n<ul>\n<li><p><strong>מסעדת שלנו</strong> (Shelanu Dairy Restaurant&#x2F;Shelanu pizzeria):<br> <img src=\"https://chabadprague.cz/wp-content/uploads/2018/11/Shelanu-Pizzerie-Prague-3.jpg\" alt=\"תמונה של המסעדה\"><br>  פיצריית &quot;שלנו&quot; מציעה מבחר פיצות טעימות ומגוון מאכלי חלב ופרווה. פיצריית &quot;שלנו&quot; ממוקמת בלב הרובע היהודי, פסיעות ספורות מבית הכנסת של המהר&quot;ל.<br>פיצריית &quot;שלנו&quot; מספקת שירות משלוחים למשרדכם&#x2F;מלונכם.<br> <strong>שעות פתיחה:</strong><br> ראשון - חמישי:  <strong>22:00 - 11:00</strong><br> יום שישי: <strong>15:00 - 11:00</strong><br> 📍 Břehová 208&#x2F;8, 110 00 Josefov, Czechia<br> 📧 <a href=\"mailto:&#107;&#111;&#115;&#x68;&#x65;&#114;&#x40;&#99;&#104;&#x61;&#98;&#x61;&#100;&#x70;&#x72;&#97;&#103;&#117;&#101;&#46;&#99;&#x7a;\">&#107;&#111;&#115;&#x68;&#x65;&#114;&#x40;&#99;&#104;&#x61;&#98;&#x61;&#100;&#x70;&#x72;&#97;&#103;&#117;&#101;&#46;&#99;&#x7a;</a></p>\n</li>\n<li><p><strong>דיניץ</strong> (Dinitz):<br><img src=\"https://th.bing.com/th/id/OIP.MKPEb8oHif3B67NREVkR9gHaFj?rs=1&pid=ImgDetMain\" alt=\"דיניץ\"><br>המסעדה הכשרה דיניץ בלב העיר העתיקה של פראג נוסדה בשנת 2008. המסעדה מציעה מבחר מגוון של מנות בשר וירקות. התפריט מבוסס על המנות הפופולריות ביותר של המטבח הישראלי, כולל סלטים ים תיכוניים, שיפודי בשר על האש וסטייקים עסיסיים. ניתן להזמין ארוחות שישי ושבת. הודות לארוחת הערב החגיגית של שבת שישי ולתפריט הצהריים של שבת, תוכלו ליהנות מהשבת כמו שהיא צריכה להיות, גם בדרכים. המסעדה מחזיקה בתעודת כשרות למהדרין ומפוקחת על ידי הרבנות הראשית של צ&#39;כיה עד היום.<br>המסעדה ממוקמת ליד הבית הכנסת הספרדי, שנמצא רק צעדים מהכיכר העתיקה של פראג והגשר הרומנטי של צ’ארלס.<br><strong>שעות פתיחה:</strong><br>ראשון - חמישי:  <strong>22:00 - 11:30</strong><br>יום שישי: <strong>15:00 - 11:30</strong><br>📍 Bilkova 12 11100 Prague<br>📞 +420 222 244 000<br>📧 <a href=\"mailto:&#105;&#110;&#x66;&#x6f;&#64;&#100;&#x69;&#110;&#x69;&#116;&#122;&#46;&#x63;&#x7a;\">&#105;&#110;&#x66;&#x6f;&#64;&#100;&#x69;&#110;&#x69;&#116;&#122;&#46;&#x63;&#x7a;</a></p>\n</li>\n<li><p><strong>יו מילו</strong> (U-Milo Kosher Italian dairy restaurant):<br><img src=\"https://th.bing.com/th/id/OIP.GqqMNLComlSCE5tKl4_eigHaEK?rs=1&pid=ImgDetMain\" alt=\"U-Milo\"><br> יו מילו הוא מסעדה איטלקית כשרה חדשה שממוקמת ברחוב U Milosrdnych 4, בלב הרובע היהודי של פראג, ממש ליד מרכז חב&quot;ד. יו מילו הוא מסעדה צמחונית כשרה בפראג, תחת הפיקוח החמור של חב&quot;ד.<br>המסעדה מגישה מנות מהמסורת האיטלקית מוגשות עם ריחות וטעמים של המטבח הים-תיכוני, משלבות טעמים מערביים ומזרחיים. התפריט מגוון כדי למרות את כל החך; מסלטים ופסטות, למנות מבוססות דגים ומגוון של פיצות טעימות. מגוון רחב של יינות וקוקטיילים מלווים את המנות השונות ו, כמובן, לסיום, קינוחים שנוצרו במיוחד על ידי השף. יו מילו מציעה גם קייטרינג, כמו גם שירות משלוחים למשרד שלך או למלון.<br><strong>שעות פתיחה:</strong><br>ראשון - חמישי:  <strong>22:00 - 8:30</strong><br>יום שישי: <strong>15:30 - 8:30</strong><br>מוצאי שבת: <strong>חצי שעה אחרי צאת השבת עד 1:00.</strong><br>📍 U Milosrdných 848&#x2F;4 110 00 Staré Město, Czechia<br>📧 <a href=\"mailto:&#x6b;&#x6f;&#115;&#x68;&#x65;&#x72;&#x40;&#x63;&#x68;&#97;&#x62;&#97;&#x64;&#112;&#x72;&#x61;&#x67;&#x75;&#x65;&#x2e;&#99;&#x7a;\">&#x6b;&#x6f;&#115;&#x68;&#x65;&#x72;&#x40;&#x63;&#x68;&#97;&#x62;&#97;&#x64;&#112;&#x72;&#x61;&#x67;&#x75;&#x65;&#x2e;&#99;&#x7a;</a></p>\n</li>\n<li><p><strong>גריל חב&quot;ד</strong> (The Chabad Grill):<br><img src=\"https://machertours.com/wp-content/uploads/chabad-grill-3.jpg\" alt=\"The chabad grill image\"><br>  מסעדת הגריל הינה מסעדה אלגנטית, איכותית וכשרה בז&#39;אנר ישראלי, הממוקמת בלב הרובע היהודי.<br>המסעדה מציעה תפריט עשיר ומגוון, המנות מתבססות על מרכיבים טריים ואיכותיים, המשולבים בבישול עילי: בשר על הגריל, סטייק אמריקאי, דגים, סלטים טריים ומנות פסטה נפלאות. לצד כל זה מוגשות מבחר תוספות בטעמים עשירים.<br>במקום אף תהנו מעוגות, קינוחים מעולים וגולת הכותרת - הקיורטוש הכשר היחיד בפראג.<br>האווירה במקום רגועה ושלווה ומלווה ביחס ביתי, חם ואוהב, המבטיח לכם חוויה של טעמים וניחוחות של אוכל יהודי.<br> <strong>שעות פתיחה:</strong><br> <strong>שעות פתיחה:</strong><br> ראשון - חמישי:  <strong>22:00 - 13:00</strong><br> יום שישי: <strong>15:00 - 11:00</strong><br> שבת ומוצ&quot;ש: <strong>סגור</strong><br> <strong>📍 U Milosrdných 849&#x2F;6, 110 00 Staré Město, Czechia<br> 📧 <a href=\"mailto:&#x6b;&#x6f;&#x73;&#104;&#x65;&#114;&#64;&#x63;&#104;&#x61;&#x62;&#x61;&#100;&#112;&#x72;&#97;&#103;&#117;&#x65;&#x2e;&#x63;&#122;\">&#x6b;&#x6f;&#x73;&#104;&#x65;&#114;&#64;&#x63;&#104;&#x61;&#x62;&#x61;&#100;&#112;&#x72;&#97;&#103;&#117;&#x65;&#x2e;&#x63;&#122;</a></strong></p>\n</li>\n<li><p><strong>מסעדות קינג סולומון במחוז החמישי</strong> (5th District Restaurant &amp; Café by King Solomon):<br> <strong>המסעדה עצמה כשרה, אך על פי האתר שלה, פתוחה בשבת, מומלץ להתקשר ולבדוק</strong><br>  <img src=\"https://whereyoueat.com/r_gallery_images/rgallery-17530/0001-BG.jpg\" alt=\"מסעדת המלך סולומון\"><br>  מסעדה זו היא חלום של כל אוהב אוכל. המסעדה מציעה מנות כשרות מגוונות באווירה נעימה. מרק כדורי מצה, דג גפילטה, חזה בקר מעושר,תרנגולת מצויינת ועוד!<br>  <strong>שעות פתיחה:</strong><br>  ראשון - שישי:  <strong>22:00 - 11:00</strong><br>  שבת: <strong>הזמנות בלבד</strong><br>  📍 5th District Restaurant &amp; Café  by King Solomon (Pátá čtvrť) Siroka 8  110 00 Praha 1 - Josefov<br>  📧 <a href=\"mailto:&#x69;&#110;&#x66;&#x6f;&#64;&#107;&#x6f;&#x73;&#x68;&#x65;&#114;&#x2e;&#99;&#x7a;\">&#x69;&#110;&#x66;&#x6f;&#64;&#107;&#x6f;&#x73;&#x68;&#x65;&#114;&#x2e;&#99;&#x7a;</a><br>  📞 <a href=\"tel:+420224818752\">+420 224 818 752</a></p>\n</li>\n</ul>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"https://chabadprague.cz/wp-content/uploads/2018/11/Shelanu-Pizzerie-Prague-3.jpg","popularPost_tmp_gaData":{"updated":"Fri Jan 19 2024 19:53:16 GMT+0200 (Israel Standard Time)","title":"מסעדות כשרות בפראג 2023","path":"travel/prauge/kosher-food/","eyeCatchImage":"https://chabadprague.cz/wp-content/uploads/2018/11/Shelanu-Pizzerie-Prague-3.jpg","excerpt":"רשימה זאת מכילה את כל המסעדות הכשרות הכי מומלצות בפראג","date":{"_isAMomentObject":true,"_i":"2023-12-20T08:00:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2023-12-20T08:00:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"טיולים > פראג","tags":["אוכל","כשר","טיולים","מסעדות","פראג"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"טיול מדהים בדרך האבות ותצפית יוחאי ג'וחא קלנגל","description":"טיול מהמם בדרך האבות וטילת יוחאי ג'וחא, בנוסף עצירה בבית הקפה בחורשה שמעסיק עובדים עם צרכים מיוחדים! טיול מומלץ ומדהים","date":"2024-01-18T12:00:00.000Z","cover":"https://kolha.top/images/covers/wTNPDzx.jpg","_content":"📍 דרך האבות נווה דניאל - בוויז\n💷 ללא תשלום\n❗ ידידותי לכלבים, קיים מסלול אופניים באזור\nמסלול טיול קליל ומושלם.\n![הנוף המהמם שרואים בטיול](https://kolha.top/images/wSGtQBx/the-views-of-the-trip.jpg)\nדרך האבות וטילת יוחאי ג'וחא הם מסלול טיול קליל ומושלם שניתן לעשותו בכמה דרכים. אפשר לנסוע עם הרכב ולעצור במספר נקודות לאורך המסלול, או לעשות מסלול קווי באורך של כ 2.5 ק\"מ.\nהדרך עוברת בנוף הררי יפיפה ולאורכה מקוואות ומעיינות לטבילה צוננת. במקום שרידים מהתקופות שונות (החשמונאית, היונית) ולאורך הדרך ניתן לראות שתי אבני מיל עתיקות מהתקופה הרומאית ו- 2 מקוואות. \nתצפית יוחאי ג'וחא היא אחת מהתצפיות היפות והמיוחדות שיש בדרך האבות. למעניינים להגיע רק לתצפית זו ניתן לחנות עם הרכב ממש בסמוך ולעשות מסלול קצר וקווי של כ 400-500 מטר לכל כיון. למחפשים מקום לאכול בסביבה בנוף מדהים ומחיר סביר ביותר ישנו בית קפה הנקרא קפה בחורשה. בית קפה מושלם המעסיק אנשים עם צרכים מיוחדים.\n\nרגע לפני, מה היא דרך האבות?\n## דרך האבות\n![שלט לכיוון דרך האבות](https://kolha.top/images/fC97qBf/derech-haavot.jpg)\nדרך האבות היא דרך קדומה החוצה את ארץ ישראל לאורכה, מדרום לצפון, ומחברת בין הערים המרכזיות מהתקופות הקדומות: באר שבע, חברון, בית לחם, ירושלים, שכם, עפולה, נצרת. הדרך נקראת כך על שם האבות הביבליים שצעדו בה במסעותיהם בארץ. הדרך עוברת בשטחי מדינת ישראל והרשות הפלסטינית, וחלקה תואם את כביש 60 המודרני. בדרך ניתן למצוא שרידים ארכיאולוגיים כגון אבני מיל, מקוואות טהרה, כבשני סיד ועוד. הדרך מהווה חיבור טבעי בין רכסי שדירת ההר המרכזית של הארץ, ומעידה על ההיסטוריה, התרבות והטבע של ארץ ישראל\n\n## יוחאי ג’וחא קלנגל\n![מצפור יוחאי ודור](https://kolha.top/images/Mpb3QvK/yochai-tazpit.jpg)\nרס\"ן יוחאי - ג’וחא קלנגל ז\"ל היה בן למלכה ויוסף ברוך. יוחאי גדל מגיל ארבע באלעזר שבגוש עציון. הוא היה ילד טוב ואהוב, אשר הסקרנות אפיינה אותו מילדות. יוחאי לא קיבל שום דבר כמובן מאליו, סיפרו הוריו, הוא היה מאוד טכני וכל צעצוע שקיבל היה מפרק לגורמים כדי להבין איך זה עובד\n\nב-17.3.2008 הוא התגייס לצה\"ל והחל לשרת בחטיבת גבעתי כלוחם. יוחאי בלט במהרה ביכולותיו ובתחילת 2009 נשלח לקורס מפקדי כיתות, במסגרתו לחם במבצע “עופרת יצוקה” בדרום ב-23.9.2016 נחנך בהרי נפתלי “מצפור יוחאי ודור”, לזכר יוחאי קלנגל ודור חיים ניני, אשר הוקם בשיתוף קק\"ל ומשקיף על נוף הגליל ועל מקום נפילתם של השניים\nלאורך התצפית 8 ספסלים שכל אחד ואחד נבחר בקפידה וממוקם במיקומים מהממים!\n\n## קפה בחורשה\n![קפה בחורשה](https://kolha.top/images/KwtXc2n/cafe-bahorsha.jpg)\n׳קפה בחורשה׳ הוקם כחלק ממערך התעסוקה של סדנת שילוב, בית הקפה ממוקם במקום נעים מול נוף מרהיב ומוקף בטרסות וערוגות שבנו חברי הקהילה. המרחב הטבעי מבטא את השקפת העולם שלנו כי הסביבה משפיעה על תהליך ההתפתחות וההתקדמות של האדם, ומשרה רוגע ושלווה פנימית.\n  \nבית הקפה מאפשר לעובדים בו לרכוש כישורי עבודה על-מנת להשתלב בצורה מיטבית ולהביא את יכולותיהם לידי ביטוי. קיומו מספק לענפי התעסוקה השונים עבודה מאתגרת, ודורש לבצע את המשימות המוטלות עליהם בצורה הטובה והמקצועית ביותר שניתן, החל מהמאפייה ועד קליעת הסלים לטובת גלריית בית הקפה.  \nמבקרי בית הקפה יכולים להנות מכריכים, טוסטים, קישים ומאפים טריים המיוצרים במקום על ידי תלמידי הסדנא, ניתן לרכוש מוצרים בגלריה שנעשו על ידי סטודיו הקרמיקה, סדנת קליעת הסלים, הנגרייה ועוד.\n<small>נלקח מתוך אתר [קפה בחורשה של סדנת שילוב.](https://sadnat-shiluv.co.il/%D7%A7%D7%A4%D7%94-%D7%91%D7%97%D7%95%D7%A8%D7%A9%D7%94/)</small>\n**⏰ שעות פעילות:\n ראשון-חמישי 9:30-13:30  \nשישי 8:30-13:00  \nשלישי בערב 18:30-22:00  \nפרטים נוספים ניתן לקבל בטלפון בשעות הפעילות 02-6448519**","source":"_posts/travel/israel/yochai-joha-and-the-patriarchs-route.md","raw":"---\ntitle: טיול מדהים בדרך האבות ותצפית יוחאי ג'וחא קלנגל\ndescription: טיול מהמם בדרך האבות וטילת יוחאי ג'וחא, בנוסף עצירה בבית הקפה בחורשה שמעסיק עובדים עם צרכים מיוחדים! טיול מומלץ ומדהים\ndate: 2024-01-18 14:00:00\ntags: [ישראל,טבע,תצפית, טיולים,אוסף אטרקציות,יהודה ושומרון,מסעדות,טיולים קלילים]\ncategories: [טיולים, ישראל]\ncover: https://kolha.top/images/covers/wTNPDzx.jpg\n---\n📍 דרך האבות נווה דניאל - בוויז\n💷 ללא תשלום\n❗ ידידותי לכלבים, קיים מסלול אופניים באזור\nמסלול טיול קליל ומושלם.\n![הנוף המהמם שרואים בטיול](https://kolha.top/images/wSGtQBx/the-views-of-the-trip.jpg)\nדרך האבות וטילת יוחאי ג'וחא הם מסלול טיול קליל ומושלם שניתן לעשותו בכמה דרכים. אפשר לנסוע עם הרכב ולעצור במספר נקודות לאורך המסלול, או לעשות מסלול קווי באורך של כ 2.5 ק\"מ.\nהדרך עוברת בנוף הררי יפיפה ולאורכה מקוואות ומעיינות לטבילה צוננת. במקום שרידים מהתקופות שונות (החשמונאית, היונית) ולאורך הדרך ניתן לראות שתי אבני מיל עתיקות מהתקופה הרומאית ו- 2 מקוואות. \nתצפית יוחאי ג'וחא היא אחת מהתצפיות היפות והמיוחדות שיש בדרך האבות. למעניינים להגיע רק לתצפית זו ניתן לחנות עם הרכב ממש בסמוך ולעשות מסלול קצר וקווי של כ 400-500 מטר לכל כיון. למחפשים מקום לאכול בסביבה בנוף מדהים ומחיר סביר ביותר ישנו בית קפה הנקרא קפה בחורשה. בית קפה מושלם המעסיק אנשים עם צרכים מיוחדים.\n\nרגע לפני, מה היא דרך האבות?\n## דרך האבות\n![שלט לכיוון דרך האבות](https://kolha.top/images/fC97qBf/derech-haavot.jpg)\nדרך האבות היא דרך קדומה החוצה את ארץ ישראל לאורכה, מדרום לצפון, ומחברת בין הערים המרכזיות מהתקופות הקדומות: באר שבע, חברון, בית לחם, ירושלים, שכם, עפולה, נצרת. הדרך נקראת כך על שם האבות הביבליים שצעדו בה במסעותיהם בארץ. הדרך עוברת בשטחי מדינת ישראל והרשות הפלסטינית, וחלקה תואם את כביש 60 המודרני. בדרך ניתן למצוא שרידים ארכיאולוגיים כגון אבני מיל, מקוואות טהרה, כבשני סיד ועוד. הדרך מהווה חיבור טבעי בין רכסי שדירת ההר המרכזית של הארץ, ומעידה על ההיסטוריה, התרבות והטבע של ארץ ישראל\n\n## יוחאי ג’וחא קלנגל\n![מצפור יוחאי ודור](https://kolha.top/images/Mpb3QvK/yochai-tazpit.jpg)\nרס\"ן יוחאי - ג’וחא קלנגל ז\"ל היה בן למלכה ויוסף ברוך. יוחאי גדל מגיל ארבע באלעזר שבגוש עציון. הוא היה ילד טוב ואהוב, אשר הסקרנות אפיינה אותו מילדות. יוחאי לא קיבל שום דבר כמובן מאליו, סיפרו הוריו, הוא היה מאוד טכני וכל צעצוע שקיבל היה מפרק לגורמים כדי להבין איך זה עובד\n\nב-17.3.2008 הוא התגייס לצה\"ל והחל לשרת בחטיבת גבעתי כלוחם. יוחאי בלט במהרה ביכולותיו ובתחילת 2009 נשלח לקורס מפקדי כיתות, במסגרתו לחם במבצע “עופרת יצוקה” בדרום ב-23.9.2016 נחנך בהרי נפתלי “מצפור יוחאי ודור”, לזכר יוחאי קלנגל ודור חיים ניני, אשר הוקם בשיתוף קק\"ל ומשקיף על נוף הגליל ועל מקום נפילתם של השניים\nלאורך התצפית 8 ספסלים שכל אחד ואחד נבחר בקפידה וממוקם במיקומים מהממים!\n\n## קפה בחורשה\n![קפה בחורשה](https://kolha.top/images/KwtXc2n/cafe-bahorsha.jpg)\n׳קפה בחורשה׳ הוקם כחלק ממערך התעסוקה של סדנת שילוב, בית הקפה ממוקם במקום נעים מול נוף מרהיב ומוקף בטרסות וערוגות שבנו חברי הקהילה. המרחב הטבעי מבטא את השקפת העולם שלנו כי הסביבה משפיעה על תהליך ההתפתחות וההתקדמות של האדם, ומשרה רוגע ושלווה פנימית.\n  \nבית הקפה מאפשר לעובדים בו לרכוש כישורי עבודה על-מנת להשתלב בצורה מיטבית ולהביא את יכולותיהם לידי ביטוי. קיומו מספק לענפי התעסוקה השונים עבודה מאתגרת, ודורש לבצע את המשימות המוטלות עליהם בצורה הטובה והמקצועית ביותר שניתן, החל מהמאפייה ועד קליעת הסלים לטובת גלריית בית הקפה.  \nמבקרי בית הקפה יכולים להנות מכריכים, טוסטים, קישים ומאפים טריים המיוצרים במקום על ידי תלמידי הסדנא, ניתן לרכוש מוצרים בגלריה שנעשו על ידי סטודיו הקרמיקה, סדנת קליעת הסלים, הנגרייה ועוד.\n<small>נלקח מתוך אתר [קפה בחורשה של סדנת שילוב.](https://sadnat-shiluv.co.il/%D7%A7%D7%A4%D7%94-%D7%91%D7%97%D7%95%D7%A8%D7%A9%D7%94/)</small>\n**⏰ שעות פעילות:\n ראשון-חמישי 9:30-13:30  \nשישי 8:30-13:00  \nשלישי בערב 18:30-22:00  \nפרטים נוספים ניתן לקבל בטלפון בשעות הפעילות 02-6448519**","slug":"travel/israel/yochai-joha-and-the-patriarchs-route","published":1,"updated":"2024-01-19T17:52:10.869Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygy3001ro4vx14rp5uc5","content":"<p>📍 דרך האבות נווה דניאל - בוויז<br>💷 ללא תשלום<br>❗ ידידותי לכלבים, קיים מסלול אופניים באזור<br>מסלול טיול קליל ומושלם.<br><img src=\"https://kolha.top/images/wSGtQBx/the-views-of-the-trip.jpg\" alt=\"הנוף המהמם שרואים בטיול\"><br>דרך האבות וטילת יוחאי ג&#39;וחא הם מסלול טיול קליל ומושלם שניתן לעשותו בכמה דרכים. אפשר לנסוע עם הרכב ולעצור במספר נקודות לאורך המסלול, או לעשות מסלול קווי באורך של כ 2.5 ק&quot;מ.<br>הדרך עוברת בנוף הררי יפיפה ולאורכה מקוואות ומעיינות לטבילה צוננת. במקום שרידים מהתקופות שונות (החשמונאית, היונית) ולאורך הדרך ניתן לראות שתי אבני מיל עתיקות מהתקופה הרומאית ו- 2 מקוואות.<br>תצפית יוחאי ג&#39;וחא היא אחת מהתצפיות היפות והמיוחדות שיש בדרך האבות. למעניינים להגיע רק לתצפית זו ניתן לחנות עם הרכב ממש בסמוך ולעשות מסלול קצר וקווי של כ 400-500 מטר לכל כיון. למחפשים מקום לאכול בסביבה בנוף מדהים ומחיר סביר ביותר ישנו בית קפה הנקרא קפה בחורשה. בית קפה מושלם המעסיק אנשים עם צרכים מיוחדים.</p>\n<p>רגע לפני, מה היא דרך האבות?</p>\n<h2 id=\"דרך-האבות\"><a href=\"#דרך-האבות\" class=\"headerlink\" title=\"דרך האבות\"></a>דרך האבות</h2><p><img src=\"https://kolha.top/images/fC97qBf/derech-haavot.jpg\" alt=\"שלט לכיוון דרך האבות\"><br>דרך האבות היא דרך קדומה החוצה את ארץ ישראל לאורכה, מדרום לצפון, ומחברת בין הערים המרכזיות מהתקופות הקדומות: באר שבע, חברון, בית לחם, ירושלים, שכם, עפולה, נצרת. הדרך נקראת כך על שם האבות הביבליים שצעדו בה במסעותיהם בארץ. הדרך עוברת בשטחי מדינת ישראל והרשות הפלסטינית, וחלקה תואם את כביש 60 המודרני. בדרך ניתן למצוא שרידים ארכיאולוגיים כגון אבני מיל, מקוואות טהרה, כבשני סיד ועוד. הדרך מהווה חיבור טבעי בין רכסי שדירת ההר המרכזית של הארץ, ומעידה על ההיסטוריה, התרבות והטבע של ארץ ישראל</p>\n<h2 id=\"יוחאי-ג’וחא-קלנגל\"><a href=\"#יוחאי-ג’וחא-קלנגל\" class=\"headerlink\" title=\"יוחאי ג’וחא קלנגל\"></a>יוחאי ג’וחא קלנגל</h2><p><img src=\"https://kolha.top/images/Mpb3QvK/yochai-tazpit.jpg\" alt=\"מצפור יוחאי ודור\"><br>רס&quot;ן יוחאי - ג’וחא קלנגל ז&quot;ל היה בן למלכה ויוסף ברוך. יוחאי גדל מגיל ארבע באלעזר שבגוש עציון. הוא היה ילד טוב ואהוב, אשר הסקרנות אפיינה אותו מילדות. יוחאי לא קיבל שום דבר כמובן מאליו, סיפרו הוריו, הוא היה מאוד טכני וכל צעצוע שקיבל היה מפרק לגורמים כדי להבין איך זה עובד</p>\n<p>ב-17.3.2008 הוא התגייס לצה&quot;ל והחל לשרת בחטיבת גבעתי כלוחם. יוחאי בלט במהרה ביכולותיו ובתחילת 2009 נשלח לקורס מפקדי כיתות, במסגרתו לחם במבצע “עופרת יצוקה” בדרום ב-23.9.2016 נחנך בהרי נפתלי “מצפור יוחאי ודור”, לזכר יוחאי קלנגל ודור חיים ניני, אשר הוקם בשיתוף קק&quot;ל ומשקיף על נוף הגליל ועל מקום נפילתם של השניים<br>לאורך התצפית 8 ספסלים שכל אחד ואחד נבחר בקפידה וממוקם במיקומים מהממים!</p>\n<h2 id=\"קפה-בחורשה\"><a href=\"#קפה-בחורשה\" class=\"headerlink\" title=\"קפה בחורשה\"></a>קפה בחורשה</h2><p><img src=\"https://kolha.top/images/KwtXc2n/cafe-bahorsha.jpg\" alt=\"קפה בחורשה\"><br>׳קפה בחורשה׳ הוקם כחלק ממערך התעסוקה של סדנת שילוב, בית הקפה ממוקם במקום נעים מול נוף מרהיב ומוקף בטרסות וערוגות שבנו חברי הקהילה. המרחב הטבעי מבטא את השקפת העולם שלנו כי הסביבה משפיעה על תהליך ההתפתחות וההתקדמות של האדם, ומשרה רוגע ושלווה פנימית.</p>\n<p>בית הקפה מאפשר לעובדים בו לרכוש כישורי עבודה על-מנת להשתלב בצורה מיטבית ולהביא את יכולותיהם לידי ביטוי. קיומו מספק לענפי התעסוקה השונים עבודה מאתגרת, ודורש לבצע את המשימות המוטלות עליהם בצורה הטובה והמקצועית ביותר שניתן, החל מהמאפייה ועד קליעת הסלים לטובת גלריית בית הקפה.<br>מבקרי בית הקפה יכולים להנות מכריכים, טוסטים, קישים ומאפים טריים המיוצרים במקום על ידי תלמידי הסדנא, ניתן לרכוש מוצרים בגלריה שנעשו על ידי סטודיו הקרמיקה, סדנת קליעת הסלים, הנגרייה ועוד.<br><small>נלקח מתוך אתר <a href=\"https://sadnat-shiluv.co.il/%D7%A7%D7%A4%D7%94-%D7%91%D7%97%D7%95%D7%A8%D7%A9%D7%94/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">קפה בחורשה של סדנת שילוב.</a></small><br><strong>⏰ שעות פעילות:<br> ראשון-חמישי 9:30-13:30<br>שישי 8:30-13:00<br>שלישי בערב 18:30-22:00<br>פרטים נוספים ניתן לקבל בטלפון בשעות הפעילות 02-6448519</strong></p>\n","excerpt":"","more":"<p>📍 דרך האבות נווה דניאל - בוויז<br>💷 ללא תשלום<br>❗ ידידותי לכלבים, קיים מסלול אופניים באזור<br>מסלול טיול קליל ומושלם.<br><img src=\"https://kolha.top/images/wSGtQBx/the-views-of-the-trip.jpg\" alt=\"הנוף המהמם שרואים בטיול\"><br>דרך האבות וטילת יוחאי ג&#39;וחא הם מסלול טיול קליל ומושלם שניתן לעשותו בכמה דרכים. אפשר לנסוע עם הרכב ולעצור במספר נקודות לאורך המסלול, או לעשות מסלול קווי באורך של כ 2.5 ק&quot;מ.<br>הדרך עוברת בנוף הררי יפיפה ולאורכה מקוואות ומעיינות לטבילה צוננת. במקום שרידים מהתקופות שונות (החשמונאית, היונית) ולאורך הדרך ניתן לראות שתי אבני מיל עתיקות מהתקופה הרומאית ו- 2 מקוואות.<br>תצפית יוחאי ג&#39;וחא היא אחת מהתצפיות היפות והמיוחדות שיש בדרך האבות. למעניינים להגיע רק לתצפית זו ניתן לחנות עם הרכב ממש בסמוך ולעשות מסלול קצר וקווי של כ 400-500 מטר לכל כיון. למחפשים מקום לאכול בסביבה בנוף מדהים ומחיר סביר ביותר ישנו בית קפה הנקרא קפה בחורשה. בית קפה מושלם המעסיק אנשים עם צרכים מיוחדים.</p>\n<p>רגע לפני, מה היא דרך האבות?</p>\n<h2 id=\"דרך-האבות\"><a href=\"#דרך-האבות\" class=\"headerlink\" title=\"דרך האבות\"></a>דרך האבות</h2><p><img src=\"https://kolha.top/images/fC97qBf/derech-haavot.jpg\" alt=\"שלט לכיוון דרך האבות\"><br>דרך האבות היא דרך קדומה החוצה את ארץ ישראל לאורכה, מדרום לצפון, ומחברת בין הערים המרכזיות מהתקופות הקדומות: באר שבע, חברון, בית לחם, ירושלים, שכם, עפולה, נצרת. הדרך נקראת כך על שם האבות הביבליים שצעדו בה במסעותיהם בארץ. הדרך עוברת בשטחי מדינת ישראל והרשות הפלסטינית, וחלקה תואם את כביש 60 המודרני. בדרך ניתן למצוא שרידים ארכיאולוגיים כגון אבני מיל, מקוואות טהרה, כבשני סיד ועוד. הדרך מהווה חיבור טבעי בין רכסי שדירת ההר המרכזית של הארץ, ומעידה על ההיסטוריה, התרבות והטבע של ארץ ישראל</p>\n<h2 id=\"יוחאי-ג’וחא-קלנגל\"><a href=\"#יוחאי-ג’וחא-קלנגל\" class=\"headerlink\" title=\"יוחאי ג’וחא קלנגל\"></a>יוחאי ג’וחא קלנגל</h2><p><img src=\"https://kolha.top/images/Mpb3QvK/yochai-tazpit.jpg\" alt=\"מצפור יוחאי ודור\"><br>רס&quot;ן יוחאי - ג’וחא קלנגל ז&quot;ל היה בן למלכה ויוסף ברוך. יוחאי גדל מגיל ארבע באלעזר שבגוש עציון. הוא היה ילד טוב ואהוב, אשר הסקרנות אפיינה אותו מילדות. יוחאי לא קיבל שום דבר כמובן מאליו, סיפרו הוריו, הוא היה מאוד טכני וכל צעצוע שקיבל היה מפרק לגורמים כדי להבין איך זה עובד</p>\n<p>ב-17.3.2008 הוא התגייס לצה&quot;ל והחל לשרת בחטיבת גבעתי כלוחם. יוחאי בלט במהרה ביכולותיו ובתחילת 2009 נשלח לקורס מפקדי כיתות, במסגרתו לחם במבצע “עופרת יצוקה” בדרום ב-23.9.2016 נחנך בהרי נפתלי “מצפור יוחאי ודור”, לזכר יוחאי קלנגל ודור חיים ניני, אשר הוקם בשיתוף קק&quot;ל ומשקיף על נוף הגליל ועל מקום נפילתם של השניים<br>לאורך התצפית 8 ספסלים שכל אחד ואחד נבחר בקפידה וממוקם במיקומים מהממים!</p>\n<h2 id=\"קפה-בחורשה\"><a href=\"#קפה-בחורשה\" class=\"headerlink\" title=\"קפה בחורשה\"></a>קפה בחורשה</h2><p><img src=\"https://kolha.top/images/KwtXc2n/cafe-bahorsha.jpg\" alt=\"קפה בחורשה\"><br>׳קפה בחורשה׳ הוקם כחלק ממערך התעסוקה של סדנת שילוב, בית הקפה ממוקם במקום נעים מול נוף מרהיב ומוקף בטרסות וערוגות שבנו חברי הקהילה. המרחב הטבעי מבטא את השקפת העולם שלנו כי הסביבה משפיעה על תהליך ההתפתחות וההתקדמות של האדם, ומשרה רוגע ושלווה פנימית.</p>\n<p>בית הקפה מאפשר לעובדים בו לרכוש כישורי עבודה על-מנת להשתלב בצורה מיטבית ולהביא את יכולותיהם לידי ביטוי. קיומו מספק לענפי התעסוקה השונים עבודה מאתגרת, ודורש לבצע את המשימות המוטלות עליהם בצורה הטובה והמקצועית ביותר שניתן, החל מהמאפייה ועד קליעת הסלים לטובת גלריית בית הקפה.<br>מבקרי בית הקפה יכולים להנות מכריכים, טוסטים, קישים ומאפים טריים המיוצרים במקום על ידי תלמידי הסדנא, ניתן לרכוש מוצרים בגלריה שנעשו על ידי סטודיו הקרמיקה, סדנת קליעת הסלים, הנגרייה ועוד.<br><small>נלקח מתוך אתר <a href=\"https://sadnat-shiluv.co.il/%D7%A7%D7%A4%D7%94-%D7%91%D7%97%D7%95%D7%A8%D7%A9%D7%94/\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">קפה בחורשה של סדנת שילוב.</a></small><br><strong>⏰ שעות פעילות:<br> ראשון-חמישי 9:30-13:30<br>שישי 8:30-13:00<br>שלישי בערב 18:30-22:00<br>פרטים נוספים ניתן לקבל בטלפון בשעות הפעילות 02-6448519</strong></p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"https://kolha.top/images/wSGtQBx/the-views-of-the-trip.jpg","popularPost_tmp_gaData":{"updated":"Fri Jan 19 2024 19:52:10 GMT+0200 (Israel Standard Time)","title":"טיול מדהים בדרך האבות ותצפית יוחאי ג'וחא קלנגל","path":"travel/israel/yochai-joha-and-the-patriarchs-route/","eyeCatchImage":"https://kolha.top/images/wSGtQBx/the-views-of-the-trip.jpg","excerpt":"טיול מהמם בדרך האבות וטילת יוחאי ג'וחא, בנוסף עצירה בבית הקפה בחורשה שמעסיק עובדים עם צרכים מיוחדים! טיול מומלץ ומדהים","date":{"_isAMomentObject":true,"_i":"2024-01-18T12:00:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2024-01-18T12:00:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"טיולים > ישראל","tags":["טיולים","אוסף אטרקציות","מסעדות","ישראל","טבע","תצפית","יהודה ושומרון","טיולים קלילים"],"internalLinks":[],"keywords":[],"keywordsLength":0}},{"title":"טיול אחרי המלחמה","description":"אני יודעת עד כמה כולם רוצים לטוס,  ולכן הכנתי לכם רשימה של מדינות שעומדות לצד ישראל במלחמה, ומכילות גם נופים מרהיבים ואטרקציות נהדרות.","date":"2023-12-16T10:00:00.000Z","cover":"https://kolha.top/images/covers/ppT2gvt.jpg","pin":true,"_content":"\nזה לא סוד שאנחנו חיים במדינה שנאבקת לשמור על ביטחונה ועל זכותה לקיום בפני איומים ואתגרים רבים. למרות זאת, ישנם מדינות רבות בעולם, שמכירות בחשיבותה של ישראל כשותפה אסטרטגית, כחברה דמוקרטית וכמקור לחידוש ויצירתיות. ומראות זאת עם הפגנות תמיכה גדולות וכמה הצהרות פומביות.  \nאז אם גם אתם לא בטוחים לאן תטוסו כשהכל יגמר, הנה רשימה עם מדינות שעומדות לצד ישראל בזמנים הקשים שאנחנו נמצאים בהם.\n\n## צ’כיה\n![הפגנה פרו ישראלית בצ'כיה](https://scontent.ftlv5-1.fna.fbcdn.net/v/t39.30808-6/398352170_895896375233100_495690350793596856_n.jpg?_nc_cat=101&ccb=1-7&_nc_sid=dd5e9f&_nc_ohc=I9bvcH4XSosAX9nFeb1&_nc_ht=scontent.ftlv5-1.fna&oh=00_AfAH5K9xFlQqvCop9oziOHtW3hl9Kns2yZYgoGRJMUiXXA&oe=65872D04)\nצ’כיה היא אחת המדינות הידידותיות ביותר לישראל באירופה, ומנהלת איתה יחסים חמים וקרובים בתחומים הפוליטי, הכלכלי, התרבותי והביטחוני. צ’כיה היא גם אחת המדינות המעטות שמכירות בירושלים כבירת ישראל, ומתכננת להעביר את שגרירותה לשם בעתיד. בנוסף, צ’כיה תומכת בישראל בארגונים בינלאומיים, ומגנה על זכויותיה ועל חוקיות הפעולות שלה להגנה עצמית. במהלך המלחמה צ’כיה הציגה את הדגל הישראלי על מבנים רשמיים, ונערכו הפגנות תמיכה בישראל ברחובות\n\nאתם מוזמנים לקרוא על הכתבה שלי על [טיול אטרקציות, מסעדות בקריסמס של פראג ומחוצה לה](https://kolha.top/travel/prauge/christmas)\n\n## ארצות הברית\n![הפגנה פרו ישראלית בוושינגטון, ארצות הברית](https://i.guim.co.uk/img/media/3acbfd4f3015cc087b1682576c51293ebd9cea7f/0_151_5472_3283/master/5472.jpg?width=620&dpr=2&s=none)\nארצות הברית היא השותפה האסטרטגית העיקרית של ישראל, ומספקת לה תמיכה חזקה בתחומים הפוליטי, הכלכלי והביטחוני. ארצות הברית מכירת בירושלים כבירת ישראל, והעבירו את שגרירותן לשם בשנת 2018. ארצות הברית גם מסייעת לישראל בפיתוח וביישום מערכות הגנה מתקדמות, כגון כיפת ברזל, ומספקת לה סיוע צבאי וכלכלי רב. ארצות הברית גם מגנה על ישראל בארגונים בינלאומיים, ומנסה לקידום תהליך שלום בין ישראל לשכנותיה. באוקטובר 2023 נשיא ארצות הברית ג’ו ביידן הביע את תמיכתו בישראל, ואמר: \"נבטיח שלישראל יישארו אמצעי לחימה, נבקש מהקונגרס לנקוט פעולה מהירה למען שותפינו\". \n\nאתם מוזמנים לקרוא על הכתבה שלי על [רשימת אטרקציות מדהימה ומגוונת לטיול במיאמי](https://kolha.top/travel/america/triptomiami)\n\n\n## גרמניה\n![מחאה פרו ישראלית בגרמניה](https://www.jewishexponent.com/wp-content/uploads/2023/10/10-22-23-germany-israel-rally-2048x1138-1.webp)\nגרמניה היא ידידה ושותפה חשובה של ישראל באירופה, ומחויבת לשמירה על היחסים הטובים והמיוחדים בין המדינות. גרמניה מודעת לאחריותה ההיסטורית כלפי ישראל וכלפי העם היהודי, ומפעילה תקשורת רגילה וצמודה עם ישראל ברמות הגבוהות ביותר. גרמניה גם מספקת לישראל תמיכה כלכלית, ביטחונית ודיפלומטית, ומשתפת פעולה עם ישראל בתחומים רבים, כגון מדע, חינוך, תרבות וסביבה. בשנת 2023, גרמניה נערכה שורה של הפגנות תמיכה בישראל, בהשתתפות נשיא גרמניה פרנק-וולטר שטיינמאייר.\n**חשוב לציין כי ברחובות ישנם הרבה הפגנות פרו פלסטיניות אז מומלץ להמתין עד שהמצב ירגע**\n\n## יפן\n![מיצג לחטופים במחאה פרו ישראלית ביפן](https://www.calcalist.co.il/picserver3/crop_images/2023/11/04/r1r0JAXm6/r1r0JAXm6_0_0_2048_1536_0_large.jpg)\nישראל ויפן חולקות ערכים דמוקרטיים וחיבור תרבותי עמוק. יפן הביעה תמיכה בישראל במהלך המלחמה בעזה ב-2023, וקראה להפסקת האש ולשיח ישיר בין הצדדים\n- יפן גם חיזקה את הקשרים הכלכליים והמדעיים עם ישראל, והקימה תוכנית לאפשר לצעירים ישראלים לטייל ולעבוד במדינה במשך שנה\n[ביפן יש גם קהילה יהודית קטנה, שמקיימת קשר עם ישראל ומביעה תמיכה במדינה](https://www.kikar.co.il/world-news/s41558).\n\n## אוסטריה\n![enter image description here](https://vinnews.com/wp-content/uploads/2023/11/F9-DMQ5W8AAOk9v.jpeg)\nאוסטריה היא חברה באיחוד האירופי, ומחויבת לשלום וליציבות במזרח התיכון. אוסטריה תומכת בפתרון של שתי המדינות לסכסוך הישראלי-פלסטיני, ומגנה על האנטישמיות באירופה. אוסטריה גם מקיימת יחסים חמים עם ישראל, ומפתחת את השיתוף הכלכלי, המדעי והתרבותי בין המדינות. במהלך המלחמה בעזה ב-2023, אוסטריה הביעה תמיכה בישראל, והניפה את הדגל הישראלי במשרד החוץ בווינה. אוסטריה גם מסייעת לניצולי השואה יוצאי אוסטריה, ומעניקה להם הטבות כלכליות וחברתיות.\n**גם ברחובות אוסטריה ישנם הרבה הפגנות פרו פלסטיניות אז מומלץ להמתין עד שהמצב ירגע**\n\n## גאורגיה\n![מחאה פרו ישראלית בגאורגיה - כל הזכויות שמורות לרשת השידור הגיאורגית](https://cdn.1tv.ge/lang/app/uploads/2023/10/1697124134-1697123346-%E1%83%90%E1%83%A5%E1%83%AA%E1%83%98%E1%83%90.jpg)\nגאורגיה הכירה במדינת ישראל בשנת 1992, והקימה יחסים דיפלומטיים איתה באותה השנה. גאורגיה היא ידידה ושותפה של ישראל, ומשתפת פעולה איתה בתחומים שונים, כגון ביטחון, כלכלה, חינוך ותיירות גאורגיה תומכת בישראל בארגונים בינלאומיים, ומגנה על זכויותיה להגנה עצמית. ובמהלך המלחמה המדינה הציגה את דגל ישראל במשרד החוץ בטביליסי. \n","source":"_posts/travel/tips/haaravot-barzel.md","raw":"---\ntitle: טיול אחרי המלחמה\ndescription: אני יודעת עד כמה כולם רוצים לטוס,  ולכן הכנתי לכם רשימה של מדינות שעומדות לצד ישראל במלחמה, ומכילות גם נופים מרהיבים ואטרקציות נהדרות.\ndate: 2023-12-16 12:00:00\ntags: [טיפים, חרבות ברזל]\ncategories: [טיולים]\ncover: https://kolha.top/images/covers/ppT2gvt.jpg\npin: true\n---\n\nזה לא סוד שאנחנו חיים במדינה שנאבקת לשמור על ביטחונה ועל זכותה לקיום בפני איומים ואתגרים רבים. למרות זאת, ישנם מדינות רבות בעולם, שמכירות בחשיבותה של ישראל כשותפה אסטרטגית, כחברה דמוקרטית וכמקור לחידוש ויצירתיות. ומראות זאת עם הפגנות תמיכה גדולות וכמה הצהרות פומביות.  \nאז אם גם אתם לא בטוחים לאן תטוסו כשהכל יגמר, הנה רשימה עם מדינות שעומדות לצד ישראל בזמנים הקשים שאנחנו נמצאים בהם.\n\n## צ’כיה\n![הפגנה פרו ישראלית בצ'כיה](https://scontent.ftlv5-1.fna.fbcdn.net/v/t39.30808-6/398352170_895896375233100_495690350793596856_n.jpg?_nc_cat=101&ccb=1-7&_nc_sid=dd5e9f&_nc_ohc=I9bvcH4XSosAX9nFeb1&_nc_ht=scontent.ftlv5-1.fna&oh=00_AfAH5K9xFlQqvCop9oziOHtW3hl9Kns2yZYgoGRJMUiXXA&oe=65872D04)\nצ’כיה היא אחת המדינות הידידותיות ביותר לישראל באירופה, ומנהלת איתה יחסים חמים וקרובים בתחומים הפוליטי, הכלכלי, התרבותי והביטחוני. צ’כיה היא גם אחת המדינות המעטות שמכירות בירושלים כבירת ישראל, ומתכננת להעביר את שגרירותה לשם בעתיד. בנוסף, צ’כיה תומכת בישראל בארגונים בינלאומיים, ומגנה על זכויותיה ועל חוקיות הפעולות שלה להגנה עצמית. במהלך המלחמה צ’כיה הציגה את הדגל הישראלי על מבנים רשמיים, ונערכו הפגנות תמיכה בישראל ברחובות\n\nאתם מוזמנים לקרוא על הכתבה שלי על [טיול אטרקציות, מסעדות בקריסמס של פראג ומחוצה לה](https://kolha.top/travel/prauge/christmas)\n\n## ארצות הברית\n![הפגנה פרו ישראלית בוושינגטון, ארצות הברית](https://i.guim.co.uk/img/media/3acbfd4f3015cc087b1682576c51293ebd9cea7f/0_151_5472_3283/master/5472.jpg?width=620&dpr=2&s=none)\nארצות הברית היא השותפה האסטרטגית העיקרית של ישראל, ומספקת לה תמיכה חזקה בתחומים הפוליטי, הכלכלי והביטחוני. ארצות הברית מכירת בירושלים כבירת ישראל, והעבירו את שגרירותן לשם בשנת 2018. ארצות הברית גם מסייעת לישראל בפיתוח וביישום מערכות הגנה מתקדמות, כגון כיפת ברזל, ומספקת לה סיוע צבאי וכלכלי רב. ארצות הברית גם מגנה על ישראל בארגונים בינלאומיים, ומנסה לקידום תהליך שלום בין ישראל לשכנותיה. באוקטובר 2023 נשיא ארצות הברית ג’ו ביידן הביע את תמיכתו בישראל, ואמר: \"נבטיח שלישראל יישארו אמצעי לחימה, נבקש מהקונגרס לנקוט פעולה מהירה למען שותפינו\". \n\nאתם מוזמנים לקרוא על הכתבה שלי על [רשימת אטרקציות מדהימה ומגוונת לטיול במיאמי](https://kolha.top/travel/america/triptomiami)\n\n\n## גרמניה\n![מחאה פרו ישראלית בגרמניה](https://www.jewishexponent.com/wp-content/uploads/2023/10/10-22-23-germany-israel-rally-2048x1138-1.webp)\nגרמניה היא ידידה ושותפה חשובה של ישראל באירופה, ומחויבת לשמירה על היחסים הטובים והמיוחדים בין המדינות. גרמניה מודעת לאחריותה ההיסטורית כלפי ישראל וכלפי העם היהודי, ומפעילה תקשורת רגילה וצמודה עם ישראל ברמות הגבוהות ביותר. גרמניה גם מספקת לישראל תמיכה כלכלית, ביטחונית ודיפלומטית, ומשתפת פעולה עם ישראל בתחומים רבים, כגון מדע, חינוך, תרבות וסביבה. בשנת 2023, גרמניה נערכה שורה של הפגנות תמיכה בישראל, בהשתתפות נשיא גרמניה פרנק-וולטר שטיינמאייר.\n**חשוב לציין כי ברחובות ישנם הרבה הפגנות פרו פלסטיניות אז מומלץ להמתין עד שהמצב ירגע**\n\n## יפן\n![מיצג לחטופים במחאה פרו ישראלית ביפן](https://www.calcalist.co.il/picserver3/crop_images/2023/11/04/r1r0JAXm6/r1r0JAXm6_0_0_2048_1536_0_large.jpg)\nישראל ויפן חולקות ערכים דמוקרטיים וחיבור תרבותי עמוק. יפן הביעה תמיכה בישראל במהלך המלחמה בעזה ב-2023, וקראה להפסקת האש ולשיח ישיר בין הצדדים\n- יפן גם חיזקה את הקשרים הכלכליים והמדעיים עם ישראל, והקימה תוכנית לאפשר לצעירים ישראלים לטייל ולעבוד במדינה במשך שנה\n[ביפן יש גם קהילה יהודית קטנה, שמקיימת קשר עם ישראל ומביעה תמיכה במדינה](https://www.kikar.co.il/world-news/s41558).\n\n## אוסטריה\n![enter image description here](https://vinnews.com/wp-content/uploads/2023/11/F9-DMQ5W8AAOk9v.jpeg)\nאוסטריה היא חברה באיחוד האירופי, ומחויבת לשלום וליציבות במזרח התיכון. אוסטריה תומכת בפתרון של שתי המדינות לסכסוך הישראלי-פלסטיני, ומגנה על האנטישמיות באירופה. אוסטריה גם מקיימת יחסים חמים עם ישראל, ומפתחת את השיתוף הכלכלי, המדעי והתרבותי בין המדינות. במהלך המלחמה בעזה ב-2023, אוסטריה הביעה תמיכה בישראל, והניפה את הדגל הישראלי במשרד החוץ בווינה. אוסטריה גם מסייעת לניצולי השואה יוצאי אוסטריה, ומעניקה להם הטבות כלכליות וחברתיות.\n**גם ברחובות אוסטריה ישנם הרבה הפגנות פרו פלסטיניות אז מומלץ להמתין עד שהמצב ירגע**\n\n## גאורגיה\n![מחאה פרו ישראלית בגאורגיה - כל הזכויות שמורות לרשת השידור הגיאורגית](https://cdn.1tv.ge/lang/app/uploads/2023/10/1697124134-1697123346-%E1%83%90%E1%83%A5%E1%83%AA%E1%83%98%E1%83%90.jpg)\nגאורגיה הכירה במדינת ישראל בשנת 1992, והקימה יחסים דיפלומטיים איתה באותה השנה. גאורגיה היא ידידה ושותפה של ישראל, ומשתפת פעולה איתה בתחומים שונים, כגון ביטחון, כלכלה, חינוך ותיירות גאורגיה תומכת בישראל בארגונים בינלאומיים, ומגנה על זכויותיה להגנה עצמית. ובמהלך המלחמה המדינה הציגה את דגל ישראל במשרד החוץ בטביליסי. \n","slug":"travel/tips/haaravot-barzel","published":1,"updated":"2024-01-19T17:52:50.177Z","comments":1,"layout":"post","photos":[],"_id":"clvr3ygy4001to4vx2cwu7i2x","content":"<p>זה לא סוד שאנחנו חיים במדינה שנאבקת לשמור על ביטחונה ועל זכותה לקיום בפני איומים ואתגרים רבים. למרות זאת, ישנם מדינות רבות בעולם, שמכירות בחשיבותה של ישראל כשותפה אסטרטגית, כחברה דמוקרטית וכמקור לחידוש ויצירתיות. ומראות זאת עם הפגנות תמיכה גדולות וכמה הצהרות פומביות.<br>אז אם גם אתם לא בטוחים לאן תטוסו כשהכל יגמר, הנה רשימה עם מדינות שעומדות לצד ישראל בזמנים הקשים שאנחנו נמצאים בהם.</p>\n<h2 id=\"צ’כיה\"><a href=\"#צ’כיה\" class=\"headerlink\" title=\"צ’כיה\"></a>צ’כיה</h2><p><img src=\"https://scontent.ftlv5-1.fna.fbcdn.net/v/t39.30808-6/398352170_895896375233100_495690350793596856_n.jpg?_nc_cat=101&ccb=1-7&_nc_sid=dd5e9f&_nc_ohc=I9bvcH4XSosAX9nFeb1&_nc_ht=scontent.ftlv5-1.fna&oh=00_AfAH5K9xFlQqvCop9oziOHtW3hl9Kns2yZYgoGRJMUiXXA&oe=65872D04\" alt=\"הפגנה פרו ישראלית בצ&#39;כיה\"><br>צ’כיה היא אחת המדינות הידידותיות ביותר לישראל באירופה, ומנהלת איתה יחסים חמים וקרובים בתחומים הפוליטי, הכלכלי, התרבותי והביטחוני. צ’כיה היא גם אחת המדינות המעטות שמכירות בירושלים כבירת ישראל, ומתכננת להעביר את שגרירותה לשם בעתיד. בנוסף, צ’כיה תומכת בישראל בארגונים בינלאומיים, ומגנה על זכויותיה ועל חוקיות הפעולות שלה להגנה עצמית. במהלך המלחמה צ’כיה הציגה את הדגל הישראלי על מבנים רשמיים, ונערכו הפגנות תמיכה בישראל ברחובות</p>\n<p>אתם מוזמנים לקרוא על הכתבה שלי על <a href=\"https://kolha.top/travel/prauge/christmas\">טיול אטרקציות, מסעדות בקריסמס של פראג ומחוצה לה</a></p>\n<h2 id=\"ארצות-הברית\"><a href=\"#ארצות-הברית\" class=\"headerlink\" title=\"ארצות הברית\"></a>ארצות הברית</h2><p><img src=\"https://i.guim.co.uk/img/media/3acbfd4f3015cc087b1682576c51293ebd9cea7f/0_151_5472_3283/master/5472.jpg?width=620&dpr=2&s=none\" alt=\"הפגנה פרו ישראלית בוושינגטון, ארצות הברית\"><br>ארצות הברית היא השותפה האסטרטגית העיקרית של ישראל, ומספקת לה תמיכה חזקה בתחומים הפוליטי, הכלכלי והביטחוני. ארצות הברית מכירת בירושלים כבירת ישראל, והעבירו את שגרירותן לשם בשנת 2018. ארצות הברית גם מסייעת לישראל בפיתוח וביישום מערכות הגנה מתקדמות, כגון כיפת ברזל, ומספקת לה סיוע צבאי וכלכלי רב. ארצות הברית גם מגנה על ישראל בארגונים בינלאומיים, ומנסה לקידום תהליך שלום בין ישראל לשכנותיה. באוקטובר 2023 נשיא ארצות הברית ג’ו ביידן הביע את תמיכתו בישראל, ואמר: &quot;נבטיח שלישראל יישארו אמצעי לחימה, נבקש מהקונגרס לנקוט פעולה מהירה למען שותפינו&quot;. </p>\n<p>אתם מוזמנים לקרוא על הכתבה שלי על <a href=\"https://kolha.top/travel/america/triptomiami\">רשימת אטרקציות מדהימה ומגוונת לטיול במיאמי</a></p>\n<h2 id=\"גרמניה\"><a href=\"#גרמניה\" class=\"headerlink\" title=\"גרמניה\"></a>גרמניה</h2><p><img src=\"https://www.jewishexponent.com/wp-content/uploads/2023/10/10-22-23-germany-israel-rally-2048x1138-1.webp\" alt=\"מחאה פרו ישראלית בגרמניה\"><br>גרמניה היא ידידה ושותפה חשובה של ישראל באירופה, ומחויבת לשמירה על היחסים הטובים והמיוחדים בין המדינות. גרמניה מודעת לאחריותה ההיסטורית כלפי ישראל וכלפי העם היהודי, ומפעילה תקשורת רגילה וצמודה עם ישראל ברמות הגבוהות ביותר. גרמניה גם מספקת לישראל תמיכה כלכלית, ביטחונית ודיפלומטית, ומשתפת פעולה עם ישראל בתחומים רבים, כגון מדע, חינוך, תרבות וסביבה. בשנת 2023, גרמניה נערכה שורה של הפגנות תמיכה בישראל, בהשתתפות נשיא גרמניה פרנק-וולטר שטיינמאייר.<br><strong>חשוב לציין כי ברחובות ישנם הרבה הפגנות פרו פלסטיניות אז מומלץ להמתין עד שהמצב ירגע</strong></p>\n<h2 id=\"יפן\"><a href=\"#יפן\" class=\"headerlink\" title=\"יפן\"></a>יפן</h2><p><img src=\"https://www.calcalist.co.il/picserver3/crop_images/2023/11/04/r1r0JAXm6/r1r0JAXm6_0_0_2048_1536_0_large.jpg\" alt=\"מיצג לחטופים במחאה פרו ישראלית ביפן\"><br>ישראל ויפן חולקות ערכים דמוקרטיים וחיבור תרבותי עמוק. יפן הביעה תמיכה בישראל במהלך המלחמה בעזה ב-2023, וקראה להפסקת האש ולשיח ישיר בין הצדדים</p>\n<ul>\n<li>יפן גם חיזקה את הקשרים הכלכליים והמדעיים עם ישראל, והקימה תוכנית לאפשר לצעירים ישראלים לטייל ולעבוד במדינה במשך שנה<br><a href=\"https://www.kikar.co.il/world-news/s41558\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">ביפן יש גם קהילה יהודית קטנה, שמקיימת קשר עם ישראל ומביעה תמיכה במדינה</a>.</li>\n</ul>\n<h2 id=\"אוסטריה\"><a href=\"#אוסטריה\" class=\"headerlink\" title=\"אוסטריה\"></a>אוסטריה</h2><p><img src=\"https://vinnews.com/wp-content/uploads/2023/11/F9-DMQ5W8AAOk9v.jpeg\" alt=\"enter image description here\"><br>אוסטריה היא חברה באיחוד האירופי, ומחויבת לשלום וליציבות במזרח התיכון. אוסטריה תומכת בפתרון של שתי המדינות לסכסוך הישראלי-פלסטיני, ומגנה על האנטישמיות באירופה. אוסטריה גם מקיימת יחסים חמים עם ישראל, ומפתחת את השיתוף הכלכלי, המדעי והתרבותי בין המדינות. במהלך המלחמה בעזה ב-2023, אוסטריה הביעה תמיכה בישראל, והניפה את הדגל הישראלי במשרד החוץ בווינה. אוסטריה גם מסייעת לניצולי השואה יוצאי אוסטריה, ומעניקה להם הטבות כלכליות וחברתיות.<br><strong>גם ברחובות אוסטריה ישנם הרבה הפגנות פרו פלסטיניות אז מומלץ להמתין עד שהמצב ירגע</strong></p>\n<h2 id=\"גאורגיה\"><a href=\"#גאורגיה\" class=\"headerlink\" title=\"גאורגיה\"></a>גאורגיה</h2><p><img src=\"https://cdn.1tv.ge/lang/app/uploads/2023/10/1697124134-1697123346-%E1%83%90%E1%83%A5%E1%83%AA%E1%83%98%E1%83%90.jpg\" alt=\"מחאה פרו ישראלית בגאורגיה - כל הזכויות שמורות לרשת השידור הגיאורגית\"><br>גאורגיה הכירה במדינת ישראל בשנת 1992, והקימה יחסים דיפלומטיים איתה באותה השנה. גאורגיה היא ידידה ושותפה של ישראל, ומשתפת פעולה איתה בתחומים שונים, כגון ביטחון, כלכלה, חינוך ותיירות גאורגיה תומכת בישראל בארגונים בינלאומיים, ומגנה על זכויותיה להגנה עצמית. ובמהלך המלחמה המדינה הציגה את דגל ישראל במשרד החוץ בטביליסי. </p>\n","excerpt":"","more":"<p>זה לא סוד שאנחנו חיים במדינה שנאבקת לשמור על ביטחונה ועל זכותה לקיום בפני איומים ואתגרים רבים. למרות זאת, ישנם מדינות רבות בעולם, שמכירות בחשיבותה של ישראל כשותפה אסטרטגית, כחברה דמוקרטית וכמקור לחידוש ויצירתיות. ומראות זאת עם הפגנות תמיכה גדולות וכמה הצהרות פומביות.<br>אז אם גם אתם לא בטוחים לאן תטוסו כשהכל יגמר, הנה רשימה עם מדינות שעומדות לצד ישראל בזמנים הקשים שאנחנו נמצאים בהם.</p>\n<h2 id=\"צ’כיה\"><a href=\"#צ’כיה\" class=\"headerlink\" title=\"צ’כיה\"></a>צ’כיה</h2><p><img src=\"https://scontent.ftlv5-1.fna.fbcdn.net/v/t39.30808-6/398352170_895896375233100_495690350793596856_n.jpg?_nc_cat=101&ccb=1-7&_nc_sid=dd5e9f&_nc_ohc=I9bvcH4XSosAX9nFeb1&_nc_ht=scontent.ftlv5-1.fna&oh=00_AfAH5K9xFlQqvCop9oziOHtW3hl9Kns2yZYgoGRJMUiXXA&oe=65872D04\" alt=\"הפגנה פרו ישראלית בצ&#39;כיה\"><br>צ’כיה היא אחת המדינות הידידותיות ביותר לישראל באירופה, ומנהלת איתה יחסים חמים וקרובים בתחומים הפוליטי, הכלכלי, התרבותי והביטחוני. צ’כיה היא גם אחת המדינות המעטות שמכירות בירושלים כבירת ישראל, ומתכננת להעביר את שגרירותה לשם בעתיד. בנוסף, צ’כיה תומכת בישראל בארגונים בינלאומיים, ומגנה על זכויותיה ועל חוקיות הפעולות שלה להגנה עצמית. במהלך המלחמה צ’כיה הציגה את הדגל הישראלי על מבנים רשמיים, ונערכו הפגנות תמיכה בישראל ברחובות</p>\n<p>אתם מוזמנים לקרוא על הכתבה שלי על <a href=\"https://kolha.top/travel/prauge/christmas\">טיול אטרקציות, מסעדות בקריסמס של פראג ומחוצה לה</a></p>\n<h2 id=\"ארצות-הברית\"><a href=\"#ארצות-הברית\" class=\"headerlink\" title=\"ארצות הברית\"></a>ארצות הברית</h2><p><img src=\"https://i.guim.co.uk/img/media/3acbfd4f3015cc087b1682576c51293ebd9cea7f/0_151_5472_3283/master/5472.jpg?width=620&dpr=2&s=none\" alt=\"הפגנה פרו ישראלית בוושינגטון, ארצות הברית\"><br>ארצות הברית היא השותפה האסטרטגית העיקרית של ישראל, ומספקת לה תמיכה חזקה בתחומים הפוליטי, הכלכלי והביטחוני. ארצות הברית מכירת בירושלים כבירת ישראל, והעבירו את שגרירותן לשם בשנת 2018. ארצות הברית גם מסייעת לישראל בפיתוח וביישום מערכות הגנה מתקדמות, כגון כיפת ברזל, ומספקת לה סיוע צבאי וכלכלי רב. ארצות הברית גם מגנה על ישראל בארגונים בינלאומיים, ומנסה לקידום תהליך שלום בין ישראל לשכנותיה. באוקטובר 2023 נשיא ארצות הברית ג’ו ביידן הביע את תמיכתו בישראל, ואמר: &quot;נבטיח שלישראל יישארו אמצעי לחימה, נבקש מהקונגרס לנקוט פעולה מהירה למען שותפינו&quot;. </p>\n<p>אתם מוזמנים לקרוא על הכתבה שלי על <a href=\"https://kolha.top/travel/america/triptomiami\">רשימת אטרקציות מדהימה ומגוונת לטיול במיאמי</a></p>\n<h2 id=\"גרמניה\"><a href=\"#גרמניה\" class=\"headerlink\" title=\"גרמניה\"></a>גרמניה</h2><p><img src=\"https://www.jewishexponent.com/wp-content/uploads/2023/10/10-22-23-germany-israel-rally-2048x1138-1.webp\" alt=\"מחאה פרו ישראלית בגרמניה\"><br>גרמניה היא ידידה ושותפה חשובה של ישראל באירופה, ומחויבת לשמירה על היחסים הטובים והמיוחדים בין המדינות. גרמניה מודעת לאחריותה ההיסטורית כלפי ישראל וכלפי העם היהודי, ומפעילה תקשורת רגילה וצמודה עם ישראל ברמות הגבוהות ביותר. גרמניה גם מספקת לישראל תמיכה כלכלית, ביטחונית ודיפלומטית, ומשתפת פעולה עם ישראל בתחומים רבים, כגון מדע, חינוך, תרבות וסביבה. בשנת 2023, גרמניה נערכה שורה של הפגנות תמיכה בישראל, בהשתתפות נשיא גרמניה פרנק-וולטר שטיינמאייר.<br><strong>חשוב לציין כי ברחובות ישנם הרבה הפגנות פרו פלסטיניות אז מומלץ להמתין עד שהמצב ירגע</strong></p>\n<h2 id=\"יפן\"><a href=\"#יפן\" class=\"headerlink\" title=\"יפן\"></a>יפן</h2><p><img src=\"https://www.calcalist.co.il/picserver3/crop_images/2023/11/04/r1r0JAXm6/r1r0JAXm6_0_0_2048_1536_0_large.jpg\" alt=\"מיצג לחטופים במחאה פרו ישראלית ביפן\"><br>ישראל ויפן חולקות ערכים דמוקרטיים וחיבור תרבותי עמוק. יפן הביעה תמיכה בישראל במהלך המלחמה בעזה ב-2023, וקראה להפסקת האש ולשיח ישיר בין הצדדים</p>\n<ul>\n<li>יפן גם חיזקה את הקשרים הכלכליים והמדעיים עם ישראל, והקימה תוכנית לאפשר לצעירים ישראלים לטייל ולעבוד במדינה במשך שנה<br><a href=\"https://www.kikar.co.il/world-news/s41558\" target=\"_blank\" rel=\"noopener external nofollow noreferrer\">ביפן יש גם קהילה יהודית קטנה, שמקיימת קשר עם ישראל ומביעה תמיכה במדינה</a>.</li>\n</ul>\n<h2 id=\"אוסטריה\"><a href=\"#אוסטריה\" class=\"headerlink\" title=\"אוסטריה\"></a>אוסטריה</h2><p><img src=\"https://vinnews.com/wp-content/uploads/2023/11/F9-DMQ5W8AAOk9v.jpeg\" alt=\"enter image description here\"><br>אוסטריה היא חברה באיחוד האירופי, ומחויבת לשלום וליציבות במזרח התיכון. אוסטריה תומכת בפתרון של שתי המדינות לסכסוך הישראלי-פלסטיני, ומגנה על האנטישמיות באירופה. אוסטריה גם מקיימת יחסים חמים עם ישראל, ומפתחת את השיתוף הכלכלי, המדעי והתרבותי בין המדינות. במהלך המלחמה בעזה ב-2023, אוסטריה הביעה תמיכה בישראל, והניפה את הדגל הישראלי במשרד החוץ בווינה. אוסטריה גם מסייעת לניצולי השואה יוצאי אוסטריה, ומעניקה להם הטבות כלכליות וחברתיות.<br><strong>גם ברחובות אוסטריה ישנם הרבה הפגנות פרו פלסטיניות אז מומלץ להמתין עד שהמצב ירגע</strong></p>\n<h2 id=\"גאורגיה\"><a href=\"#גאורגיה\" class=\"headerlink\" title=\"גאורגיה\"></a>גאורגיה</h2><p><img src=\"https://cdn.1tv.ge/lang/app/uploads/2023/10/1697124134-1697123346-%E1%83%90%E1%83%A5%E1%83%AA%E1%83%98%E1%83%90.jpg\" alt=\"מחאה פרו ישראלית בגאורגיה - כל הזכויות שמורות לרשת השידור הגיאורגית\"><br>גאורגיה הכירה במדינת ישראל בשנת 1992, והקימה יחסים דיפלומטיים איתה באותה השנה. גאורגיה היא ידידה ושותפה של ישראל, ומשתפת פעולה איתה בתחומים שונים, כגון ביטחון, כלכלה, חינוך ותיירות גאורגיה תומכת בישראל בארגונים בינלאומיים, ומגנה על זכויותיה להגנה עצמית. ובמהלך המלחמה המדינה הציגה את דגל ישראל במשרד החוץ בטביליסי. </p>\n","popularPost_tmp_postPath":true,"eyeCatchImage":"https://scontent.ftlv5-1.fna.fbcdn.net/v/t39.30808-6/398352170_895896375233100_495690350793596856_n.jpg?_nc_cat=101&ccb=1-7&_nc_sid=dd5e9f&_nc_ohc=I9bvcH4XSosAX9nFeb1&_nc_ht=scontent.ftlv5-1.fna&oh=00_AfAH5K9xFlQqvCop9oziOHtW3hl9Kns2yZYgoGRJMUiXXA&oe=65872D04","popularPost_tmp_gaData":{"updated":"Fri Jan 19 2024 19:52:50 GMT+0200 (Israel Standard Time)","title":"טיול אחרי המלחמה","path":"travel/tips/haaravot-barzel/","eyeCatchImage":"https://scontent.ftlv5-1.fna.fbcdn.net/v/t39.30808-6/398352170_895896375233100_495690350793596856_n.jpg?_nc_cat=101&ccb=1-7&_nc_sid=dd5e9f&_nc_ohc=I9bvcH4XSosAX9nFeb1&_nc_ht=scontent.ftlv5-1.fna&oh=00_AfAH5K9xFlQqvCop9oziOHtW3hl9Kns2yZYgoGRJMUiXXA&oe=65872D04","excerpt":"אני יודעת עד כמה כולם רוצים לטוס,  ולכן הכנתי לכם רשימה של מדינות שעומדות לצד ישראל במלחמה, ומכילות גם נופים מרהיבים ואטרקציות נהדרות.","date":{"_isAMomentObject":true,"_i":"2023-12-16T10:00:00.000Z","_isUTC":false,"_pf":{"empty":false,"unusedTokens":[],"unusedInput":[],"overflow":-2,"charsLeftOver":0,"nullInput":false,"invalidEra":null,"invalidMonth":null,"invalidFormat":false,"userInvalidated":false,"iso":false,"parsedDateParts":[],"era":null,"meridiem":null,"rfc2822":false,"weekdayMismatch":false},"_locale":{"_calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"_longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"_invalidDate":"Invalid date","_dayOfMonthOrdinalParse":{},"_relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"_months":["January","February","March","April","May","June","July","August","September","October","November","December"],"_monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"_week":{"dow":0,"doy":6},"_weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"_weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"_weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"_meridiemParse":{},"_eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"_abbr":"en","_config":{"calendar":{"sameDay":"[Today at] LT","nextDay":"[Tomorrow at] LT","nextWeek":"dddd [at] LT","lastDay":"[Yesterday at] LT","lastWeek":"[Last] dddd [at] LT","sameElse":"L"},"longDateFormat":{"LTS":"h:mm:ss A","LT":"h:mm A","L":"MM/DD/YYYY","LL":"MMMM D, YYYY","LLL":"MMMM D, YYYY h:mm A","LLLL":"dddd, MMMM D, YYYY h:mm A"},"invalidDate":"Invalid date","dayOfMonthOrdinalParse":{},"relativeTime":{"future":"in %s","past":"%s ago","s":"a few seconds","ss":"%d seconds","m":"a minute","mm":"%d minutes","h":"an hour","hh":"%d hours","d":"a day","dd":"%d days","w":"a week","ww":"%d weeks","M":"a month","MM":"%d months","y":"a year","yy":"%d years"},"months":["January","February","March","April","May","June","July","August","September","October","November","December"],"monthsShort":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],"week":{"dow":0,"doy":6},"weekdays":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"weekdaysMin":["Su","Mo","Tu","We","Th","Fr","Sa"],"weekdaysShort":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],"meridiemParse":{},"eras":[{"since":"0001-01-01","until":null,"offset":1,"name":"Anno Domini","narrow":"AD","abbr":"AD"},{"since":"0000-12-31","until":null,"offset":1,"name":"Before Christ","narrow":"BC","abbr":"BC"}],"abbr":"en"},"_dayOfMonthOrdinalParseLenient":{}},"_d":"2023-12-16T10:00:00.000Z","_isValid":true,"_z":null},"pv":0,"totalPV":0,"categories":"טיולים","tags":["טיפים","חרבות ברזל"],"internalLinks":[],"keywords":[],"keywordsLength":0}}],"PostAsset":[],"PostCategory":[{"post_id":"clvr3ygxg0009o4vxbdre8skb","category_id":"clvr3ygxc0004o4vx9vy69otn","_id":"clvr3ygxw000wo4vx4985empr"},{"post_id":"clvr3ygxg0009o4vxbdre8skb","category_id":"clvr3ygxs000no4vxdzga5i0z","_id":"clvr3ygxx0011o4vxeym1b29o"},{"post_id":"clvr3ygx70001o4vx2wov4gfb","category_id":"clvr3ygxc0004o4vx9vy69otn","_id":"clvr3ygxy0014o4vx4qzv1m8g"},{"post_id":"clvr3ygx70001o4vx2wov4gfb","category_id":"clvr3ygxu000ro4vx0xpjdxgx","_id":"clvr3ygxz0019o4vxgpd58x1d"},{"post_id":"clvr3ygxh000bo4vx2n8dcdve","category_id":"clvr3ygxc0004o4vx9vy69otn","_id":"clvr3ygy0001co4vxhhemfnqf"},{"post_id":"clvr3ygxh000bo4vx2n8dcdve","category_id":"clvr3ygxw000xo4vx0kryazje","_id":"clvr3ygy1001fo4vxajcv5rgi"},{"post_id":"clvr3ygxj000fo4vxa60i1ale","category_id":"clvr3ygxc0004o4vx9vy69otn","_id":"clvr3ygy1001ho4vx13q96wgd"},{"post_id":"clvr3ygxj000fo4vxa60i1ale","category_id":"clvr3ygxw000xo4vx0kryazje","_id":"clvr3ygy2001lo4vx79mddruk"},{"post_id":"clvr3ygxb0003o4vxd5d981x9","category_id":"clvr3ygxc0004o4vx9vy69otn","_id":"clvr3ygy3001po4vx4yhd3ai6"},{"post_id":"clvr3ygxb0003o4vxd5d981x9","category_id":"clvr3ygy0001bo4vx2vk564dy","_id":"clvr3ygy4001so4vx3blg1rd9"},{"post_id":"clvr3ygxk000ho4vx6ttga18f","category_id":"clvr3ygxc0004o4vx9vy69otn","_id":"clvr3ygy4001vo4vx8jsg6kwl"},{"post_id":"clvr3ygxk000ho4vx6ttga18f","category_id":"clvr3ygy0001bo4vx2vk564dy","_id":"clvr3ygy5001xo4vx45ck3j0n"},{"post_id":"clvr3ygxe0007o4vxcwcnd5i2","category_id":"clvr3ygxc0004o4vx9vy69otn","_id":"clvr3ygy5001zo4vxefg0gl4x"},{"post_id":"clvr3ygxe0007o4vxcwcnd5i2","category_id":"clvr3ygxs000no4vxdzga5i0z","_id":"clvr3ygy60023o4vx4h4831ii"},{"post_id":"clvr3ygy4001to4vx2cwu7i2x","category_id":"clvr3ygy4001uo4vxgt3maqcq","_id":"clvr3ygy8002io4vx9lr09v4j"},{"post_id":"clvr3ygy1001go4vxemug3wdm","category_id":"clvr3ygy4001uo4vxgt3maqcq","_id":"clvr3ygy9002lo4vx3nc0absa"},{"post_id":"clvr3ygy1001go4vxemug3wdm","category_id":"clvr3ygy8002go4vx6n1qffp7","_id":"clvr3ygy9002no4vx6ydjf4tk"},{"post_id":"clvr3ygy1001io4vx42g7f2dr","category_id":"clvr3ygy4001uo4vxgt3maqcq","_id":"clvr3ygy9002qo4vxcisodlfu"},{"post_id":"clvr3ygy1001io4vx42g7f2dr","category_id":"clvr3ygy8002jo4vxe20se00e","_id":"clvr3ygya002ro4vxhj3whkrp"},{"post_id":"clvr3ygy2001mo4vx01exh6fz","category_id":"clvr3ygy4001uo4vxgt3maqcq","_id":"clvr3ygya002vo4vxf7g33w70"},{"post_id":"clvr3ygy2001mo4vx01exh6fz","category_id":"clvr3ygy8002jo4vxe20se00e","_id":"clvr3ygyb002xo4vx6dh52lzw"},{"post_id":"clvr3ygy2001no4vxhn3w9u7d","category_id":"clvr3ygy4001uo4vxgt3maqcq","_id":"clvr3ygyb0030o4vx4q2vavmv"},{"post_id":"clvr3ygy2001no4vxhn3w9u7d","category_id":"clvr3ygy8002jo4vxe20se00e","_id":"clvr3ygyb0032o4vxbu9d79en"},{"post_id":"clvr3ygy3001ro4vx14rp5uc5","category_id":"clvr3ygy4001uo4vxgt3maqcq","_id":"clvr3ygyb0035o4vx9j552tkg"},{"post_id":"clvr3ygy3001ro4vx14rp5uc5","category_id":"clvr3ygya002uo4vx0r259spx","_id":"clvr3ygyb0038o4vx9zf174a2"}],"PostTag":[{"post_id":"clvr3ygx70001o4vx2wov4gfb","tag_id":"clvr3ygxe0005o4vxbkere3wg","_id":"clvr3ygxw000uo4vx93ly2auw"},{"post_id":"clvr3ygx70001o4vx2wov4gfb","tag_id":"clvr3ygxh000do4vx7434farr","_id":"clvr3ygxx000yo4vxae7t4db2"},{"post_id":"clvr3ygx70001o4vx2wov4gfb","tag_id":"clvr3ygxl000jo4vxacc9e4he","_id":"clvr3ygxy0012o4vxa2tbh05i"},{"post_id":"clvr3ygx70001o4vx2wov4gfb","tag_id":"clvr3ygxs000oo4vxcuafhzgv","_id":"clvr3ygxy0015o4vxeobx7ebf"},{"post_id":"clvr3ygxb0003o4vxd5d981x9","tag_id":"clvr3ygxe0005o4vxbkere3wg","_id":"clvr3ygy5001yo4vx459g3eve"},{"post_id":"clvr3ygxb0003o4vxd5d981x9","tag_id":"clvr3ygxh000do4vx7434farr","_id":"clvr3ygy50021o4vxf2gagly9"},{"post_id":"clvr3ygxb0003o4vxd5d981x9","tag_id":"clvr3ygxy0017o4vxgyfdhcjx","_id":"clvr3ygy60024o4vxc34tdpuf"},{"post_id":"clvr3ygxb0003o4vxd5d981x9","tag_id":"clvr3ygy0001eo4vxbda5dirf","_id":"clvr3ygy60026o4vxeynpc6fn"},{"post_id":"clvr3ygxb0003o4vxd5d981x9","tag_id":"clvr3ygy2001ko4vxec8v6q25","_id":"clvr3ygy60028o4vxdxlm609k"},{"post_id":"clvr3ygxb0003o4vxd5d981x9","tag_id":"clvr3ygxs000oo4vxcuafhzgv","_id":"clvr3ygy7002ao4vxd1wfdqlv"},{"post_id":"clvr3ygxe0007o4vxcwcnd5i2","tag_id":"clvr3ygxe0005o4vxbkere3wg","_id":"clvr3ygya002to4vx9p334di1"},{"post_id":"clvr3ygxe0007o4vxcwcnd5i2","tag_id":"clvr3ygxh000do4vx7434farr","_id":"clvr3ygyb002wo4vx122r8xsg"},{"post_id":"clvr3ygxe0007o4vxcwcnd5i2","tag_id":"clvr3ygy60027o4vx4fmi1wl6","_id":"clvr3ygyb002zo4vx8wi8ezoc"},{"post_id":"clvr3ygxe0007o4vxcwcnd5i2","tag_id":"clvr3ygxs000oo4vxcuafhzgv","_id":"clvr3ygyb0031o4vxg7c0bxpx"},{"post_id":"clvr3ygxe0007o4vxcwcnd5i2","tag_id":"clvr3ygy7002do4vxbzzsczr7","_id":"clvr3ygyb0034o4vxbb9ugcnc"},{"post_id":"clvr3ygxe0007o4vxcwcnd5i2","tag_id":"clvr3ygy8002fo4vxdyvj1biz","_id":"clvr3ygyb0036o4vxgh01dk70"},{"post_id":"clvr3ygxe0007o4vxcwcnd5i2","tag_id":"clvr3ygy8002ho4vx6xubdud9","_id":"clvr3ygyc0039o4vxfkv731vz"},{"post_id":"clvr3ygxe0007o4vxcwcnd5i2","tag_id":"clvr3ygy8002fo4vxdyvj1biz","_id":"clvr3ygyc003ao4vx79t3f0vh"},{"post_id":"clvr3ygxe0007o4vxcwcnd5i2","tag_id":"clvr3ygy9002oo4vxb0ztb4dz","_id":"clvr3ygyc003co4vx78xg2huj"},{"post_id":"clvr3ygxg0009o4vxbdre8skb","tag_id":"clvr3ygxe0005o4vxbkere3wg","_id":"clvr3ygyd003ho4vxaj0u5ynm"},{"post_id":"clvr3ygxg0009o4vxbdre8skb","tag_id":"clvr3ygxh000do4vx7434farr","_id":"clvr3ygyd003io4vxcl2jhggq"},{"post_id":"clvr3ygxg0009o4vxbdre8skb","tag_id":"clvr3ygy60027o4vx4fmi1wl6","_id":"clvr3ygyd003ko4vxd73dgple"},{"post_id":"clvr3ygxg0009o4vxbdre8skb","tag_id":"clvr3ygxs000oo4vxcuafhzgv","_id":"clvr3ygyd003lo4vxd11269n8"},{"post_id":"clvr3ygxg0009o4vxbdre8skb","tag_id":"clvr3ygy7002do4vxbzzsczr7","_id":"clvr3ygyd003no4vx1pqbaipk"},{"post_id":"clvr3ygxg0009o4vxbdre8skb","tag_id":"clvr3ygy8002fo4vxdyvj1biz","_id":"clvr3ygyd003oo4vx8mxl2upg"},{"post_id":"clvr3ygxg0009o4vxbdre8skb","tag_id":"clvr3ygy8002ho4vx6xubdud9","_id":"clvr3ygyd003qo4vxcvg70ssr"},{"post_id":"clvr3ygxg0009o4vxbdre8skb","tag_id":"clvr3ygy8002fo4vxdyvj1biz","_id":"clvr3ygyd003ro4vx3cp48m1p"},{"post_id":"clvr3ygxg0009o4vxbdre8skb","tag_id":"clvr3ygy9002oo4vxb0ztb4dz","_id":"clvr3ygye003to4vx25bl0cin"},{"post_id":"clvr3ygxh000bo4vx2n8dcdve","tag_id":"clvr3ygxe0005o4vxbkere3wg","_id":"clvr3ygye003yo4vxa1kagjf6"},{"post_id":"clvr3ygxh000bo4vx2n8dcdve","tag_id":"clvr3ygxh000do4vx7434farr","_id":"clvr3ygyf003zo4vx3jcuffhr"},{"post_id":"clvr3ygxh000bo4vx2n8dcdve","tag_id":"clvr3ygyd003jo4vx9myc9mef","_id":"clvr3ygyf0041o4vx4ivg8pzd"},{"post_id":"clvr3ygxh000bo4vx2n8dcdve","tag_id":"clvr3ygxs000oo4vxcuafhzgv","_id":"clvr3ygyf0042o4vxgprfadoa"},{"post_id":"clvr3ygxh000bo4vx2n8dcdve","tag_id":"clvr3ygy7002do4vxbzzsczr7","_id":"clvr3ygyf0044o4vx92l63wms"},{"post_id":"clvr3ygxh000bo4vx2n8dcdve","tag_id":"clvr3ygy8002fo4vxdyvj1biz","_id":"clvr3ygyf0045o4vx4ulvhif0"},{"post_id":"clvr3ygxh000bo4vx2n8dcdve","tag_id":"clvr3ygy8002ho4vx6xubdud9","_id":"clvr3ygyf0047o4vxc37hgi2j"},{"post_id":"clvr3ygxh000bo4vx2n8dcdve","tag_id":"clvr3ygy8002fo4vxdyvj1biz","_id":"clvr3ygyf0048o4vxfdjnh0q5"},{"post_id":"clvr3ygxh000bo4vx2n8dcdve","tag_id":"clvr3ygy9002oo4vxb0ztb4dz","_id":"clvr3ygyf004ao4vxfm1xhfzg"},{"post_id":"clvr3ygxj000fo4vxa60i1ale","tag_id":"clvr3ygxe0005o4vxbkere3wg","_id":"clvr3ygyg004eo4vx67uq27gd"},{"post_id":"clvr3ygxj000fo4vxa60i1ale","tag_id":"clvr3ygxh000do4vx7434farr","_id":"clvr3ygyg004fo4vx41wj56ek"},{"post_id":"clvr3ygxj000fo4vxa60i1ale","tag_id":"clvr3ygyd003jo4vx9myc9mef","_id":"clvr3ygyg004ho4vx0dfofmco"},{"post_id":"clvr3ygxj000fo4vxa60i1ale","tag_id":"clvr3ygyf0040o4vx41zwaf4s","_id":"clvr3ygyg004io4vx38dwfx93"},{"post_id":"clvr3ygxj000fo4vxa60i1ale","tag_id":"clvr3ygxs000oo4vxcuafhzgv","_id":"clvr3ygyg004ko4vx9yiy9q6i"},{"post_id":"clvr3ygxj000fo4vxa60i1ale","tag_id":"clvr3ygy7002do4vxbzzsczr7","_id":"clvr3ygyh004lo4vx74ya50a3"},{"post_id":"clvr3ygxj000fo4vxa60i1ale","tag_id":"clvr3ygy8002ho4vx6xubdud9","_id":"clvr3ygyh004no4vx74l0ei8o"},{"post_id":"clvr3ygxj000fo4vxa60i1ale","tag_id":"clvr3ygy9002oo4vxb0ztb4dz","_id":"clvr3ygyh004oo4vxbv4rgzr5"},{"post_id":"clvr3ygxj000fo4vxa60i1ale","tag_id":"clvr3ygy8002fo4vxdyvj1biz","_id":"clvr3ygyh004qo4vx72pz61el"},{"post_id":"clvr3ygxk000ho4vx6ttga18f","tag_id":"clvr3ygxe0005o4vxbkere3wg","_id":"clvr3ygyh004ro4vxf0dh4g1o"},{"post_id":"clvr3ygxk000ho4vx6ttga18f","tag_id":"clvr3ygxh000do4vx7434farr","_id":"clvr3ygyh004to4vxct5p4nmn"},{"post_id":"clvr3ygxk000ho4vx6ttga18f","tag_id":"clvr3ygxy0017o4vxgyfdhcjx","_id":"clvr3ygyh004uo4vxau2xai4u"},{"post_id":"clvr3ygxk000ho4vx6ttga18f","tag_id":"clvr3ygy0001eo4vxbda5dirf","_id":"clvr3ygyh004wo4vxctexcf66"},{"post_id":"clvr3ygxk000ho4vx6ttga18f","tag_id":"clvr3ygxs000oo4vxcuafhzgv","_id":"clvr3ygyh004xo4vx14n508pw"},{"post_id":"clvr3ygy1001go4vxemug3wdm","tag_id":"clvr3ygyh004mo4vx0vm5diaa","_id":"clvr3ygyi0051o4vxh1pq40z0"},{"post_id":"clvr3ygy1001go4vxemug3wdm","tag_id":"clvr3ygyh004po4vx914hcb9h","_id":"clvr3ygyi0052o4vx7jkt7tq0"},{"post_id":"clvr3ygy1001go4vxemug3wdm","tag_id":"clvr3ygyh004so4vxf1f9fboo","_id":"clvr3ygyi0054o4vx0u5a7t64"},{"post_id":"clvr3ygy1001go4vxemug3wdm","tag_id":"clvr3ygyh004vo4vx0uo4714h","_id":"clvr3ygyi0055o4vxaqxx72du"},{"post_id":"clvr3ygy1001go4vxemug3wdm","tag_id":"clvr3ygyh004yo4vx3b1aabbt","_id":"clvr3ygyj0057o4vx8dk327lx"},{"post_id":"clvr3ygy1001go4vxemug3wdm","tag_id":"clvr3ygyi004zo4vx0ief4thj","_id":"clvr3ygyj0058o4vx8hsz80gc"},{"post_id":"clvr3ygy1001io4vx42g7f2dr","tag_id":"clvr3ygyi0050o4vxe32tazzj","_id":"clvr3ygyj005co4vxcv1o8lde"},{"post_id":"clvr3ygy1001io4vx42g7f2dr","tag_id":"clvr3ygyh004po4vx914hcb9h","_id":"clvr3ygyj005do4vx3wv61o8i"},{"post_id":"clvr3ygy1001io4vx42g7f2dr","tag_id":"clvr3ygyf0040o4vx41zwaf4s","_id":"clvr3ygyk005fo4vxeubo92pb"},{"post_id":"clvr3ygy1001io4vx42g7f2dr","tag_id":"clvr3ygyh004vo4vx0uo4714h","_id":"clvr3ygyk005go4vx60v84eps"},{"post_id":"clvr3ygy1001io4vx42g7f2dr","tag_id":"clvr3ygyj005ao4vxd6fxbk7b","_id":"clvr3ygyk005io4vx77y47cm1"},{"post_id":"clvr3ygy2001mo4vx01exh6fz","tag_id":"clvr3ygyi0050o4vxe32tazzj","_id":"clvr3ygyl005mo4vxah4z15l9"},{"post_id":"clvr3ygy2001mo4vx01exh6fz","tag_id":"clvr3ygyh004po4vx914hcb9h","_id":"clvr3ygyl005no4vxfqc585qb"},{"post_id":"clvr3ygy2001mo4vx01exh6fz","tag_id":"clvr3ygyf0040o4vx41zwaf4s","_id":"clvr3ygyl005po4vx6rjwd424"},{"post_id":"clvr3ygy2001mo4vx01exh6fz","tag_id":"clvr3ygyh004vo4vx0uo4714h","_id":"clvr3ygyl005qo4vxh4ntdwzj"},{"post_id":"clvr3ygy2001mo4vx01exh6fz","tag_id":"clvr3ygyh004yo4vx3b1aabbt","_id":"clvr3ygyl005so4vxfm3k0s2b"},{"post_id":"clvr3ygy2001no4vxhn3w9u7d","tag_id":"clvr3ygyi0050o4vxe32tazzj","_id":"clvr3ygyl005uo4vx99od9yjv"},{"post_id":"clvr3ygy2001no4vxhn3w9u7d","tag_id":"clvr3ygyh004po4vx914hcb9h","_id":"clvr3ygyl005vo4vx11shfa7d"},{"post_id":"clvr3ygy2001no4vxhn3w9u7d","tag_id":"clvr3ygyh004yo4vx3b1aabbt","_id":"clvr3ygym005xo4vx6ohp5p92"},{"post_id":"clvr3ygy2001no4vxhn3w9u7d","tag_id":"clvr3ygxe0005o4vxbkere3wg","_id":"clvr3ygym005yo4vx9y7wd9w6"},{"post_id":"clvr3ygy2001no4vxhn3w9u7d","tag_id":"clvr3ygxs000oo4vxcuafhzgv","_id":"clvr3ygym0060o4vxe0743cvr"},{"post_id":"clvr3ygy3001ro4vx14rp5uc5","tag_id":"clvr3ygyl005to4vxbpliaojk","_id":"clvr3ygyn0067o4vx17kb20m0"},{"post_id":"clvr3ygy3001ro4vx14rp5uc5","tag_id":"clvr3ygyl005wo4vxf669e1qu","_id":"clvr3ygyn0068o4vxeeqyhrwc"},{"post_id":"clvr3ygy3001ro4vx14rp5uc5","tag_id":"clvr3ygym005zo4vxgfmocjk3","_id":"clvr3ygyo006ao4vx1jljahh4"},{"post_id":"clvr3ygy3001ro4vx14rp5uc5","tag_id":"clvr3ygyh004po4vx914hcb9h","_id":"clvr3ygyo006bo4vx8f1geh01"},{"post_id":"clvr3ygy3001ro4vx14rp5uc5","tag_id":"clvr3ygyh004vo4vx0uo4714h","_id":"clvr3ygyo006co4vx4qzvfbbr"},{"post_id":"clvr3ygy3001ro4vx14rp5uc5","tag_id":"clvr3ygym0063o4vx1bo54zkp","_id":"clvr3ygyo006do4vx28n7bcmd"},{"post_id":"clvr3ygy3001ro4vx14rp5uc5","tag_id":"clvr3ygyh004yo4vx3b1aabbt","_id":"clvr3ygyo006eo4vxggo2d9wp"},{"post_id":"clvr3ygy3001ro4vx14rp5uc5","tag_id":"clvr3ygyn0065o4vx91gl2khl","_id":"clvr3ygyo006fo4vxf6y400qv"},{"post_id":"clvr3ygy4001to4vx2cwu7i2x","tag_id":"clvr3ygyn0066o4vx0mr7gipa","_id":"clvr3ygyo006go4vx50uq714o"},{"post_id":"clvr3ygy4001to4vx2cwu7i2x","tag_id":"clvr3ygyn0069o4vxdf1nfrpe","_id":"clvr3ygyo006ho4vx9xtienng"}],"Tag":[{"name":"אוכל","_id":"clvr3ygxe0005o4vxbkere3wg"},{"name":"מתכונים","_id":"clvr3ygxh000do4vx7434farr"},{"name":"סלטים","_id":"clvr3ygxl000jo4vxacc9e4he"},{"name":"כשר","_id":"clvr3ygxs000oo4vxcuafhzgv"},{"name":"מזרח תיכוני","_id":"clvr3ygxy0017o4vxgyfdhcjx"},{"name":"בשר","_id":"clvr3ygy0001eo4vxbda5dirf"},{"name":"פיתה","_id":"clvr3ygy2001ko4vxec8v6q25"},{"name":"עוגות","_id":"clvr3ygy60027o4vx4fmi1wl6"},{"name":"מתוק","_id":"clvr3ygy7002do4vxbzzsczr7"},{"name":"שוקולד","_id":"clvr3ygy8002fo4vxdyvj1biz"},{"name":"אוכל שילדים אוהבים","_id":"clvr3ygy8002ho4vx6xubdud9"},{"name":"קינוחים","_id":"clvr3ygy9002oo4vxb0ztb4dz"},{"name":"עוגיות","_id":"clvr3ygyd003jo4vx9myc9mef"},{"name":"כריסמס","_id":"clvr3ygyf0040o4vx41zwaf4s"},{"name":"מיאמי","_id":"clvr3ygyh004mo4vx0vm5diaa"},{"name":"טיולים","_id":"clvr3ygyh004po4vx914hcb9h"},{"name":"קיץ","_id":"clvr3ygyh004so4vxf1f9fboo"},{"name":"אוסף אטרקציות","_id":"clvr3ygyh004vo4vx0uo4714h"},{"name":"מסעדות","_id":"clvr3ygyh004yo4vx3b1aabbt"},{"name":"ארצות הברית","_id":"clvr3ygyi004zo4vx0ief4thj"},{"name":"פראג","_id":"clvr3ygyi0050o4vxe32tazzj"},{"name":"שווקים","_id":"clvr3ygyj005ao4vxd6fxbk7b"},{"name":"ישראל","_id":"clvr3ygyl005to4vxbpliaojk"},{"name":"טבע","_id":"clvr3ygyl005wo4vxf669e1qu"},{"name":"תצפית","_id":"clvr3ygym005zo4vxgfmocjk3"},{"name":"יהודה ושומרון","_id":"clvr3ygym0063o4vx1bo54zkp"},{"name":"טיולים קלילים","_id":"clvr3ygyn0065o4vx91gl2khl"},{"name":"טיפים","_id":"clvr3ygyn0066o4vx0mr7gipa"},{"name":"חרבות ברזל","_id":"clvr3ygyn0069o4vxdf1nfrpe"}]}}